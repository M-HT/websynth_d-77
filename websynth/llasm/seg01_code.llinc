proc loc_401000
;push ecx
PUSH ecx

;push ebx
PUSH ebx

;push esi
PUSH esi

;push edi
PUSH edi

;mov eax, loc_41FEB8
mov eax, loc_41FEB8

;mov [esp+0xc], ecx
add tmpadr, esp, 12
store ecx, tmpadr, 4

;xor edi, edi
xor edi, edi, edi

;mov [loc_41FEBC], eax
store eax, loc_41FEBC, 4

;mov [loc_41FEB8], eax
store eax, loc_41FEB8, 4

;mov [loc_41FF18], edi
store edi, loc_41FF18, 4

;mov dword [loc_41FEB4], loc_41FEB0
mov tmp1, loc_41FEB0
store tmp1, loc_41FEB4, 4

;mov esi, loc_41FEB0
mov esi, loc_41FEB0

;xor ebx, ebx
xor ebx, ebx, ebx

;mov eax, loc_41E6C4
mov eax, loc_41E6C4

;mov cl, 0xff
and ecx, ecx, 0xffffff00
or ecx, ecx, 0xff

tcall loc_401037
endp

proc loc_401037
;lea edx, [eax-0x14]
add edx, eax, -20

;mov [eax-0xc], edi
add tmpadr, eax, -12
store edi, tmpadr, 1

;mov [eax], edi
store edi, eax, 1

;mov [eax+0x18], bl
add tmpadr, eax, 24
store8 ebx, tmpadr, 1

;mov [edx], esi
store esi, edx, 1

;mov [esi+0x4], edx
add tmpadr, esi, 4
store edx, tmpadr, 1

;mov dword [eax-0x10], loc_41FEB0
add tmpadr, eax, -16
mov tmp1, loc_41FEB0
store tmp1, tmpadr, 1

;mov [eax-0x4], edi
add tmpadr, eax, -4
store edi, tmpadr, 1

;mov byte [eax+0x5], 0x1
add tmpadr, eax, 5
mov tmp1, 0x1
store8 tmp1, tmpadr, 1

;mov [eax-0x8], edi
add tmpadr, eax, -8
store edi, tmpadr, 1

;mov [eax+0x6], cl
add tmpadr, eax, 6
store8 ecx, tmpadr, 1

;add eax, 0x30
add eax, eax, 48

;inc ebx
add ebx, ebx, 1

;cmp eax, loc_41FEC4
mov tmp1, loc_41FEC4
cmovslt eax, tmp1, tmpcnd, 0, 1

;mov esi, edx
mov esi, edx

;jl short loc_401037
ctcallz tmpcnd, loc_401037

tcall loc_401068
endp

proc loc_401068
;mov ecx, [esp+0xc]
add tmpadr, esp, 12
load ecx, tmpadr, 4

;mov [loc_41FEB0], esi
store esi, loc_41FEB0, 4

;call loc_401FE0
PUSH loc_401077
tcall loc_401FE0
endp

proc loc_401077
;pop edi
POP edi

;pop esi
POP esi

;pop ebx
POP ebx

;pop ecx
POP ecx

;ret
POP tmp1
tcall tmp1
endp

proc loc_401080
;sub esp, 0x1c
sub esp, esp, 28

;push ebx
PUSH ebx

;push ebp
PUSH ebp

;push esi
PUSH esi

;mov ebx, edx
mov ebx, edx

;push edi
PUSH edi

;mov edi, ebx
mov edi, ebx

;and edi, 0xff
and edi, edi, 0xff

;mov esi, ecx
mov esi, ecx

;mov eax, edi
mov eax, edi

;mov ecx, edi
mov ecx, edi

;shr eax, 0x3
lshr eax, eax, 3

;and ecx, 0x7
and ecx, ecx, 0x7

;mov [esp+0x14], ebx
add tmpadr, esp, 20
store ebx, tmpadr, 4

;lea eax, [eax+esi+0x61]
add tmpadr, eax, esi
add eax, tmpadr, 97

;mov dword [esp+0x18], 0x1
add tmpadr, esp, 24
mov tmp1, 0x1
store tmp1, tmpadr, 4

;mov dl, [ecx+loc_41B030]
mov tmpadr, loc_41B030
add tmpadr, tmpadr, ecx
load8z tmp0, tmpadr, 1
and edx, edx, 0xffffff00
or edx, edx, tmp0

;mov byte [esp+0x13], 0xff
add tmpadr, esp, 19
mov tmp1, 0xff
store8 tmp1, tmpadr, 1

;mov cl, [eax]
load8z tmp0, eax, 1
and ecx, ecx, 0xffffff00
or ecx, ecx, tmp0

;mov [esp+0x1c], edi
add tmpadr, esp, 28
store edi, tmpadr, 4

;or cl, dl
and tmp4, edx, 0xff
or ecx, ecx, tmp4

;mov [eax], cl
store8 ecx, eax, 1

;mov dl, [esi+0x5f]
add tmpadr, esi, 95
load8z tmp0, tmpadr, 1
and edx, edx, 0xffffff00
or edx, edx, tmp0

;inc dl
add tmp3, edx, 1
ins8ll edx, edx, tmp3

;mov ecx, esi
mov ecx, esi

;mov [esi+0x5f], dl
add tmpadr, esi, 95
store8 edx, tmpadr, 1

;mov dl, bl
ins8ll edx, edx, ebx

;call loc_405C80
PUSH loc_4010D3
tcall loc_405C80
endp

proc loc_4010D3
;test eax, eax
mov tmpcnd, eax

;mov [esp+0x20], eax
add tmpadr, esp, 32
store eax, tmpadr, 4

;jz short loc_4010F3
ctcallz tmpcnd, loc_4010F3

tcall loc_4010DB
endp

proc loc_4010DB
;mov ecx, [esp+0x30]
add tmpadr, esp, 48
load ecx, tmpadr, 4

;lea edx, [esp+0x24]
add edx, esp, 36

;push ecx
PUSH ecx

;mov ecx, eax
mov ecx, eax

;call loc_405CC0
PUSH loc_4010EB
tcall loc_405CC0
endp

proc loc_4010EB
;mov eax, [esp+0x24]
add tmpadr, esp, 36
load eax, tmpadr, 4

;test eax, eax
mov tmpcnd, eax

;jnz short loc_40110D
ctcallnz tmpcnd, loc_40110D

tcall loc_4010F3
endp

proc loc_4010F3
;mov al, [edi+esi+0x81]
add tmpadr, edi, esi
add tmpadr, tmpadr, 129
load8z tmp0, tmpadr, 1
and eax, eax, 0xffffff00
or eax, eax, tmp0

;inc al
add tmp3, eax, 1
ins8ll eax, eax, tmp3

;mov [edi+esi+0x81], al
add tmpadr, edi, esi
add tmpadr, tmpadr, 129
store8 eax, tmpadr, 1

;pop edi
POP edi

;pop esi
POP esi

;pop ebp
POP ebp

;pop ebx
POP ebx

;add esp, 0x1c
add esp, esp, 28

;ret 0x4
POP tmp1
add esp, esp, 4
tcall tmp1
endp

proc loc_40110D
;mov eax, [esi+0x1c]
add tmpadr, esi, 28
load eax, tmpadr, 1

;test eax, eax
mov tmpcnd, eax

;jz near loc_401246
ctcallz tmpcnd, loc_401246

tcall loc_401118
endp

proc loc_401118
;mov al, [eax+edi+0x3]
add tmpadr, eax, edi
add tmpadr, tmpadr, 3
load8z tmp0, tmpadr, 1
and eax, eax, 0xffffff00
or eax, eax, tmp0

;mov [esp+0x13], al
add tmpadr, esp, 19
store8 eax, tmpadr, 1

;mov bl, al
ins8ll ebx, ebx, eax

;mov al, [esi+0x57]
add tmpadr, esi, 87
load8z tmp0, tmpadr, 1
and eax, eax, 0xffffff00
or eax, eax, tmp0

;and bl, 0x7f
and ebx, ebx, 0xffffff7f

;test al, al
and tmpcnd, eax, 0xff

;jz near loc_4011D9
ctcallz tmpcnd, loc_4011D9

tcall loc_401130
endp

proc loc_401130
;mov ecx, [esi+0x10]
add tmpadr, esi, 16
load ecx, tmpadr, 1

;lea ebp, [esi+0x10]
add ebp, esi, 16

;cmp ecx, ebp
cmoveq ecx, ebp, tmpcnd, 0, 1

;jz short loc_401162
ctcallz tmpcnd, loc_401162

tcall loc_40113A
endp

proc loc_40113A
;cmp [ecx+0x1a], bl
add tmpadr, ecx, 26
load8z tmp1, tmpadr, 1
sub tmp1, tmp1, ebx
and tmpcnd, tmp1, 0xff

;jnz short loc_40115C
ctcallnz tmpcnd, loc_40115C

tcall loc_40113F
endp

proc loc_40113F
;mov edx, [ecx]
load edx, ecx, 1

;mov edi, [ecx+0x4]
add tmpadr, ecx, 4
load edi, tmpadr, 1

;mov [edx+0x4], edi
add tmpadr, edx, 4
store edi, tmpadr, 1

;mov eax, [ecx+0x4]
add tmpadr, ecx, 4
load eax, tmpadr, 1

;mov edx, [ecx]
load edx, ecx, 1

;mov [eax], edx
store edx, eax, 1

;call loc_401900
PUSH loc_401153
tcall loc_401900
endp

proc loc_401153
;mov al, [esi+0x57]
add tmpadr, esi, 87
load8z tmp0, tmpadr, 1
and eax, eax, 0xffffff00
or eax, eax, tmp0

;test al, al
and tmpcnd, eax, 0xff

;jz short loc_4011D9
ctcallz tmpcnd, loc_4011D9

tcall loc_40115A
endp

proc loc_40115A
;mov ecx, edi
mov ecx, edi

tcall loc_40115C
endp

proc loc_40115C
;mov ecx, [ecx]
load ecx, ecx, 1

;cmp ecx, ebp
cmoveq ecx, ebp, tmpcnd, 0, 1

;jnz short loc_40113A
ctcallnz tmpcnd, loc_40113A

tcall loc_401162
endp

proc loc_401162
;mov ecx, [esi+0x8]
add tmpadr, esi, 8
load ecx, tmpadr, 1

;lea ebp, [esi+0x8]
add ebp, esi, 8

;cmp ecx, ebp
cmoveq ecx, ebp, tmpcnd, 0, 1

;jz short loc_401194
ctcallz tmpcnd, loc_401194

tcall loc_40116C
endp

proc loc_40116C
;cmp [ecx+0x1a], bl
add tmpadr, ecx, 26
load8z tmp1, tmpadr, 1
sub tmp1, tmp1, ebx
and tmpcnd, tmp1, 0xff

;jnz short loc_40118E
ctcallnz tmpcnd, loc_40118E

tcall loc_401171
endp

proc loc_401171
;mov eax, [ecx]
load eax, ecx, 1

;mov edi, [ecx+0x4]
add tmpadr, ecx, 4
load edi, tmpadr, 1

;mov [eax+0x4], edi
add tmpadr, eax, 4
store edi, tmpadr, 1

;mov edx, [ecx+0x4]
add tmpadr, ecx, 4
load edx, tmpadr, 1

;mov eax, [ecx]
load eax, ecx, 1

;mov [edx], eax
store eax, edx, 1

;call loc_401900
PUSH loc_401185
tcall loc_401900
endp

proc loc_401185
;mov al, [esi+0x57]
add tmpadr, esi, 87
load8z tmp0, tmpadr, 1
and eax, eax, 0xffffff00
or eax, eax, tmp0

;test al, al
and tmpcnd, eax, 0xff

;jz short loc_4011D9
ctcallz tmpcnd, loc_4011D9

tcall loc_40118C
endp

proc loc_40118C
;mov ecx, edi
mov ecx, edi

tcall loc_40118E
endp

proc loc_40118E
;mov ecx, [ecx]
load ecx, ecx, 1

;cmp ecx, ebp
cmoveq ecx, ebp, tmpcnd, 0, 1

;jnz short loc_40116C
ctcallnz tmpcnd, loc_40116C

tcall loc_401194
endp

proc loc_401194
;mov ecx, [esi]
load ecx, esi, 1

;cmp ecx, esi
cmoveq ecx, esi, tmpcnd, 0, 1

;jz short loc_4011D9
ctcallz tmpcnd, loc_4011D9

tcall loc_40119A
endp

proc loc_40119A
;cmp [ecx+0x1a], bl
add tmpadr, ecx, 26
load8z tmp1, tmpadr, 1
sub tmp1, tmp1, ebx
and tmpcnd, tmp1, 0xff

;jnz short loc_4011D3
ctcallnz tmpcnd, loc_4011D3

tcall loc_40119F
endp

proc loc_40119F
;mov edx, [ecx]
load edx, ecx, 1

;mov edi, [ecx+0x4]
add tmpadr, ecx, 4
load edi, tmpadr, 1

;mov [edx+0x4], edi
add tmpadr, edx, 4
store edi, tmpadr, 1

;mov eax, [ecx+0x4]
add tmpadr, ecx, 4
load eax, tmpadr, 1

;mov edx, [ecx]
load edx, ecx, 1

;mov [eax], edx
store edx, eax, 1

;xor eax, eax
xor eax, eax, eax

;mov al, [ecx+0x18]
add tmpadr, ecx, 24
load8z tmp0, tmpadr, 1
and eax, eax, 0xffffff00
or eax, eax, tmp0

;mov dl, [eax+esi+0x81]
add tmpadr, eax, esi
add tmpadr, tmpadr, 129
load8z tmp0, tmpadr, 1
and edx, edx, 0xffffff00
or edx, edx, tmp0

;lea eax, [eax+esi+0x81]
add tmpadr, eax, esi
add eax, tmpadr, 129

;inc dl
add tmp3, edx, 1
ins8ll edx, edx, tmp3

;mov [eax], dl
store8 edx, eax, 1

;call loc_401900
PUSH loc_4011CA
tcall loc_401900
endp

proc loc_4011CA
;mov al, [esi+0x57]
add tmpadr, esi, 87
load8z tmp0, tmpadr, 1
and eax, eax, 0xffffff00
or eax, eax, tmp0

;test al, al
and tmpcnd, eax, 0xff

;jz short loc_4011D9
ctcallz tmpcnd, loc_4011D9

tcall loc_4011D1
endp

proc loc_4011D1
;mov ecx, edi
mov ecx, edi

tcall loc_4011D3
endp

proc loc_4011D3
;mov ecx, [ecx]
load ecx, ecx, 1

;cmp ecx, esi
cmoveq ecx, esi, tmpcnd, 0, 1

;jnz short loc_40119A
ctcallnz tmpcnd, loc_40119A

tcall loc_4011D9
endp

proc loc_4011D9
;mov ebx, [esp+0x14]
add tmpadr, esp, 20
load ebx, tmpadr, 4

tcall loc_4011DD
endp

proc loc_4011DD
;mov edi, [loc_41FEB4]
load edi, loc_41FEB4, 4

;cmp edi, loc_41FEB0
mov tmp1, loc_41FEB0
cmoveq edi, tmp1, tmpcnd, 0, 1

;jz short loc_401207
ctcallz tmpcnd, loc_401207

tcall loc_4011EB
endp

proc loc_4011EB
;mov ecx, [edi+0x4]
add tmpadr, edi, 4
load ecx, tmpadr, 1

;lea eax, [edi+0x4]
add eax, edi, 4

;mov [loc_41FEB4], ecx
store ecx, loc_41FEB4, 4

;mov edx, [eax]
load edx, eax, 1

;test edi, edi
mov tmpcnd, edi

;mov dword [edx], loc_41FEB0
mov tmp1, loc_41FEB0
store tmp1, edx, 1

;jnz near loc_401354
ctcallnz tmpcnd, loc_401354

tcall loc_401207
endp

proc loc_401207
;mov dword [esp+0x18], 0x0
add tmpadr, esp, 24
store 0, tmpadr, 4

;call loc_4019E0
PUSH loc_401214
tcall loc_4019E0
endp

proc loc_401214
;call loc_401A40
PUSH loc_401219
tcall loc_401A40
endp

proc loc_401219
;call loc_401AD0
PUSH loc_40121E
tcall loc_401AD0
endp

proc loc_40121E
;mov edi, eax
mov edi, eax

;test edi, edi
mov tmpcnd, edi

;jnz near loc_401354
ctcallnz tmpcnd, loc_401354

tcall loc_401228
endp

proc loc_401228
;mov eax, [esp+0x1c]
add tmpadr, esp, 28
load eax, tmpadr, 4

;pop edi
POP edi

;mov cl, [eax+esi+0x81]
add tmpadr, eax, esi
add tmpadr, tmpadr, 129
load8z tmp0, tmpadr, 1
and ecx, ecx, 0xffffff00
or ecx, ecx, tmp0

;inc cl
add tmp3, ecx, 1
ins8ll ecx, ecx, tmp3

;mov [eax+esi+0x81], cl
add tmpadr, eax, esi
add tmpadr, tmpadr, 129
store8 ecx, tmpadr, 1

;pop esi
POP esi

;pop ebp
POP ebp

;pop ebx
POP ebx

;add esp, 0x1c
add esp, esp, 28

;ret 0x4
POP tmp1
add esp, esp, 4
tcall tmp1
endp

proc loc_401246
;xor eax, eax
xor eax, eax, eax

;mov al, [esi+0x5a]
add tmpadr, esi, 90
load8z tmp0, tmpadr, 1
and eax, eax, 0xffffff00
or eax, eax, tmp0

;sub eax, 0x0
sub eax, eax, 0
mov tmpcnd, eax

;jz short loc_4012A2
ctcallz tmpcnd, loc_4012A2

tcall loc_401250
endp

proc loc_401250
;dec eax
sub eax, eax, 1
mov tmpcnd, eax

;jnz short loc_4011DD
ctcallnz tmpcnd, loc_4011DD

tcall loc_401253
endp

proc loc_401253
;mov dl, bl
ins8ll edx, edx, ebx

;lea ecx, [esi+0x10]
add ecx, esi, 16

;call loc_401FB0
PUSH loc_40125D
tcall loc_401FB0
endp

proc loc_40125D
;test eax, eax
mov tmpcnd, eax

;jnz short loc_401287
ctcallnz tmpcnd, loc_401287

tcall loc_401261
endp

proc loc_401261
;mov dl, bl
ins8ll edx, edx, ebx

;lea ecx, [esi+0x8]
add ecx, esi, 8

;call loc_401FB0
PUSH loc_40126B
tcall loc_401FB0
endp

proc loc_40126B
;test eax, eax
mov tmpcnd, eax

;jnz short loc_401287
ctcallnz tmpcnd, loc_401287

tcall loc_40126F
endp

proc loc_40126F
;mov dl, bl
ins8ll edx, edx, ebx

;mov ecx, esi
mov ecx, esi

;call loc_401FB0
PUSH loc_401278
tcall loc_401FB0
endp

proc loc_401278
;test eax, eax
mov tmpcnd, eax

;jz near loc_4011DD
ctcallz tmpcnd, loc_4011DD

tcall loc_401280
endp

proc loc_401280
;inc byte [edi+esi+0x81]
add tmpadr, edi, esi
add tmpadr, tmpadr, 129
load8z tmp1, tmpadr, 1
add tmp1, tmp1, 1
store8 tmp1, tmpadr, 1

tcall loc_401287
endp

proc loc_401287
;mov ecx, [eax]
load ecx, eax, 1

;mov edx, [eax+0x4]
add tmpadr, eax, 4
load edx, tmpadr, 1

;mov [ecx+0x4], edx
add tmpadr, ecx, 4
store edx, tmpadr, 1

;mov ecx, [eax+0x4]
add tmpadr, eax, 4
load ecx, tmpadr, 1

;mov edx, [eax]
load edx, eax, 1

;mov [ecx], edx
store edx, ecx, 1

;mov ecx, eax
mov ecx, eax

;call loc_401900
PUSH loc_40129D
tcall loc_401900
endp

proc loc_40129D
;jmp loc_4011DD
tcall loc_4011DD
endp

proc loc_4012A2
;mov al, [esi+0x57]
add tmpadr, esi, 87
load8z tmp0, tmpadr, 1
and eax, eax, 0xffffff00
or eax, eax, tmp0

;test al, al
and tmpcnd, eax, 0xff

;jz near loc_4011DD
ctcallz tmpcnd, loc_4011DD

tcall loc_4012AD
endp

proc loc_4012AD
;mov ecx, [esi+0x10]
add tmpadr, esi, 16
load ecx, tmpadr, 1

;lea ebp, [esi+0x10]
add ebp, esi, 16

;cmp ecx, ebp
cmoveq ecx, ebp, tmpcnd, 0, 1

;jz short loc_4012E3
ctcallz tmpcnd, loc_4012E3

tcall loc_4012B7
endp

proc loc_4012B7
;cmp [ecx+0x18], bl
add tmpadr, ecx, 24
load8z tmp1, tmpadr, 1
sub tmp1, tmp1, ebx
and tmpcnd, tmp1, 0xff

;jnz short loc_4012DD
ctcallnz tmpcnd, loc_4012DD

tcall loc_4012BC
endp

proc loc_4012BC
;mov eax, [ecx]
load eax, ecx, 1

;mov edi, [ecx+0x4]
add tmpadr, ecx, 4
load edi, tmpadr, 1

;mov [eax+0x4], edi
add tmpadr, eax, 4
store edi, tmpadr, 1

;mov edx, [ecx+0x4]
add tmpadr, ecx, 4
load edx, tmpadr, 1

;mov eax, [ecx]
load eax, ecx, 1

;mov [edx], eax
store eax, edx, 1

;call loc_401900
PUSH loc_4012D0
tcall loc_401900
endp

proc loc_4012D0
;mov al, [esi+0x57]
add tmpadr, esi, 87
load8z tmp0, tmpadr, 1
and eax, eax, 0xffffff00
or eax, eax, tmp0

;test al, al
and tmpcnd, eax, 0xff

;jz near loc_4011DD
ctcallz tmpcnd, loc_4011DD

tcall loc_4012DB
endp

proc loc_4012DB
;mov ecx, edi
mov ecx, edi

tcall loc_4012DD
endp

proc loc_4012DD
;mov ecx, [ecx]
load ecx, ecx, 1

;cmp ecx, ebp
cmoveq ecx, ebp, tmpcnd, 0, 1

;jnz short loc_4012B7
ctcallnz tmpcnd, loc_4012B7

tcall loc_4012E3
endp

proc loc_4012E3
;mov ecx, [esi+0x8]
add tmpadr, esi, 8
load ecx, tmpadr, 1

;lea ebp, [esi+0x8]
add ebp, esi, 8

;cmp ecx, ebp
cmoveq ecx, ebp, tmpcnd, 0, 1

;jz short loc_401319
ctcallz tmpcnd, loc_401319

tcall loc_4012ED
endp

proc loc_4012ED
;cmp [ecx+0x18], bl
add tmpadr, ecx, 24
load8z tmp1, tmpadr, 1
sub tmp1, tmp1, ebx
and tmpcnd, tmp1, 0xff

;jnz short loc_401313
ctcallnz tmpcnd, loc_401313

tcall loc_4012F2
endp

proc loc_4012F2
;mov edx, [ecx]
load edx, ecx, 1

;mov edi, [ecx+0x4]
add tmpadr, ecx, 4
load edi, tmpadr, 1

;mov [edx+0x4], edi
add tmpadr, edx, 4
store edi, tmpadr, 1

;mov eax, [ecx+0x4]
add tmpadr, ecx, 4
load eax, tmpadr, 1

;mov edx, [ecx]
load edx, ecx, 1

;mov [eax], edx
store edx, eax, 1

;call loc_401900
PUSH loc_401306
tcall loc_401900
endp

proc loc_401306
;mov al, [esi+0x57]
add tmpadr, esi, 87
load8z tmp0, tmpadr, 1
and eax, eax, 0xffffff00
or eax, eax, tmp0

;test al, al
and tmpcnd, eax, 0xff

;jz near loc_4011DD
ctcallz tmpcnd, loc_4011DD

tcall loc_401311
endp

proc loc_401311
;mov ecx, edi
mov ecx, edi

tcall loc_401313
endp

proc loc_401313
;mov ecx, [ecx]
load ecx, ecx, 1

;cmp ecx, ebp
cmoveq ecx, ebp, tmpcnd, 0, 1

;jnz short loc_4012ED
ctcallnz tmpcnd, loc_4012ED

tcall loc_401319
endp

proc loc_401319
;mov ecx, [esi]
load ecx, esi, 1

;cmp ecx, esi
cmoveq ecx, esi, tmpcnd, 0, 1

;jz near loc_4011DD
ctcallz tmpcnd, loc_4011DD

tcall loc_401323
endp

proc loc_401323
;cmp [ecx+0x18], bl
add tmpadr, ecx, 24
load8z tmp1, tmpadr, 1
sub tmp1, tmp1, ebx
and tmpcnd, tmp1, 0xff

;jnz short loc_401349
ctcallnz tmpcnd, loc_401349

tcall loc_401328
endp

proc loc_401328
;mov eax, [ecx]
load eax, ecx, 1

;mov edi, [ecx+0x4]
add tmpadr, ecx, 4
load edi, tmpadr, 1

;mov [eax+0x4], edi
add tmpadr, eax, 4
store edi, tmpadr, 1

;mov edx, [ecx+0x4]
add tmpadr, ecx, 4
load edx, tmpadr, 1

;mov eax, [ecx]
load eax, ecx, 1

;mov [edx], eax
store eax, edx, 1

;call loc_401900
PUSH loc_40133C
tcall loc_401900
endp

proc loc_40133C
;mov al, [esi+0x57]
add tmpadr, esi, 87
load8z tmp0, tmpadr, 1
and eax, eax, 0xffffff00
or eax, eax, tmp0

;test al, al
and tmpcnd, eax, 0xff

;jz near loc_4011DD
ctcallz tmpcnd, loc_4011DD

tcall loc_401347
endp

proc loc_401347
;mov ecx, edi
mov ecx, edi

tcall loc_401349
endp

proc loc_401349
;mov ecx, [ecx]
load ecx, ecx, 1

;cmp ecx, esi
cmoveq ecx, esi, tmpcnd, 0, 1

;jnz short loc_401323
ctcallnz tmpcnd, loc_401323

tcall loc_40134F
endp

proc loc_40134F
;jmp loc_4011DD
tcall loc_4011DD
endp

proc loc_401354
;mov ebp, [esp+0x20]
add tmpadr, esp, 32
load ebp, tmpadr, 4

;mov al, [esp+0x13]
add tmpadr, esp, 19
load8z tmp0, tmpadr, 1
and eax, eax, 0xffffff00
or eax, eax, tmp0

;mov [edi+0x14], ebp
add tmpadr, edi, 20
store ebp, tmpadr, 1

;mov dword [edi+0x8], 0x0
add tmpadr, edi, 8
store 0, tmpadr, 1

;mov [edi+0xc], esi
add tmpadr, edi, 12
store esi, tmpadr, 1

;mov [edi+0x18], bl
add tmpadr, edi, 24
store8 ebx, tmpadr, 1

;mov [edi+0x1a], al
add tmpadr, edi, 26
store8 eax, tmpadr, 1

;mov eax, [esp+0x28]
add tmpadr, esp, 40
load eax, tmpadr, 4

;test eax, eax
mov tmpcnd, eax

;jz short loc_4013EC
ctcallz tmpcnd, loc_4013EC

tcall loc_401377
endp

proc loc_401377
;call loc_4019B0
PUSH loc_40137C
tcall loc_4019B0
endp

proc loc_40137C
;test eax, eax
mov tmpcnd, eax

;mov [edi+0x8], eax
add tmpadr, edi, 8
store eax, tmpadr, 1

;jnz short loc_4013C6
ctcallnz tmpcnd, loc_4013C6

tcall loc_401383
endp

proc loc_401383
;mov eax, [esp+0x18]
add tmpadr, esp, 24
load eax, tmpadr, 4

;test eax, eax
mov tmpcnd, eax

;jz short loc_401390
ctcallz tmpcnd, loc_401390

tcall loc_40138B
endp

proc loc_40138B
;call loc_4019E0
PUSH loc_401390
tcall loc_4019E0
endp

proc loc_401390
;call loc_401A40
PUSH loc_401395
tcall loc_401A40
endp

proc loc_401395
;call loc_401AD0
PUSH loc_40139A
tcall loc_401AD0
endp

proc loc_40139A
;test eax, eax
mov tmpcnd, eax

;mov [edi+0x8], eax
add tmpadr, edi, 8
store eax, tmpadr, 1

;jnz short loc_4013C6
ctcallnz tmpcnd, loc_4013C6

tcall loc_4013A1
endp

proc loc_4013A1
;mov eax, [esp+0x1c]
add tmpadr, esp, 28
load eax, tmpadr, 4

;mov cl, [eax+esi+0x81]
add tmpadr, eax, esi
add tmpadr, tmpadr, 129
load8z tmp0, tmpadr, 1
and ecx, ecx, 0xffffff00
or ecx, ecx, tmp0

;inc cl
add tmp3, ecx, 1
ins8ll ecx, ecx, tmp3

;mov [eax+esi+0x81], cl
add tmpadr, eax, esi
add tmpadr, tmpadr, 129
store8 ecx, tmpadr, 1

;mov ecx, edi
mov ecx, edi

;call loc_401980
PUSH loc_4013BC
tcall loc_401980
endp

proc loc_4013BC
;pop edi
POP edi

;pop esi
POP esi

;pop ebp
POP ebp

;pop ebx
POP ebx

;add esp, 0x1c
add esp, esp, 28

;ret 0x4
POP tmp1
add esp, esp, 4
tcall tmp1
endp

proc loc_4013C6
;mov ecx, [edi+0x8]
add tmpadr, edi, 8
load ecx, tmpadr, 1

;mov [ecx+0x14], ebp
add tmpadr, ecx, 20
store ebp, tmpadr, 1

;mov edx, [edi+0x8]
add tmpadr, edi, 8
load edx, tmpadr, 1

;mov dword [edx+0x8], 0x0
add tmpadr, edx, 8
store 0, tmpadr, 1

;mov eax, [edi+0x8]
add tmpadr, edi, 8
load eax, tmpadr, 1

;mov [eax+0xc], esi
add tmpadr, eax, 12
store esi, tmpadr, 1

;mov ecx, [edi+0x8]
add tmpadr, edi, 8
load ecx, tmpadr, 1

;mov al, [esp+0x13]
add tmpadr, esp, 19
load8z tmp0, tmpadr, 1
and eax, eax, 0xffffff00
or eax, eax, tmp0

;mov [ecx+0x18], bl
add tmpadr, ecx, 24
store8 ebx, tmpadr, 1

;mov edx, [edi+0x8]
add tmpadr, edi, 8
load edx, tmpadr, 1

;mov [edx+0x1a], al
add tmpadr, edx, 26
store8 eax, tmpadr, 1

tcall loc_4013EC
endp

proc loc_4013EC
;mov ecx, [esi]
load ecx, esi, 1

;mov [edi], ecx
store ecx, edi, 1

;mov [esi], edi
store edi, esi, 1

;mov edx, [edi]
load edx, edi, 1

;lea ecx, [esp+0x24]
add ecx, esp, 36

;mov [edx+0x4], edi
add tmpadr, edx, 4
store edi, tmpadr, 1

;mov [edi+0x4], esi
add tmpadr, edi, 4
store esi, tmpadr, 1

;mov byte [edi+0x19], 0x2
add tmpadr, edi, 25
mov tmp1, 0x2
store8 tmp1, tmpadr, 1

;mov al, [esi+0x57]
add tmpadr, esi, 87
load8z tmp0, tmpadr, 1
and eax, eax, 0xffffff00
or eax, eax, tmp0

;inc al
add tmp3, eax, 1
ins8ll eax, eax, tmp3

;mov edx, edi
mov edx, edi

;mov [esi+0x57], al
add tmpadr, esi, 87
store8 eax, tmpadr, 1

;mov eax, [esp+0x30]
add tmpadr, esp, 48
load eax, tmpadr, 4

;push eax
PUSH eax

;push ebx
PUSH ebx

;push ecx
PUSH ecx

;mov ecx, esi
mov ecx, esi

;call loc_408CB0
PUSH loc_40141A
tcall loc_408CB0
endp

proc loc_40141A
;xor edx, edx
xor edx, edx, edx

;mov dl, [edi+0x2c]
add tmpadr, edi, 44
load8z tmp0, tmpadr, 1
and edx, edx, 0xffffff00
or edx, edx, tmp0

;pop edi
POP edi

;pop esi
POP esi

;pop ebp
POP ebp

;mov byte [edx+loc_455F68], 0x1
mov tmpadr, loc_455F68
add tmpadr, tmpadr, edx
mov tmp1, 0x1
store8 tmp1, tmpadr, 1

;mov dword [loc_41B6F8], 0x0
store 0, loc_41B6F8, 4

;pop ebx
POP ebx

;add esp, 0x1c
add esp, esp, 28

;ret 0x4
POP tmp1
add esp, esp, 4
tcall tmp1
endp

proc loc_401440
;push ebx
PUSH ebx

;push esi
PUSH esi

;mov esi, edx
mov esi, edx

;push edi
PUSH edi

;and esi, 0xff
and esi, esi, 0xff

;mov edi, esi
mov edi, esi

;mov eax, esi
mov eax, esi

;shr edi, 0x3
lshr edi, edi, 3

;and eax, 0x7
and eax, eax, 0x7

;mov bl, [edi+ecx+0x61]
add tmpadr, edi, ecx
add tmpadr, tmpadr, 97
load8z tmp0, tmpadr, 1
and ebx, ebx, 0xffffff00
or ebx, ebx, tmp0

;lea edi, [edi+ecx+0x61]
add tmpadr, edi, ecx
add edi, tmpadr, 97

;mov al, [eax+loc_41B030]
mov tmpadr, loc_41B030
add tmpadr, tmpadr, eax
load8z tmp0, tmpadr, 1
and eax, eax, 0xffffff00
or eax, eax, tmp0

;test al, bl
and tmp1, eax, ebx
and tmpcnd, tmp1, 0xff

;jz short loc_401481
ctcallz tmpcnd, loc_401481

tcall loc_401467
endp

proc loc_401467
;mov bl, [edi+0x10]
add tmpadr, edi, 16
load8z tmp0, tmpadr, 1
and ebx, ebx, 0xffffff00
or ebx, ebx, tmp0

;add edi, 0x10
add edi, edi, 16

;test al, bl
and tmp1, eax, ebx
and tmpcnd, tmp1, 0xff

;jnz short loc_401481
ctcallnz tmpcnd, loc_401481

tcall loc_401471
endp

proc loc_401471
;or bl, al
and tmp4, eax, 0xff
or ebx, ebx, tmp4

;mov [edi], bl
store8 ebx, edi, 1

;mov al, [ecx+0x60]
add tmpadr, ecx, 96
load8z tmp0, tmpadr, 1
and eax, eax, 0xffffff00
or eax, eax, tmp0

;inc al
add tmp3, eax, 1
ins8ll eax, eax, tmp3

;pop edi
POP edi

;pop esi
POP esi

;mov [ecx+0x60], al
add tmpadr, ecx, 96
store8 eax, tmpadr, 1

;pop ebx
POP ebx

;ret
POP tmp1
tcall tmp1
endp

proc loc_401481
;mov al, [esi+ecx+0x81]
add tmpadr, esi, ecx
add tmpadr, tmpadr, 129
load8z tmp0, tmpadr, 1
and eax, eax, 0xffffff00
or eax, eax, tmp0

;test al, al
and tmpcnd, eax, 0xff

;jz short loc_401499
ctcallz tmpcnd, loc_401499

tcall loc_40148C
endp

proc loc_40148C
;dec al
sub tmp3, eax, 1
ins8ll eax, eax, tmp3

;pop edi
POP edi

;mov [esi+ecx+0x81], al
add tmpadr, esi, ecx
add tmpadr, tmpadr, 129
store8 eax, tmpadr, 1

;pop esi
POP esi

;pop ebx
POP ebx

;ret
POP tmp1
tcall tmp1
endp

proc loc_401499
;mov eax, [ecx+0x4]
add tmpadr, ecx, 4
load eax, tmpadr, 1

;cmp eax, ecx
cmoveq eax, ecx, tmpcnd, 0, 1

;jz near loc_401580
ctcallz tmpcnd, loc_401580

tcall loc_4014A4
endp

proc loc_4014A4
;cmp [eax+0x18], dl
add tmpadr, eax, 24
load8z tmp1, tmpadr, 1
sub tmp1, tmp1, edx
and tmpcnd, tmp1, 0xff

;jz short loc_4014B4
ctcallz tmpcnd, loc_4014B4

tcall loc_4014A9
endp

proc loc_4014A9
;mov eax, [eax+0x4]
add tmpadr, eax, 4
load eax, tmpadr, 1

;cmp eax, ecx
cmoveq eax, ecx, tmpcnd, 0, 1

;jnz short loc_4014A4
ctcallnz tmpcnd, loc_4014A4

tcall loc_4014B0
endp

proc loc_4014B0
;pop edi
POP edi

;pop esi
POP esi

;pop ebx
POP ebx

;ret
POP tmp1
tcall tmp1
endp

proc loc_4014B4
;mov edx, [eax]
load edx, eax, 1

;mov esi, [eax+0x4]
add tmpadr, eax, 4
load esi, tmpadr, 1

;mov [edx+0x4], esi
add tmpadr, edx, 4
store esi, tmpadr, 1

;mov edx, [eax+0x4]
add tmpadr, eax, 4
load edx, tmpadr, 1

;mov esi, [eax]
load esi, eax, 1

;mov [edx], esi
store esi, edx, 1

;xor edx, edx
xor edx, edx, edx

;mov dl, [eax+0x2c]
add tmpadr, eax, 44
load8z tmp0, tmpadr, 1
and edx, edx, 0xffffff00
or edx, edx, tmp0

;mov esi, edx
mov esi, edx

;mov dl, 0x1
and edx, edx, 0xffffff00
or edx, edx, 0x1

;mov bl, [esi+loc_455F68]
mov tmpadr, loc_455F68
add tmpadr, tmpadr, esi
load8z tmp0, tmpadr, 1
and ebx, ebx, 0xffffff00
or ebx, ebx, tmp0

;cmp bl, dl
sub tmp1, ebx, edx
and tmpcnd, tmp1, 0xff

;jz short loc_401507
ctcallz tmpcnd, loc_401507

tcall loc_4014D6
endp

proc loc_4014D6
;mov dl, [ecx+0x59]
add tmpadr, ecx, 89
load8z tmp0, tmpadr, 1
and edx, edx, 0xffffff00
or edx, edx, tmp0

;test dl, dl
and tmpcnd, edx, 0xff

;jz short loc_4014E2
ctcallz tmpcnd, loc_4014E2

tcall loc_4014DD
endp

proc loc_4014DD
;add ecx, 0x8
add ecx, ecx, 8

;jmp short loc_4014F3
tcall loc_4014F3
endp

proc loc_4014E2
;test bl, bl
and tmp1, ebx, ebx
and eflags, eflags, ~ZF
and tmp0, tmp1, 0xff
cmovz tmp0, tmp0, ZF, 0
or eflags, eflags, tmp0

;setnz dl
and tmp1, eflags, ZF
cmovz tmp1, tmp1, 1, 0
and edx, edx, 0xffffff00
or edx, edx, tmp1

;add edx, 0x2
add edx, edx, 2

;add ecx, 0x10
add ecx, ecx, 16

;mov [esi+loc_455F68], dl
mov tmpadr, loc_455F68
add tmpadr, tmpadr, esi
store8 edx, tmpadr, 1

tcall loc_4014F3
endp

proc loc_4014F3
;mov byte [eax+0x19], 0x3
add tmpadr, eax, 25
mov tmp1, 0x3
store8 tmp1, tmpadr, 1

;mov edx, [ecx]
load edx, ecx, 1

;mov [eax], edx
store edx, eax, 1

;pop edi
POP edi

;mov [edx+0x4], eax
add tmpadr, edx, 4
store eax, tmpadr, 1

;mov [ecx], eax
store eax, ecx, 1

;pop esi
POP esi

;mov [eax+0x4], ecx
add tmpadr, eax, 4
store ecx, tmpadr, 1

;pop ebx
POP ebx

;ret
POP tmp1
tcall tmp1
endp

proc loc_401507
;mov esi, [eax+0xc]
add tmpadr, eax, 12
load esi, tmpadr, 1

;mov cl, [esi+0x57]
add tmpadr, esi, 87
load8z tmp0, tmpadr, 1
and ecx, ecx, 0xffffff00
or ecx, ecx, tmp0

;test cl, cl
and tmpcnd, ecx, 0xff

;jz short loc_401516
ctcallz tmpcnd, loc_401516

tcall loc_401511
endp

proc loc_401511
;dec cl
sub tmp3, ecx, 1
ins8ll ecx, ecx, tmp3

;mov [esi+0x57], cl
add tmpadr, esi, 87
store8 ecx, tmpadr, 1

tcall loc_401516
endp

proc loc_401516
;mov ecx, [loc_41FEB0]
load ecx, loc_41FEB0, 4

;mov edi, loc_41FEB0
mov edi, loc_41FEB0

;mov [eax], ecx
store ecx, eax, 1

;mov ecx, [loc_41FEB0]
load ecx, loc_41FEB0, 4

;xor esi, esi
xor esi, esi, esi

;mov [ecx+0x4], eax
add tmpadr, ecx, 4
store eax, tmpadr, 1

;xor ecx, ecx
xor ecx, ecx, ecx

;mov [loc_41FEB0], eax
store eax, loc_41FEB0, 4

;mov cl, [eax+0x2c]
add tmpadr, eax, 44
load8z tmp0, tmpadr, 1
and ecx, ecx, 0xffffff00
or ecx, ecx, tmp0

;mov [eax+0x4], edi
add tmpadr, eax, 4
store edi, tmpadr, 1

;mov [eax+0x10], esi
add tmpadr, eax, 16
store esi, tmpadr, 1

;mov [eax+0x19], dl
add tmpadr, eax, 25
store8 edx, tmpadr, 1

;mov [eax+0xc], esi
add tmpadr, eax, 12
store esi, tmpadr, 1

;mov byte [eax+0x1a], 0xff
add tmpadr, eax, 26
mov tmp1, 0xff
store8 tmp1, tmpadr, 1

;mov byte [ecx+loc_455F68], 0x3
mov tmpadr, loc_455F68
add tmpadr, tmpadr, ecx
mov tmp1, 0x3
store8 tmp1, tmpadr, 1

;mov ecx, [eax+0x8]
add tmpadr, eax, 8
load ecx, tmpadr, 1

;cmp ecx, esi
cmoveq ecx, esi, tmpcnd, 0, 1

;jz short loc_401580
ctcallz tmpcnd, loc_401580

tcall loc_401556
endp

proc loc_401556
;mov ebx, [loc_41FEB0]
load ebx, loc_41FEB0, 4

;mov [ecx], ebx
store ebx, ecx, 1

;mov ebx, [loc_41FEB0]
load ebx, loc_41FEB0, 4

;mov [ebx+0x4], ecx
add tmpadr, ebx, 4
store ecx, tmpadr, 1

;mov [loc_41FEB0], ecx
store ecx, loc_41FEB0, 4

;mov [ecx+0x4], edi
add tmpadr, ecx, 4
store edi, tmpadr, 1

;mov [ecx+0x10], esi
add tmpadr, ecx, 16
store esi, tmpadr, 1

;mov [ecx+0x19], dl
add tmpadr, ecx, 25
store8 edx, tmpadr, 1

;mov [ecx+0xc], esi
add tmpadr, ecx, 12
store esi, tmpadr, 1

;mov byte [ecx+0x1a], 0xff
add tmpadr, ecx, 26
mov tmp1, 0xff
store8 tmp1, tmpadr, 1

;mov [eax+0x8], esi
add tmpadr, eax, 8
store esi, tmpadr, 1

tcall loc_401580
endp

proc loc_401580
;pop edi
POP edi

;pop esi
POP esi

;pop ebx
POP ebx

;ret
POP tmp1
tcall tmp1
endp

proc loc_401590
;cmp dl, 0x40
and eflags, eflags, ~CF
and tmp3, edx, 0xff
cmovult tmp3, 0x40, tmp3, CF, 0
or eflags, eflags, tmp3
sub tmp1, edx, 64

;push esi
PUSH esi

;jb short loc_40159C
and tmp1, eflags, CF
ctcallnz tmp1, loc_40159C

tcall loc_401596
endp

proc loc_401596
;mov byte [ecx+0x59], 0x1
add tmpadr, ecx, 89
mov tmp1, 0x1
store8 tmp1, tmpadr, 1

;pop esi
POP esi

;ret
POP tmp1
tcall tmp1
endp

proc loc_40159C
;lea edx, [ecx+0x8]
add edx, ecx, 8

;mov byte [ecx+0x59], 0x0
add tmpadr, ecx, 89
store8 0, tmpadr, 1

;lea esi, [ecx+0x10]
add esi, ecx, 16

;mov eax, [edx+0x4]
add tmpadr, edx, 4
load eax, tmpadr, 1

;cmp eax, edx
cmoveq eax, edx, tmpcnd, 0, 1

;jz short loc_4015E6
ctcallz tmpcnd, loc_4015E6

tcall loc_4015AD
endp

proc loc_4015AD
;mov ecx, [eax+0x4]
add tmpadr, eax, 4
load ecx, tmpadr, 1

;mov [edx+0x4], ecx
add tmpadr, edx, 4
store ecx, tmpadr, 1

;mov ecx, [eax+0x4]
add tmpadr, eax, 4
load ecx, tmpadr, 1

;mov [ecx], edx
store edx, ecx, 1

;mov ecx, [esi]
load ecx, esi, 1

;mov [eax], ecx
store ecx, eax, 1

;mov [ecx+0x4], eax
add tmpadr, ecx, 4
store eax, tmpadr, 1

;xor ecx, ecx
xor ecx, ecx, ecx

;mov [esi], eax
store eax, esi, 1

;mov cl, [eax+0x2c]
add tmpadr, eax, 44
load8z tmp0, tmpadr, 1
and ecx, ecx, 0xffffff00
or ecx, ecx, tmp0

;mov [eax+0x4], esi
add tmpadr, eax, 4
store esi, tmpadr, 1

;mov eax, ecx
mov eax, ecx

;mov cl, [eax+loc_455F68]
mov tmpadr, loc_455F68
add tmpadr, tmpadr, eax
load8z tmp0, tmpadr, 1
and ecx, ecx, 0xffffff00
or ecx, ecx, tmp0

;test cl, cl
and tmp1, ecx, ecx
and eflags, eflags, ~ZF
and tmp0, tmp1, 0xff
cmovz tmp0, tmp0, ZF, 0
or eflags, eflags, tmp0

;setnz cl
and tmp1, eflags, ZF
cmovz tmp1, tmp1, 1, 0
and ecx, ecx, 0xffffff00
or ecx, ecx, tmp1

;add ecx, 0x2
add ecx, ecx, 2

;mov [eax+loc_455F68], cl
mov tmpadr, loc_455F68
add tmpadr, tmpadr, eax
store8 ecx, tmpadr, 1

;mov eax, [edx+0x4]
add tmpadr, edx, 4
load eax, tmpadr, 1

;cmp eax, edx
cmoveq eax, edx, tmpcnd, 0, 1

;jnz short loc_4015AD
ctcallnz tmpcnd, loc_4015AD

tcall loc_4015E6
endp

proc loc_4015E6
;pop esi
POP esi

;ret
POP tmp1
tcall tmp1
endp

proc loc_4015F0
;push esi
PUSH esi

;mov esi, ecx
mov esi, ecx

;xor al, al
and eax, eax, 0xffffff00

;cmp [esi+0x5f], al
add tmpadr, esi, 95
load8z tmp1, tmpadr, 1
sub tmp1, tmp1, eax
and tmpcnd, tmp1, 0xff

;jz short loc_401624
ctcallz tmpcnd, loc_401624

tcall loc_4015FA
endp

proc loc_4015FA
;mov [esi+0x5f], al
add tmpadr, esi, 95
store8 eax, tmpadr, 1

;mov edx, [loc_42A2E8]
load edx, loc_42A2E8, 4

;lea ecx, [esi+0x61]
add ecx, esi, 97

;mov [esi+0x61], edx
add tmpadr, esi, 97
store edx, tmpadr, 1

;mov edx, [loc_42A2EC]
load edx, loc_42A2EC, 4

;mov [ecx+0x4], edx
add tmpadr, ecx, 4
store edx, tmpadr, 1

;mov edx, [loc_42A2F0]
load edx, loc_42A2F0, 4

;mov [ecx+0x8], edx
add tmpadr, ecx, 8
store edx, tmpadr, 1

;mov edx, [loc_42A2F4]
load edx, loc_42A2F4, 4

;mov [ecx+0xc], edx
add tmpadr, ecx, 12
store edx, tmpadr, 1

tcall loc_401624
endp

proc loc_401624
;cmp [esi+0x60], al
add tmpadr, esi, 96
load8z tmp1, tmpadr, 1
sub tmp1, tmp1, eax
and tmpcnd, tmp1, 0xff

;jz short loc_401653
ctcallz tmpcnd, loc_401653

tcall loc_401629
endp

proc loc_401629
;mov [esi+0x60], al
add tmpadr, esi, 96
store8 eax, tmpadr, 1

;mov ecx, [loc_42A2E8]
load ecx, loc_42A2E8, 4

;lea eax, [esi+0x71]
add eax, esi, 113

;mov [esi+0x71], ecx
add tmpadr, esi, 113
store ecx, tmpadr, 1

;mov edx, [loc_42A2EC]
load edx, loc_42A2EC, 4

;mov [eax+0x4], edx
add tmpadr, eax, 4
store edx, tmpadr, 1

;mov ecx, [loc_42A2F0]
load ecx, loc_42A2F0, 4

;mov [eax+0x8], ecx
add tmpadr, eax, 8
store ecx, tmpadr, 1

;mov edx, [loc_42A2F4]
load edx, loc_42A2F4, 4

;mov [eax+0xc], edx
add tmpadr, eax, 12
store edx, tmpadr, 1

tcall loc_401653
endp

proc loc_401653
;push edi
PUSH edi

;mov ecx, 0x20
mov ecx, 0x20

;xor eax, eax
xor eax, eax, eax

;lea edi, [esi+0x81]
add edi, esi, 129

;rep stosd
REP_STOSD

;mov eax, [esi]
load eax, esi, 1

;pop edi
POP edi

;cmp eax, esi
cmoveq eax, esi, tmpcnd, 0, 1

;jz short loc_40167A
ctcallz tmpcnd, loc_40167A

tcall loc_40166A
endp

proc loc_40166A
;mov dl, [eax+0x18]
add tmpadr, eax, 24
load8z tmp0, tmpadr, 1
and edx, edx, 0xffffff00
or edx, edx, tmp0

;mov ecx, esi
mov ecx, esi

;call loc_401440
PUSH loc_401674
tcall loc_401440
endp

proc loc_401674
;mov eax, [esi]
load eax, esi, 1

;cmp eax, esi
cmoveq eax, esi, tmpcnd, 0, 1

;jnz short loc_40166A
ctcallnz tmpcnd, loc_40166A

tcall loc_40167A
endp

proc loc_40167A
;pop esi
POP esi

;ret
POP tmp1
tcall tmp1
endp

proc loc_401680
;sub esp, 0x14
sub esp, esp, 20

;xor edx, edx
xor edx, edx, edx

;push ebx
PUSH ebx

;push ebp
PUSH ebp

;push esi
PUSH esi

;mov esi, ecx
mov esi, ecx

;push edi
PUSH edi

;cmp [esi+0x5f], dl
add tmpadr, esi, 95
load8z tmp1, tmpadr, 1
sub tmp1, tmp1, edx
and tmpcnd, tmp1, 0xff

;jz short loc_4016BA
ctcallz tmpcnd, loc_4016BA

tcall loc_401690
endp

proc loc_401690
;mov [esi+0x5f], dl
add tmpadr, esi, 95
store8 edx, tmpadr, 1

;mov ecx, [loc_42A2E8]
load ecx, loc_42A2E8, 4

;lea eax, [esi+0x61]
add eax, esi, 97

;mov [esi+0x61], ecx
add tmpadr, esi, 97
store ecx, tmpadr, 1

;mov ecx, [loc_42A2EC]
load ecx, loc_42A2EC, 4

;mov [eax+0x4], ecx
add tmpadr, eax, 4
store ecx, tmpadr, 1

;mov ecx, [loc_42A2F0]
load ecx, loc_42A2F0, 4

;mov [eax+0x8], ecx
add tmpadr, eax, 8
store ecx, tmpadr, 1

;mov ecx, [loc_42A2F4]
load ecx, loc_42A2F4, 4

;mov [eax+0xc], ecx
add tmpadr, eax, 12
store ecx, tmpadr, 1

tcall loc_4016BA
endp

proc loc_4016BA
;cmp [esi+0x60], dl
add tmpadr, esi, 96
load8z tmp1, tmpadr, 1
sub tmp1, tmp1, edx
and tmpcnd, tmp1, 0xff

;jz short loc_4016E9
ctcallz tmpcnd, loc_4016E9

tcall loc_4016BF
endp

proc loc_4016BF
;mov [esi+0x60], dl
add tmpadr, esi, 96
store8 edx, tmpadr, 1

;mov ecx, [loc_42A2E8]
load ecx, loc_42A2E8, 4

;lea eax, [esi+0x71]
add eax, esi, 113

;mov [esi+0x71], ecx
add tmpadr, esi, 113
store ecx, tmpadr, 1

;mov ecx, [loc_42A2EC]
load ecx, loc_42A2EC, 4

;mov [eax+0x4], ecx
add tmpadr, eax, 4
store ecx, tmpadr, 1

;mov ecx, [loc_42A2F0]
load ecx, loc_42A2F0, 4

;mov [eax+0x8], ecx
add tmpadr, eax, 8
store ecx, tmpadr, 1

;mov ecx, [loc_42A2F4]
load ecx, loc_42A2F4, 4

;mov [eax+0xc], ecx
add tmpadr, eax, 12
store ecx, tmpadr, 1

tcall loc_4016E9
endp

proc loc_4016E9
;mov ecx, 0x20
mov ecx, 0x20

;xor eax, eax
xor eax, eax, eax

;lea edi, [esi+0x81]
add edi, esi, 129

;mov [esp+0x18], esi
add tmpadr, esp, 24
store esi, tmpadr, 4

;rep stosd
REP_STOSD

;lea eax, [esi+0x8]
add eax, esi, 8

;add esi, 0x10
add esi, esi, 16

;lea ecx, [esp+0x20]
add ecx, esp, 32

;mov [esp+0x1c], eax
add tmpadr, esp, 28
store eax, tmpadr, 4

;mov [esp+0x20], esi
add tmpadr, esp, 32
store esi, tmpadr, 4

;mov [esp+0x10], ecx
add tmpadr, esp, 16
store ecx, tmpadr, 4

;mov dword [esp+0x14], 0x3
add tmpadr, esp, 20
mov tmp1, 0x3
store tmp1, tmpadr, 4

;mov ebp, loc_41FEB0
mov ebp, loc_41FEB0

;mov bl, 0xff
and ebx, ebx, 0xffffff00
or ebx, ebx, 0xff

tcall loc_401721
endp

proc loc_401721
;mov eax, [esp+0x10]
add tmpadr, esp, 16
load eax, tmpadr, 4

;mov edi, [eax]
load edi, eax, 1

;mov eax, [edi+0x4]
add tmpadr, edi, 4
load eax, tmpadr, 1

;cmp eax, edi
cmoveq eax, edi, tmpcnd, 0, 1

;jz near loc_4017BA
ctcallz tmpcnd, loc_4017BA

tcall loc_401732
endp

proc loc_401732
;mov ecx, [eax+0x4]
add tmpadr, eax, 4
load ecx, tmpadr, 1

;mov [edi+0x4], ecx
add tmpadr, edi, 4
store ecx, tmpadr, 1

;mov ecx, [eax+0x4]
add tmpadr, eax, 4
load ecx, tmpadr, 1

;mov [ecx], edi
store edi, ecx, 1

;mov esi, [eax+0xc]
add tmpadr, eax, 12
load esi, tmpadr, 1

;mov cl, [esi+0x57]
add tmpadr, esi, 87
load8z tmp0, tmpadr, 1
and ecx, ecx, 0xffffff00
or ecx, ecx, tmp0

;cmp cl, dl
sub tmp1, ecx, edx
and tmpcnd, tmp1, 0xff

;jz short loc_40174C
ctcallz tmpcnd, loc_40174C

tcall loc_401747
endp

proc loc_401747
;dec cl
sub tmp3, ecx, 1
ins8ll ecx, ecx, tmp3

;mov [esi+0x57], cl
add tmpadr, esi, 87
store8 ecx, tmpadr, 1

tcall loc_40174C
endp

proc loc_40174C
;mov ecx, [loc_41FEB0]
load ecx, loc_41FEB0, 4

;mov [eax], ecx
store ecx, eax, 1

;mov ecx, [loc_41FEB0]
load ecx, loc_41FEB0, 4

;mov [ecx+0x4], eax
add tmpadr, ecx, 4
store eax, tmpadr, 1

;xor ecx, ecx
xor ecx, ecx, ecx

;mov [loc_41FEB0], eax
store eax, loc_41FEB0, 4

;mov cl, [eax+0x2c]
add tmpadr, eax, 44
load8z tmp0, tmpadr, 1
and ecx, ecx, 0xffffff00
or ecx, ecx, tmp0

;mov [eax+0x4], ebp
add tmpadr, eax, 4
store ebp, tmpadr, 1

;mov [eax+0x10], edx
add tmpadr, eax, 16
store edx, tmpadr, 1

;mov byte [eax+0x19], 0x1
add tmpadr, eax, 25
mov tmp1, 0x1
store8 tmp1, tmpadr, 1

;mov [eax+0xc], edx
add tmpadr, eax, 12
store edx, tmpadr, 1

;mov [eax+0x1a], bl
add tmpadr, eax, 26
store8 ebx, tmpadr, 1

;mov byte [ecx+loc_455F68], 0x3
mov tmpadr, loc_455F68
add tmpadr, tmpadr, ecx
mov tmp1, 0x3
store8 tmp1, tmpadr, 1

;mov ecx, [eax+0x8]
add tmpadr, eax, 8
load ecx, tmpadr, 1

;cmp ecx, edx
cmoveq ecx, edx, tmpcnd, 0, 1

;jz short loc_4017AF
ctcallz tmpcnd, loc_4017AF

tcall loc_401785
endp

proc loc_401785
;mov esi, [loc_41FEB0]
load esi, loc_41FEB0, 4

;mov [ecx], esi
store esi, ecx, 1

;mov esi, [loc_41FEB0]
load esi, loc_41FEB0, 4

;mov [esi+0x4], ecx
add tmpadr, esi, 4
store ecx, tmpadr, 1

;mov [loc_41FEB0], ecx
store ecx, loc_41FEB0, 4

;mov [ecx+0x4], ebp
add tmpadr, ecx, 4
store ebp, tmpadr, 1

;mov [ecx+0x10], edx
add tmpadr, ecx, 16
store edx, tmpadr, 1

;mov byte [ecx+0x19], 0x1
add tmpadr, ecx, 25
mov tmp1, 0x1
store8 tmp1, tmpadr, 1

;mov [ecx+0xc], edx
add tmpadr, ecx, 12
store edx, tmpadr, 1

;mov [ecx+0x1a], bl
add tmpadr, ecx, 26
store8 ebx, tmpadr, 1

;mov [eax+0x8], edx
add tmpadr, eax, 8
store edx, tmpadr, 1

tcall loc_4017AF
endp

proc loc_4017AF
;mov eax, [edi+0x4]
add tmpadr, edi, 4
load eax, tmpadr, 1

;cmp eax, edi
cmoveq eax, edi, tmpcnd, 0, 1

;jnz near loc_401732
ctcallnz tmpcnd, loc_401732

tcall loc_4017BA
endp

proc loc_4017BA
;mov eax, [esp+0x14]
add tmpadr, esp, 20
load eax, tmpadr, 4

;mov esi, [esp+0x10]
add tmpadr, esp, 16
load esi, tmpadr, 4

;dec eax
sub eax, eax, 1

;sub esi, 0x4
sub esi, esi, 4

;cmp eax, edx
cmovugt eax, edx, tmpcnd, 0, 1

;mov [esp+0x14], eax
add tmpadr, esp, 20
store eax, tmpadr, 4

;mov [esp+0x10], esi
add tmpadr, esp, 16
store esi, tmpadr, 4

;ja near loc_401721
ctcallz tmpcnd, loc_401721

tcall loc_4017D6
endp

proc loc_4017D6
;pop edi
POP edi

;pop esi
POP esi

;pop ebp
POP ebp

;pop ebx
POP ebx

;add esp, 0x14
add esp, esp, 20

;ret
POP tmp1
tcall tmp1
endp

proc loc_4017E0
;lea eax, [ecx+ecx*2]
shl tmpadr, ecx, 1
add eax, tmpadr, ecx

;push esi
PUSH esi

;shl eax, 0x4
shl eax, eax, 4

;add eax, loc_41E6B0
mov tmp1, loc_41E6B0
add eax, eax, tmp1

;cmp [eax+0x10], edx
add tmpadr, eax, 16
load tmp1, tmpadr, 1
cmoveq tmp1, edx, tmpcnd, 0, 1

;jnz near loc_401895
ctcallnz tmpcnd, loc_401895

tcall loc_4017F5
endp

proc loc_4017F5
;xor ecx, ecx
xor ecx, ecx, ecx

;mov cl, [eax+0x19]
add tmpadr, eax, 25
load8z tmp0, tmpadr, 1
and ecx, ecx, 0xffffff00
or ecx, ecx, tmp0

;sub ecx, 0x2
sub ecx, ecx, 2
mov tmpcnd, ecx

;jz short loc_401804
ctcallz tmpcnd, loc_401804

tcall loc_4017FF
endp

proc loc_4017FF
;dec ecx
sub ecx, ecx, 1
mov tmpcnd, ecx

;jz short loc_401815
ctcallz tmpcnd, loc_401815

tcall loc_401802
endp

proc loc_401802
;pop esi
POP esi

;ret
POP tmp1
tcall tmp1
endp

proc loc_401804
;mov edx, [eax+0xc]
add tmpadr, eax, 12
load edx, tmpadr, 1

;xor ecx, ecx
xor ecx, ecx, ecx

;mov cl, [eax+0x18]
add tmpadr, eax, 24
load8z tmp0, tmpadr, 1
and ecx, ecx, 0xffffff00
or ecx, ecx, tmp0

;lea ecx, [ecx+edx+0x81]
add tmpadr, ecx, edx
add ecx, tmpadr, 129

;inc byte [ecx]
load8z tmp1, ecx, 1
add tmp1, tmp1, 1
store8 tmp1, ecx, 1

tcall loc_401815
endp

proc loc_401815
;mov ecx, [eax]
load ecx, eax, 1

;mov edx, [eax+0x4]
add tmpadr, eax, 4
load edx, tmpadr, 1

;mov [ecx+0x4], edx
add tmpadr, ecx, 4
store edx, tmpadr, 1

;mov ecx, [eax+0x4]
add tmpadr, eax, 4
load ecx, tmpadr, 1

;mov edx, [eax]
load edx, eax, 1

;mov [ecx], edx
store edx, ecx, 1

;mov esi, [eax+0xc]
add tmpadr, eax, 12
load esi, tmpadr, 1

;xor edx, edx
xor edx, edx, edx

;mov cl, [esi+0x57]
add tmpadr, esi, 87
load8z tmp0, tmpadr, 1
and ecx, ecx, 0xffffff00
or ecx, ecx, tmp0

;cmp cl, dl
sub tmp1, ecx, edx
and tmpcnd, tmp1, 0xff

;jz short loc_401835
ctcallz tmpcnd, loc_401835

tcall loc_401830
endp

proc loc_401830
;dec cl
sub tmp3, ecx, 1
ins8ll ecx, ecx, tmp3

;mov [esi+0x57], cl
add tmpadr, esi, 87
store8 ecx, tmpadr, 1

tcall loc_401835
endp

proc loc_401835
;mov ecx, [loc_41FEB0]
load ecx, loc_41FEB0, 4

;mov esi, loc_41FEB0
mov esi, loc_41FEB0

;mov [eax], ecx
store ecx, eax, 1

;mov ecx, [loc_41FEB0]
load ecx, loc_41FEB0, 4

;mov [ecx+0x4], eax
add tmpadr, ecx, 4
store eax, tmpadr, 1

;mov [loc_41FEB0], eax
store eax, loc_41FEB0, 4

;mov ecx, [eax+0x8]
add tmpadr, eax, 8
load ecx, tmpadr, 1

;mov [eax+0x4], esi
add tmpadr, eax, 4
store esi, tmpadr, 1

;cmp ecx, edx
cmoveq ecx, edx, tmpcnd, 0, 1

;mov [eax+0x10], edx
add tmpadr, eax, 16
store edx, tmpadr, 1

;mov byte [eax+0x19], 0x1
add tmpadr, eax, 25
mov tmp1, 0x1
store8 tmp1, tmpadr, 1

;mov [eax+0xc], edx
add tmpadr, eax, 12
store edx, tmpadr, 1

;mov byte [eax+0x1a], 0xff
add tmpadr, eax, 26
mov tmp1, 0xff
store8 tmp1, tmpadr, 1

;jz short loc_401895
ctcallz tmpcnd, loc_401895

tcall loc_401868
endp

proc loc_401868
;push edi
PUSH edi

;mov edi, [loc_41FEB0]
load edi, loc_41FEB0, 4

;mov [ecx], edi
store edi, ecx, 1

;mov edi, [loc_41FEB0]
load edi, loc_41FEB0, 4

;mov [edi+0x4], ecx
add tmpadr, edi, 4
store ecx, tmpadr, 1

;mov [loc_41FEB0], ecx
store ecx, loc_41FEB0, 4

;mov [ecx+0x4], esi
add tmpadr, ecx, 4
store esi, tmpadr, 1

;mov [ecx+0x10], edx
add tmpadr, ecx, 16
store edx, tmpadr, 1

;mov byte [ecx+0x19], 0x1
add tmpadr, ecx, 25
mov tmp1, 0x1
store8 tmp1, tmpadr, 1

;mov [ecx+0xc], edx
add tmpadr, ecx, 12
store edx, tmpadr, 1

;mov byte [ecx+0x1a], 0xff
add tmpadr, ecx, 26
mov tmp1, 0xff
store8 tmp1, tmpadr, 1

;mov [eax+0x8], edx
add tmpadr, eax, 8
store edx, tmpadr, 1

;pop edi
POP edi

tcall loc_401895
endp

proc loc_401895
;pop esi
POP esi

;ret
POP tmp1
tcall tmp1
endp

proc loc_4018A0
;lea ecx, [ecx+ecx*2]
shl tmpadr, ecx, 1
add ecx, tmpadr, ecx

;shl ecx, 0x4
shl ecx, ecx, 4

;add ecx, loc_41E6B0
mov tmp1, loc_41E6B0
add ecx, ecx, tmp1

;cmp [ecx+0x10], edx
add tmpadr, ecx, 16
load tmp1, tmpadr, 1
cmoveq tmp1, edx, tmpcnd, 0, 1

;jnz short loc_4018F5
ctcallnz tmpcnd, loc_4018F5

tcall loc_4018B1
endp

proc loc_4018B1
;mov al, [ecx+0x19]
add tmpadr, ecx, 25
load8z tmp0, tmpadr, 1
and eax, eax, 0xffffff00
or eax, eax, tmp0

;cmp al, 0x2
and eflags, eflags, ~CF
and tmp3, eax, 0xff
cmovult tmp3, 0x2, tmp3, CF, 0
or eflags, eflags, tmp3
sub tmp1, eax, 2

;jb short loc_4018F5
and tmp1, eflags, CF
ctcallnz tmp1, loc_4018F5

tcall loc_4018B8
endp

proc loc_4018B8
;cmp al, 0x3
and eflags, eflags, ~(CF|ZF)
and tmp3, eax, 0xff
cmovult tmp3, 0x3, tmp3, CF, 0
or eflags, eflags, tmp3
sub tmp1, eax, 3
and tmp0, tmp1, 0xff
cmovz tmp0, tmp0, ZF, 0
or eflags, eflags, tmp0

;ja short loc_4018F5
and tmp1, eflags, ZF | CF
ctcallz tmp1, loc_4018F5

tcall loc_4018BC
endp

proc loc_4018BC
;mov eax, [ecx+0x8]
add tmpadr, ecx, 8
load eax, tmpadr, 1

;xor edx, edx
xor edx, edx, edx

;cmp eax, edx
cmoveq eax, edx, tmpcnd, 0, 1

;jz short loc_4018F5
ctcallz tmpcnd, loc_4018F5

tcall loc_4018C5
endp

proc loc_4018C5
;push esi
PUSH esi

;mov esi, [loc_41FEB0]
load esi, loc_41FEB0, 4

;mov [eax], esi
store esi, eax, 1

;mov esi, [loc_41FEB0]
load esi, loc_41FEB0, 4

;mov [esi+0x4], eax
add tmpadr, esi, 4
store eax, tmpadr, 1

;mov [loc_41FEB0], eax
store eax, loc_41FEB0, 4

;mov dword [eax+0x4], loc_41FEB0
add tmpadr, eax, 4
mov tmp1, loc_41FEB0
store tmp1, tmpadr, 1

;mov [eax+0x10], edx
add tmpadr, eax, 16
store edx, tmpadr, 1

;mov byte [eax+0x19], 0x1
add tmpadr, eax, 25
mov tmp1, 0x1
store8 tmp1, tmpadr, 1

;mov [eax+0xc], edx
add tmpadr, eax, 12
store edx, tmpadr, 1

;mov byte [eax+0x1a], 0xff
add tmpadr, eax, 26
mov tmp1, 0xff
store8 tmp1, tmpadr, 1

;mov [ecx+0x8], edx
add tmpadr, ecx, 8
store edx, tmpadr, 1

;pop esi
POP esi

tcall loc_4018F5
endp

proc loc_4018F5
;ret 0x4
POP tmp1
add esp, esp, 4
tcall tmp1
endp

proc loc_401900
;push esi
PUSH esi

;mov esi, [ecx+0xc]
add tmpadr, ecx, 12
load esi, tmpadr, 1

;xor edx, edx
xor edx, edx, edx

;mov al, [esi+0x57]
add tmpadr, esi, 87
load8z tmp0, tmpadr, 1
and eax, eax, 0xffffff00
or eax, eax, tmp0

;cmp al, dl
sub tmp1, eax, edx
and tmpcnd, tmp1, 0xff

;jz short loc_401912
ctcallz tmpcnd, loc_401912

tcall loc_40190D
endp

proc loc_40190D
;dec al
sub tmp3, eax, 1
ins8ll eax, eax, tmp3

;mov [esi+0x57], al
add tmpadr, esi, 87
store8 eax, tmpadr, 1

tcall loc_401912
endp

proc loc_401912
;mov eax, [loc_41FEB0]
load eax, loc_41FEB0, 4

;mov esi, loc_41FEB0
mov esi, loc_41FEB0

;mov [ecx], eax
store eax, ecx, 1

;mov eax, [loc_41FEB0]
load eax, loc_41FEB0, 4

;mov [eax+0x4], ecx
add tmpadr, eax, 4
store ecx, tmpadr, 1

;xor eax, eax
xor eax, eax, eax

;mov [loc_41FEB0], ecx
store ecx, loc_41FEB0, 4

;mov al, [ecx+0x2c]
add tmpadr, ecx, 44
load8z tmp0, tmpadr, 1
and eax, eax, 0xffffff00
or eax, eax, tmp0

;mov [ecx+0x4], esi
add tmpadr, ecx, 4
store esi, tmpadr, 1

;mov [ecx+0x10], edx
add tmpadr, ecx, 16
store edx, tmpadr, 1

;mov byte [ecx+0x19], 0x1
add tmpadr, ecx, 25
mov tmp1, 0x1
store8 tmp1, tmpadr, 1

;mov [ecx+0xc], edx
add tmpadr, ecx, 12
store edx, tmpadr, 1

;mov byte [ecx+0x1a], 0xff
add tmpadr, ecx, 26
mov tmp1, 0xff
store8 tmp1, tmpadr, 1

;mov byte [eax+loc_455F68], 0x3
mov tmpadr, loc_455F68
add tmpadr, tmpadr, eax
mov tmp1, 0x3
store8 tmp1, tmpadr, 1

;mov eax, [ecx+0x8]
add tmpadr, ecx, 8
load eax, tmpadr, 1

;cmp eax, edx
cmoveq eax, edx, tmpcnd, 0, 1

;jz short loc_40197C
ctcallz tmpcnd, loc_40197C

tcall loc_401950
endp

proc loc_401950
;push edi
PUSH edi

;mov edi, [loc_41FEB0]
load edi, loc_41FEB0, 4

;mov [eax], edi
store edi, eax, 1

;mov edi, [loc_41FEB0]
load edi, loc_41FEB0, 4

;mov [edi+0x4], eax
add tmpadr, edi, 4
store eax, tmpadr, 1

;mov [loc_41FEB0], eax
store eax, loc_41FEB0, 4

;mov [eax+0x4], esi
add tmpadr, eax, 4
store esi, tmpadr, 1

;mov [eax+0x10], edx
add tmpadr, eax, 16
store edx, tmpadr, 1

;mov byte [eax+0x19], 0x1
add tmpadr, eax, 25
mov tmp1, 0x1
store8 tmp1, tmpadr, 1

;mov [eax+0xc], edx
add tmpadr, eax, 12
store edx, tmpadr, 1

;mov byte [eax+0x1a], 0xff
add tmpadr, eax, 26
mov tmp1, 0xff
store8 tmp1, tmpadr, 1

;mov [ecx+0x8], edx
add tmpadr, ecx, 8
store edx, tmpadr, 1

;pop edi
POP edi

tcall loc_40197C
endp

proc loc_40197C
;pop esi
POP esi

;ret
POP tmp1
tcall tmp1
endp

proc loc_401980
;mov eax, [loc_41FEB0]
load eax, loc_41FEB0, 4

;mov [ecx], eax
store eax, ecx, 1

;mov edx, [loc_41FEB0]
load edx, loc_41FEB0, 4

;xor eax, eax
xor eax, eax, eax

;mov [edx+0x4], ecx
add tmpadr, edx, 4
store ecx, tmpadr, 1

;mov [loc_41FEB0], ecx
store ecx, loc_41FEB0, 4

;mov dword [ecx+0x4], loc_41FEB0
add tmpadr, ecx, 4
mov tmp1, loc_41FEB0
store tmp1, tmpadr, 1

;mov [ecx+0x10], eax
add tmpadr, ecx, 16
store eax, tmpadr, 1

;mov byte [ecx+0x19], 0x1
add tmpadr, ecx, 25
mov tmp1, 0x1
store8 tmp1, tmpadr, 1

;mov [ecx+0xc], eax
add tmpadr, ecx, 12
store eax, tmpadr, 1

;mov byte [ecx+0x1a], 0xff
add tmpadr, ecx, 26
mov tmp1, 0xff
store8 tmp1, tmpadr, 1

;ret
POP tmp1
tcall tmp1
endp

proc loc_4019B0
;mov eax, [loc_41FEB4]
load eax, loc_41FEB4, 4

;cmp eax, loc_41FEB0
mov tmp1, loc_41FEB0
cmoveq eax, tmp1, tmpcnd, 0, 1

;jz short loc_4019D1
ctcallz tmpcnd, loc_4019D1

tcall loc_4019BC
endp

proc loc_4019BC
;mov edx, [eax+0x4]
add tmpadr, eax, 4
load edx, tmpadr, 1

;lea ecx, [eax+0x4]
add ecx, eax, 4

;mov [loc_41FEB4], edx
store edx, loc_41FEB4, 4

;mov ecx, [ecx]
load ecx, ecx, 1

;mov dword [ecx], loc_41FEB0
mov tmp1, loc_41FEB0
store tmp1, ecx, 1

;ret
POP tmp1
tcall tmp1
endp

proc loc_4019D1
;xor eax, eax
xor eax, eax, eax

;ret
POP tmp1
tcall tmp1
endp

proc loc_4019E0
;push ebp
PUSH ebp

;push esi
PUSH esi

;push edi
PUSH edi

;xor esi, esi
xor esi, esi, esi

;mov ecx, loc_42A95F
mov ecx, loc_42A95F

;mov edi, loc_41FED0
mov edi, loc_41FED0

;mov ebp, 0x10
mov ebp, 0x10

tcall loc_4019F4
endp

proc loc_4019F4
;mov al, [ecx]
load8z tmp0, ecx, 1
and eax, eax, 0xffffff00
or eax, eax, tmp0

;mov dl, [ecx+0x1]
add tmpadr, ecx, 1
load8z tmp0, tmpadr, 1
and edx, edx, 0xffffff00
or edx, edx, tmp0

;cmp al, dl
and eflags, eflags, ~(CF|ZF)
and tmp3, eax, 0xff
and tmp5, edx, 0xff
cmovult tmp3, tmp5, tmp3, CF, 0
or eflags, eflags, tmp3
sub tmp1, eax, edx
and tmp0, tmp1, 0xff
cmovz tmp0, tmp0, ZF, 0
or eflags, eflags, tmp0

;jbe short loc_401A0E
and tmp1, eflags, ZF | CF
ctcallnz tmp1, loc_401A0E

tcall loc_4019FD
endp

proc loc_4019FD
;sub al, dl
sub tmp3, eax, edx
ins8ll eax, eax, tmp3

;mov [esi+loc_41FEC0], al
mov tmpadr, loc_41FEC0
add tmpadr, tmpadr, esi
store8 eax, tmpadr, 1

;lea eax, [ecx-0x57]
add eax, ecx, -87

;mov [edi], eax
store eax, edi, 1

;inc esi
add esi, esi, 1

;add edi, 0x4
add edi, edi, 4

tcall loc_401A0E
endp

proc loc_401A0E
;add ecx, 0x104
add ecx, ecx, 260

;dec ebp
sub ebp, ebp, 1
mov tmpcnd, ebp

;jnz short loc_4019F4
ctcallnz tmpcnd, loc_4019F4

tcall loc_401A17
endp

proc loc_401A17
;mov byte [esi+loc_41FEC0], 0x0
mov tmpadr, loc_41FEC0
add tmpadr, tmpadr, esi
store8 0, tmpadr, 1

;mov dword [esi*4+loc_41FED0], 0x0
mov tmpadr, loc_41FED0
shl tmp0, esi, 2
add tmpadr, tmpadr, tmp0
store 0, tmpadr, 4

;pop edi
POP edi

;pop esi
POP esi

;mov dword [loc_41FF10], 0x0
store 0, loc_41FF10, 4

;pop ebp
POP ebp

;ret
POP tmp1
tcall tmp1
endp

proc loc_401A40
;push ecx
PUSH ecx

;mov ecx, [loc_41FF10]
load ecx, loc_41FF10, 4

;push ebp
PUSH ebp

;mov [esp+0x4], ecx
add tmpadr, esp, 4
store ecx, tmpadr, 4

;mov dl, [ecx+loc_41FEC0]
mov tmpadr, loc_41FEC0
add tmpadr, tmpadr, ecx
load8z tmp0, tmpadr, 1
and edx, edx, 0xffffff00
or edx, edx, tmp0

;lea ebp, [ecx+loc_41FEC0]
mov tmpadr, loc_41FEC0
add ebp, tmpadr, ecx

;test dl, dl
and tmpcnd, edx, 0xff

;jz short loc_401AC7
ctcallz tmpcnd, loc_401AC7

tcall loc_401A5C
endp

proc loc_401A5C
;push ebx
PUSH ebx

;push esi
PUSH esi

;push edi
PUSH edi

;lea esi, [ecx*4+loc_41FED0]
mov tmpadr, loc_41FED0
shl tmp0, ecx, 2
add esi, tmpadr, tmp0

tcall loc_401A66
endp

proc loc_401A66
;mov al, [ecx+loc_41FEC1]
mov tmpadr, loc_41FEC1
add tmpadr, tmpadr, ecx
load8z tmp0, tmpadr, 1
and eax, eax, 0xffffff00
or eax, eax, tmp0

;mov ebx, [esi]
load ebx, esi, 1

;lea edi, [ecx+loc_41FEC1]
mov tmpadr, loc_41FEC1
add edi, tmpadr, ecx

;test al, al
and tmpcnd, eax, 0xff

;jz short loc_401AA3
ctcallz tmpcnd, loc_401AA3

tcall loc_401A78
endp

proc loc_401A78
;lea ecx, [esi+0x4]
add ecx, esi, 4

tcall loc_401A7B
endp

proc loc_401A7B
;cmp al, dl
and eflags, eflags, ~(CF|ZF)
and tmp3, eax, 0xff
and tmp5, edx, 0xff
cmovult tmp3, tmp5, tmp3, CF, 0
or eflags, eflags, tmp3
sub tmp1, eax, edx
and tmp0, tmp1, 0xff
cmovz tmp0, tmp0, ZF, 0
or eflags, eflags, tmp0

;ja short loc_401A85
and tmp1, eflags, ZF | CF
ctcallz tmp1, loc_401A85

tcall loc_401A7F
endp

proc loc_401A7F
;jb short loc_401A94
and tmp1, eflags, CF
ctcallnz tmp1, loc_401A94

tcall loc_401A81
endp

proc loc_401A81
;cmp [ecx], ebx
load tmp1, ecx, 1
cmovugt tmp1, ebx, tmpcnd, 0, 1

;jbe short loc_401A94
ctcallnz tmpcnd, loc_401A94

tcall loc_401A85
endp

proc loc_401A85
;mov [ebp], al
store8 eax, ebp, 1

;mov [edi], dl
store8 edx, edi, 1

;mov dl, al
ins8ll edx, edx, eax

;mov eax, [ecx]
load eax, ecx, 1

;mov [esi], eax
store eax, esi, 1

;mov [ecx], ebx
store ebx, ecx, 1

;mov ebx, [esi]
load ebx, esi, 1

tcall loc_401A94
endp

proc loc_401A94
;mov al, [edi+0x1]
add tmpadr, edi, 1
load8z tmp0, tmpadr, 1
and eax, eax, 0xffffff00
or eax, eax, tmp0

;add ecx, 0x4
add ecx, ecx, 4

;inc edi
add edi, edi, 1

;test al, al
and tmpcnd, eax, 0xff

;jnz short loc_401A7B
ctcallnz tmpcnd, loc_401A7B

tcall loc_401A9F
endp

proc loc_401A9F
;mov ecx, [esp+0x10]
add tmpadr, esp, 16
load ecx, tmpadr, 4

tcall loc_401AA3
endp

proc loc_401AA3
;inc ecx
add ecx, ecx, 1

;add esi, 0x4
add esi, esi, 4

;mov [esp+0x10], ecx
add tmpadr, esp, 16
store ecx, tmpadr, 4

;mov dl, [ecx+loc_41FEC0]
mov tmpadr, loc_41FEC0
add tmpadr, tmpadr, ecx
load8z tmp0, tmpadr, 1
and edx, edx, 0xffffff00
or edx, edx, tmp0

;lea ebp, [ecx+loc_41FEC0]
mov tmpadr, loc_41FEC0
add ebp, tmpadr, ecx

;test dl, dl
and tmpcnd, edx, 0xff

;jnz short loc_401A66
ctcallnz tmpcnd, loc_401A66

tcall loc_401ABB
endp

proc loc_401ABB
;pop edi
POP edi

;pop esi
POP esi

;pop ebx
POP ebx

;mov [loc_41FF10], ecx
store ecx, loc_41FF10, 4

;pop ebp
POP ebp

;pop ecx
POP ecx

;ret
POP tmp1
tcall tmp1
endp

proc loc_401AC7
;mov [loc_41FF10], ecx
store ecx, loc_41FF10, 4

;pop ebp
POP ebp

;pop ecx
POP ecx

;ret
POP tmp1
tcall tmp1
endp

proc loc_401AD0
;push ebx
PUSH ebx

;mov bl, [loc_41FEC0]
load8z tmp0, loc_41FEC0, 4
and ebx, ebx, 0xffffff00
or ebx, ebx, tmp0

;push ebp
PUSH ebp

;push esi
PUSH esi

;push edi
PUSH edi

;xor edx, edx
xor edx, edx, edx

;xor edi, edi
xor edi, edi, edi

;cmp bl, dl
sub tmp1, ebx, edx
and tmpcnd, tmp1, 0xff

;jz short loc_401B06
ctcallz tmpcnd, loc_401B06

tcall loc_401AE2
endp

proc loc_401AE2
;mov ecx, loc_41FED0
mov ecx, loc_41FED0

tcall loc_401AE7
endp

proc loc_401AE7
;mov esi, [ecx]
load esi, ecx, 1

;cmp [esi+0x1c], edx
add tmpadr, esi, 28
load tmp1, tmpadr, 1
cmoveq tmp1, edx, tmpcnd, 0, 1

;jnz short loc_401AF8
ctcallnz tmpcnd, loc_401AF8

tcall loc_401AEE
endp

proc loc_401AEE
;mov eax, [esi+0x14]
add tmpadr, esi, 20
load eax, tmpadr, 1

;lea ebp, [esi+0x10]
add ebp, esi, 16

;cmp eax, ebp
cmoveq eax, ebp, tmpcnd, 0, 1

;jnz short loc_401B38
ctcallnz tmpcnd, loc_401B38

tcall loc_401AF8
endp

proc loc_401AF8
;mov al, [edi+loc_41FEC1]
mov tmpadr, loc_41FEC1
add tmpadr, tmpadr, edi
load8z tmp0, tmpadr, 1
and eax, eax, 0xffffff00
or eax, eax, tmp0

;inc edi
add edi, edi, 1

;add ecx, 0x4
add ecx, ecx, 4

;cmp al, dl
sub tmp1, eax, edx
and tmpcnd, tmp1, 0xff

;jnz short loc_401AE7
ctcallnz tmpcnd, loc_401AE7

tcall loc_401B06
endp

proc loc_401B06
;xor edi, edi
xor edi, edi, edi

;cmp bl, dl
sub tmp1, ebx, edx
and tmpcnd, tmp1, 0xff

;jz near loc_401C3A
ctcallz tmpcnd, loc_401C3A

tcall loc_401B10
endp

proc loc_401B10
;mov ecx, loc_41FED0
mov ecx, loc_41FED0

tcall loc_401B15
endp

proc loc_401B15
;mov esi, [ecx]
load esi, ecx, 1

;mov eax, [esi+0xc]
add tmpadr, esi, 12
load eax, tmpadr, 1

;lea ebp, [esi+0x8]
add ebp, esi, 8

;cmp eax, ebp
cmoveq eax, ebp, tmpcnd, 0, 1

;jnz near loc_401BB9
ctcallnz tmpcnd, loc_401BB9

tcall loc_401B25
endp

proc loc_401B25
;mov al, [edi+loc_41FEC1]
mov tmpadr, loc_41FEC1
add tmpadr, tmpadr, edi
load8z tmp0, tmpadr, 1
and eax, eax, 0xffffff00
or eax, eax, tmp0

;inc edi
add edi, edi, 1

;add ecx, 0x4
add ecx, ecx, 4

;cmp al, dl
sub tmp1, eax, edx
and tmpcnd, tmp1, 0xff

;jnz short loc_401B15
ctcallnz tmpcnd, loc_401B15

tcall loc_401B33
endp

proc loc_401B33
;jmp loc_401C3A
tcall loc_401C3A
endp

proc loc_401B38
;mov cl, [esi+0x57]
add tmpadr, esi, 87
load8z tmp0, tmpadr, 1
and ecx, ecx, 0xffffff00
or ecx, ecx, tmp0

;cmp cl, dl
sub tmp1, ecx, edx
and tmpcnd, tmp1, 0xff

;jz short loc_401B44
ctcallz tmpcnd, loc_401B44

tcall loc_401B3F
endp

proc loc_401B3F
;dec cl
sub tmp3, ecx, 1
ins8ll ecx, ecx, tmp3

;mov [esi+0x57], cl
add tmpadr, esi, 87
store8 ecx, tmpadr, 1

tcall loc_401B44
endp

proc loc_401B44
;mov ecx, [eax]
load ecx, eax, 1

;mov esi, [eax+0x4]
add tmpadr, eax, 4
load esi, tmpadr, 1

;mov bl, 0xff
and ebx, ebx, 0xffffff00
or ebx, ebx, 0xff

;mov [ecx+0x4], esi
add tmpadr, ecx, 4
store esi, tmpadr, 1

;mov ecx, [eax+0x4]
add tmpadr, eax, 4
load ecx, tmpadr, 1

;mov esi, [eax]
load esi, eax, 1

;mov [ecx], esi
store esi, ecx, 1

;xor ecx, ecx
xor ecx, ecx, ecx

;mov cl, [eax+0x2c]
add tmpadr, eax, 44
load8z tmp0, tmpadr, 1
and ecx, ecx, 0xffffff00
or ecx, ecx, tmp0

;mov [eax+0x10], edx
add tmpadr, eax, 16
store edx, tmpadr, 1

;mov byte [eax+0x19], 0x1
add tmpadr, eax, 25
mov tmp1, 0x1
store8 tmp1, tmpadr, 1

;mov [eax+0xc], edx
add tmpadr, eax, 12
store edx, tmpadr, 1

;mov [eax+0x1a], bl
add tmpadr, eax, 26
store8 ebx, tmpadr, 1

;mov byte [ecx+loc_455F68], 0x3
mov tmpadr, loc_455F68
add tmpadr, tmpadr, ecx
mov tmp1, 0x3
store8 tmp1, tmpadr, 1

;mov ecx, [eax+0x8]
add tmpadr, eax, 8
load ecx, tmpadr, 1

;cmp ecx, edx
cmoveq ecx, edx, tmpcnd, 0, 1

;jnz near loc_401D68
ctcallnz tmpcnd, loc_401D68

tcall loc_401B79
endp

proc loc_401B79
;mov cl, [edi+loc_41FEC0]
mov tmpadr, loc_41FEC0
add tmpadr, tmpadr, edi
load8z tmp0, tmpadr, 1
and ecx, ecx, 0xffffff00
or ecx, ecx, tmp0

;dec cl
sub tmp3, ecx, 1
ins8ll ecx, ecx, tmp3
and tmpcnd, ecx, 0xff

;mov [edi+loc_41FEC0], cl
mov tmpadr, loc_41FEC0
add tmpadr, tmpadr, edi
store8 ecx, tmpadr, 1

;jnz short loc_401BAE
ctcallnz tmpcnd, loc_401BAE

tcall loc_401B89
endp

proc loc_401B89
;mov cl, [edi+loc_41FEC1]
mov tmpadr, loc_41FEC1
add tmpadr, tmpadr, edi
load8z tmp0, tmpadr, 1
and ecx, ecx, 0xffffff00
or ecx, ecx, tmp0

;lea esi, [edi+loc_41FEC1]
mov tmpadr, loc_41FEC1
add esi, tmpadr, edi

;mov ebp, esi
mov ebp, esi

;inc esi
add esi, esi, 1

;cmp cl, dl
sub tmp1, ecx, edx
and tmpcnd, tmp1, 0xff

;mov [edi+loc_41FEC0], cl
mov tmpadr, loc_41FEC0
add tmpadr, tmpadr, edi
store8 ecx, tmpadr, 1

;jz short loc_401BAE
ctcallz tmpcnd, loc_401BAE

tcall loc_401BA2
endp

proc loc_401BA2
;mov cl, [esi]
load8z tmp0, esi, 1
and ecx, ecx, 0xffffff00
or ecx, ecx, tmp0

;inc edi
add edi, edi, 1

;mov [ebp], cl
store8 ecx, ebp, 1

;inc ebp
add ebp, ebp, 1

;inc esi
add esi, esi, 1

;cmp cl, dl
sub tmp1, ecx, edx
and tmpcnd, tmp1, 0xff

;jnz short loc_401BA2
ctcallnz tmpcnd, loc_401BA2

tcall loc_401BAE
endp

proc loc_401BAE
;mov [loc_41FF10], edi
store edi, loc_41FF10, 4

;pop edi
POP edi

;pop esi
POP esi

;pop ebp
POP ebp

;pop ebx
POP ebx

;ret
POP tmp1
tcall tmp1
endp

proc loc_401BB9
;mov cl, [esi+0x57]
add tmpadr, esi, 87
load8z tmp0, tmpadr, 1
and ecx, ecx, 0xffffff00
or ecx, ecx, tmp0

;cmp cl, dl
sub tmp1, ecx, edx
and tmpcnd, tmp1, 0xff

;jz short loc_401BC5
ctcallz tmpcnd, loc_401BC5

tcall loc_401BC0
endp

proc loc_401BC0
;dec cl
sub tmp3, ecx, 1
ins8ll ecx, ecx, tmp3

;mov [esi+0x57], cl
add tmpadr, esi, 87
store8 ecx, tmpadr, 1

tcall loc_401BC5
endp

proc loc_401BC5
;mov ecx, [eax]
load ecx, eax, 1

;mov esi, [eax+0x4]
add tmpadr, eax, 4
load esi, tmpadr, 1

;mov bl, 0xff
and ebx, ebx, 0xffffff00
or ebx, ebx, 0xff

;mov [ecx+0x4], esi
add tmpadr, ecx, 4
store esi, tmpadr, 1

;mov ecx, [eax+0x4]
add tmpadr, eax, 4
load ecx, tmpadr, 1

;mov esi, [eax]
load esi, eax, 1

;mov [ecx], esi
store esi, ecx, 1

;xor ecx, ecx
xor ecx, ecx, ecx

;mov cl, [eax+0x2c]
add tmpadr, eax, 44
load8z tmp0, tmpadr, 1
and ecx, ecx, 0xffffff00
or ecx, ecx, tmp0

;mov [eax+0x10], edx
add tmpadr, eax, 16
store edx, tmpadr, 1

;mov byte [eax+0x19], 0x1
add tmpadr, eax, 25
mov tmp1, 0x1
store8 tmp1, tmpadr, 1

;mov [eax+0xc], edx
add tmpadr, eax, 12
store edx, tmpadr, 1

;mov [eax+0x1a], bl
add tmpadr, eax, 26
store8 ebx, tmpadr, 1

;mov byte [ecx+loc_455F68], 0x3
mov tmpadr, loc_455F68
add tmpadr, tmpadr, ecx
mov tmp1, 0x3
store8 tmp1, tmpadr, 1

;mov ecx, [eax+0x8]
add tmpadr, eax, 8
load ecx, tmpadr, 1

;cmp ecx, edx
cmoveq ecx, edx, tmpcnd, 0, 1

;jnz near loc_401D68
ctcallnz tmpcnd, loc_401D68

tcall loc_401BFA
endp

proc loc_401BFA
;mov cl, [edi+loc_41FEC0]
mov tmpadr, loc_41FEC0
add tmpadr, tmpadr, edi
load8z tmp0, tmpadr, 1
and ecx, ecx, 0xffffff00
or ecx, ecx, tmp0

;dec cl
sub tmp3, ecx, 1
ins8ll ecx, ecx, tmp3
and tmpcnd, ecx, 0xff

;mov [edi+loc_41FEC0], cl
mov tmpadr, loc_41FEC0
add tmpadr, tmpadr, edi
store8 ecx, tmpadr, 1

;jnz short loc_401C2F
ctcallnz tmpcnd, loc_401C2F

tcall loc_401C0A
endp

proc loc_401C0A
;mov cl, [edi+loc_41FEC1]
mov tmpadr, loc_41FEC1
add tmpadr, tmpadr, edi
load8z tmp0, tmpadr, 1
and ecx, ecx, 0xffffff00
or ecx, ecx, tmp0

;lea esi, [edi+loc_41FEC1]
mov tmpadr, loc_41FEC1
add esi, tmpadr, edi

;mov ebp, esi
mov ebp, esi

;inc esi
add esi, esi, 1

;cmp cl, dl
sub tmp1, ecx, edx
and tmpcnd, tmp1, 0xff

;mov [edi+loc_41FEC0], cl
mov tmpadr, loc_41FEC0
add tmpadr, tmpadr, edi
store8 ecx, tmpadr, 1

;jz short loc_401C2F
ctcallz tmpcnd, loc_401C2F

tcall loc_401C23
endp

proc loc_401C23
;mov cl, [esi]
load8z tmp0, esi, 1
and ecx, ecx, 0xffffff00
or ecx, ecx, tmp0

;inc edi
add edi, edi, 1

;mov [ebp], cl
store8 ecx, ebp, 1

;inc ebp
add ebp, ebp, 1

;inc esi
add esi, esi, 1

;cmp cl, dl
sub tmp1, ecx, edx
and tmpcnd, tmp1, 0xff

;jnz short loc_401C23
ctcallnz tmpcnd, loc_401C23

tcall loc_401C2F
endp

proc loc_401C2F
;mov [loc_41FF10], edi
store edi, loc_41FF10, 4

;pop edi
POP edi

;pop esi
POP esi

;pop ebp
POP ebp

;pop ebx
POP ebx

;ret
POP tmp1
tcall tmp1
endp

proc loc_401C3A
;xor edi, edi
xor edi, edi, edi

;cmp bl, dl
sub tmp1, ebx, edx
and tmpcnd, tmp1, 0xff

;jz short loc_401C64
ctcallz tmpcnd, loc_401C64

tcall loc_401C40
endp

proc loc_401C40
;mov ecx, loc_41FED0
mov ecx, loc_41FED0

tcall loc_401C45
endp

proc loc_401C45
;mov esi, [ecx]
load esi, ecx, 1

;cmp [esi+0x1c], edx
add tmpadr, esi, 28
load tmp1, tmpadr, 1
cmoveq tmp1, edx, tmpcnd, 0, 1

;jz short loc_401C56
ctcallz tmpcnd, loc_401C56

tcall loc_401C4C
endp

proc loc_401C4C
;mov eax, [esi+0x14]
add tmpadr, esi, 20
load eax, tmpadr, 1

;lea ebp, [esi+0x10]
add ebp, esi, 16

;cmp eax, ebp
cmoveq eax, ebp, tmpcnd, 0, 1

;jnz short loc_401C93
ctcallnz tmpcnd, loc_401C93

tcall loc_401C56
endp

proc loc_401C56
;mov al, [edi+loc_41FEC1]
mov tmpadr, loc_41FEC1
add tmpadr, tmpadr, edi
load8z tmp0, tmpadr, 1
and eax, eax, 0xffffff00
or eax, eax, tmp0

;inc edi
add edi, edi, 1

;add ecx, 0x4
add ecx, ecx, 4

;cmp al, dl
sub tmp1, eax, edx
and tmpcnd, tmp1, 0xff

;jnz short loc_401C45
ctcallnz tmpcnd, loc_401C45

tcall loc_401C64
endp

proc loc_401C64
;xor edi, edi
xor edi, edi, edi

;cmp bl, dl
sub tmp1, ebx, edx
and tmpcnd, tmp1, 0xff

;jz near loc_401DDB
ctcallz tmpcnd, loc_401DDB

tcall loc_401C6E
endp

proc loc_401C6E
;mov ecx, loc_41FED0
mov ecx, loc_41FED0

tcall loc_401C73
endp

proc loc_401C73
;mov esi, [ecx]
load esi, ecx, 1

;mov eax, [esi+0x4]
add tmpadr, esi, 4
load eax, tmpadr, 1

;cmp eax, esi
cmoveq eax, esi, tmpcnd, 0, 1

;jnz near loc_401D14
ctcallnz tmpcnd, loc_401D14

tcall loc_401C80
endp

proc loc_401C80
;mov al, [edi+loc_41FEC1]
mov tmpadr, loc_41FEC1
add tmpadr, tmpadr, edi
load8z tmp0, tmpadr, 1
and eax, eax, 0xffffff00
or eax, eax, tmp0

;inc edi
add edi, edi, 1

;add ecx, 0x4
add ecx, ecx, 4

;cmp al, dl
sub tmp1, eax, edx
and tmpcnd, tmp1, 0xff

;jnz short loc_401C73
ctcallnz tmpcnd, loc_401C73

tcall loc_401C8E
endp

proc loc_401C8E
;jmp loc_401DDB
tcall loc_401DDB
endp

proc loc_401C93
;mov cl, [esi+0x57]
add tmpadr, esi, 87
load8z tmp0, tmpadr, 1
and ecx, ecx, 0xffffff00
or ecx, ecx, tmp0

;cmp cl, dl
sub tmp1, ecx, edx
and tmpcnd, tmp1, 0xff

;jz short loc_401C9F
ctcallz tmpcnd, loc_401C9F

tcall loc_401C9A
endp

proc loc_401C9A
;dec cl
sub tmp3, ecx, 1
ins8ll ecx, ecx, tmp3

;mov [esi+0x57], cl
add tmpadr, esi, 87
store8 ecx, tmpadr, 1

tcall loc_401C9F
endp

proc loc_401C9F
;mov ecx, [eax]
load ecx, eax, 1

;mov esi, [eax+0x4]
add tmpadr, eax, 4
load esi, tmpadr, 1

;mov bl, 0xff
and ebx, ebx, 0xffffff00
or ebx, ebx, 0xff

;mov [ecx+0x4], esi
add tmpadr, ecx, 4
store esi, tmpadr, 1

;mov ecx, [eax+0x4]
add tmpadr, eax, 4
load ecx, tmpadr, 1

;mov esi, [eax]
load esi, eax, 1

;mov [ecx], esi
store esi, ecx, 1

;xor ecx, ecx
xor ecx, ecx, ecx

;mov cl, [eax+0x2c]
add tmpadr, eax, 44
load8z tmp0, tmpadr, 1
and ecx, ecx, 0xffffff00
or ecx, ecx, tmp0

;mov [eax+0x10], edx
add tmpadr, eax, 16
store edx, tmpadr, 1

;mov byte [eax+0x19], 0x1
add tmpadr, eax, 25
mov tmp1, 0x1
store8 tmp1, tmpadr, 1

;mov [eax+0xc], edx
add tmpadr, eax, 12
store edx, tmpadr, 1

;mov [eax+0x1a], bl
add tmpadr, eax, 26
store8 ebx, tmpadr, 1

;mov byte [ecx+loc_455F68], 0x3
mov tmpadr, loc_455F68
add tmpadr, tmpadr, ecx
mov tmp1, 0x3
store8 tmp1, tmpadr, 1

;mov ecx, [eax+0x8]
add tmpadr, eax, 8
load ecx, tmpadr, 1

;cmp ecx, edx
cmoveq ecx, edx, tmpcnd, 0, 1

;jnz near loc_401D68
ctcallnz tmpcnd, loc_401D68

tcall loc_401CD4
endp

proc loc_401CD4
;mov cl, [edi+loc_41FEC0]
mov tmpadr, loc_41FEC0
add tmpadr, tmpadr, edi
load8z tmp0, tmpadr, 1
and ecx, ecx, 0xffffff00
or ecx, ecx, tmp0

;dec cl
sub tmp3, ecx, 1
ins8ll ecx, ecx, tmp3
and tmpcnd, ecx, 0xff

;mov [edi+loc_41FEC0], cl
mov tmpadr, loc_41FEC0
add tmpadr, tmpadr, edi
store8 ecx, tmpadr, 1

;jnz short loc_401D09
ctcallnz tmpcnd, loc_401D09

tcall loc_401CE4
endp

proc loc_401CE4
;mov cl, [edi+loc_41FEC1]
mov tmpadr, loc_41FEC1
add tmpadr, tmpadr, edi
load8z tmp0, tmpadr, 1
and ecx, ecx, 0xffffff00
or ecx, ecx, tmp0

;lea esi, [edi+loc_41FEC1]
mov tmpadr, loc_41FEC1
add esi, tmpadr, edi

;mov ebp, esi
mov ebp, esi

;inc esi
add esi, esi, 1

;cmp cl, dl
sub tmp1, ecx, edx
and tmpcnd, tmp1, 0xff

;mov [edi+loc_41FEC0], cl
mov tmpadr, loc_41FEC0
add tmpadr, tmpadr, edi
store8 ecx, tmpadr, 1

;jz short loc_401D09
ctcallz tmpcnd, loc_401D09

tcall loc_401CFD
endp

proc loc_401CFD
;mov cl, [esi]
load8z tmp0, esi, 1
and ecx, ecx, 0xffffff00
or ecx, ecx, tmp0

;inc edi
add edi, edi, 1

;mov [ebp], cl
store8 ecx, ebp, 1

;inc ebp
add ebp, ebp, 1

;inc esi
add esi, esi, 1

;cmp cl, dl
sub tmp1, ecx, edx
and tmpcnd, tmp1, 0xff

;jnz short loc_401CFD
ctcallnz tmpcnd, loc_401CFD

tcall loc_401D09
endp

proc loc_401D09
;mov [loc_41FF10], edi
store edi, loc_41FF10, 4

;pop edi
POP edi

;pop esi
POP esi

;pop ebp
POP ebp

;pop ebx
POP ebx

;ret
POP tmp1
tcall tmp1
endp

proc loc_401D14
;xor ecx, ecx
xor ecx, ecx, ecx

;mov cl, [eax+0x18]
add tmpadr, eax, 24
load8z tmp0, tmpadr, 1
and ecx, ecx, 0xffffff00
or ecx, ecx, tmp0

;mov bl, [ecx+esi+0x81]
add tmpadr, ecx, esi
add tmpadr, tmpadr, 129
load8z tmp0, tmpadr, 1
and ebx, ebx, 0xffffff00
or ebx, ebx, tmp0

;lea ecx, [ecx+esi+0x81]
add tmpadr, ecx, esi
add ecx, tmpadr, 129

;inc bl
add tmp3, ebx, 1
ins8ll ebx, ebx, tmp3

;mov [ecx], bl
store8 ebx, ecx, 1

;mov cl, [esi+0x57]
add tmpadr, esi, 87
load8z tmp0, tmpadr, 1
and ecx, ecx, 0xffffff00
or ecx, ecx, tmp0

;cmp cl, dl
sub tmp1, ecx, edx
and tmpcnd, tmp1, 0xff

;jz short loc_401D37
ctcallz tmpcnd, loc_401D37

tcall loc_401D32
endp

proc loc_401D32
;dec cl
sub tmp3, ecx, 1
ins8ll ecx, ecx, tmp3

;mov [esi+0x57], cl
add tmpadr, esi, 87
store8 ecx, tmpadr, 1

tcall loc_401D37
endp

proc loc_401D37
;mov ecx, [eax]
load ecx, eax, 1

;mov esi, [eax+0x4]
add tmpadr, eax, 4
load esi, tmpadr, 1

;mov bl, 0xff
and ebx, ebx, 0xffffff00
or ebx, ebx, 0xff

;mov [ecx+0x4], esi
add tmpadr, ecx, 4
store esi, tmpadr, 1

;mov ecx, [eax+0x4]
add tmpadr, eax, 4
load ecx, tmpadr, 1

;mov esi, [eax]
load esi, eax, 1

;mov [ecx], esi
store esi, ecx, 1

;xor ecx, ecx
xor ecx, ecx, ecx

;mov cl, [eax+0x2c]
add tmpadr, eax, 44
load8z tmp0, tmpadr, 1
and ecx, ecx, 0xffffff00
or ecx, ecx, tmp0

;mov [eax+0x10], edx
add tmpadr, eax, 16
store edx, tmpadr, 1

;mov byte [eax+0x19], 0x1
add tmpadr, eax, 25
mov tmp1, 0x1
store8 tmp1, tmpadr, 1

;mov [eax+0xc], edx
add tmpadr, eax, 12
store edx, tmpadr, 1

;mov [eax+0x1a], bl
add tmpadr, eax, 26
store8 ebx, tmpadr, 1

;mov byte [ecx+loc_455F68], 0x3
mov tmpadr, loc_455F68
add tmpadr, tmpadr, ecx
mov tmp1, 0x3
store8 tmp1, tmpadr, 1

;mov ecx, [eax+0x8]
add tmpadr, eax, 8
load ecx, tmpadr, 1

;cmp ecx, edx
cmoveq ecx, edx, tmpcnd, 0, 1

;jz short loc_401D9B
ctcallz tmpcnd, loc_401D9B

tcall loc_401D68
endp

proc loc_401D68
;mov esi, [loc_41FEB0]
load esi, loc_41FEB0, 4

;pop edi
POP edi

;mov [ecx], esi
store esi, ecx, 1

;mov esi, [loc_41FEB0]
load esi, loc_41FEB0, 4

;mov [esi+0x4], ecx
add tmpadr, esi, 4
store ecx, tmpadr, 1

;mov [loc_41FEB0], ecx
store ecx, loc_41FEB0, 4

;mov dword [ecx+0x4], loc_41FEB0
add tmpadr, ecx, 4
mov tmp1, loc_41FEB0
store tmp1, tmpadr, 1

;mov [ecx+0x10], edx
add tmpadr, ecx, 16
store edx, tmpadr, 1

;mov byte [ecx+0x19], 0x1
add tmpadr, ecx, 25
mov tmp1, 0x1
store8 tmp1, tmpadr, 1

;mov [ecx+0xc], edx
add tmpadr, ecx, 12
store edx, tmpadr, 1

;pop esi
POP esi

;mov [ecx+0x1a], bl
add tmpadr, ecx, 26
store8 ebx, tmpadr, 1

;pop ebp
POP ebp

;mov [eax+0x8], edx
add tmpadr, eax, 8
store edx, tmpadr, 1

;pop ebx
POP ebx

;ret
POP tmp1
tcall tmp1
endp

proc loc_401D9B
;mov cl, [edi+loc_41FEC0]
mov tmpadr, loc_41FEC0
add tmpadr, tmpadr, edi
load8z tmp0, tmpadr, 1
and ecx, ecx, 0xffffff00
or ecx, ecx, tmp0

;dec cl
sub tmp3, ecx, 1
ins8ll ecx, ecx, tmp3
and tmpcnd, ecx, 0xff

;mov [edi+loc_41FEC0], cl
mov tmpadr, loc_41FEC0
add tmpadr, tmpadr, edi
store8 ecx, tmpadr, 1

;jnz short loc_401DD0
ctcallnz tmpcnd, loc_401DD0

tcall loc_401DAB
endp

proc loc_401DAB
;mov cl, [edi+loc_41FEC1]
mov tmpadr, loc_41FEC1
add tmpadr, tmpadr, edi
load8z tmp0, tmpadr, 1
and ecx, ecx, 0xffffff00
or ecx, ecx, tmp0

;lea esi, [edi+loc_41FEC1]
mov tmpadr, loc_41FEC1
add esi, tmpadr, edi

;mov ebp, esi
mov ebp, esi

;inc esi
add esi, esi, 1

;cmp cl, dl
sub tmp1, ecx, edx
and tmpcnd, tmp1, 0xff

;mov [edi+loc_41FEC0], cl
mov tmpadr, loc_41FEC0
add tmpadr, tmpadr, edi
store8 ecx, tmpadr, 1

;jz short loc_401DD0
ctcallz tmpcnd, loc_401DD0

tcall loc_401DC4
endp

proc loc_401DC4
;mov cl, [esi]
load8z tmp0, esi, 1
and ecx, ecx, 0xffffff00
or ecx, ecx, tmp0

;inc edi
add edi, edi, 1

;mov [ebp], cl
store8 ecx, ebp, 1

;inc ebp
add ebp, ebp, 1

;inc esi
add esi, esi, 1

;cmp cl, dl
sub tmp1, ecx, edx
and tmpcnd, tmp1, 0xff

;jnz short loc_401DC4
ctcallnz tmpcnd, loc_401DC4

tcall loc_401DD0
endp

proc loc_401DD0
;mov [loc_41FF10], edi
store edi, loc_41FF10, 4

;pop edi
POP edi

;pop esi
POP esi

;pop ebp
POP ebp

;pop ebx
POP ebx

;ret
POP tmp1
tcall tmp1
endp

proc loc_401DDB
;mov esi, loc_42B844
mov esi, loc_42B844

;mov ecx, 0xf
mov ecx, 0xf

tcall loc_401DE5
endp

proc loc_401DE5
;cmp [esi+0x1c], edx
add tmpadr, esi, 28
load tmp1, tmpadr, 1
cmoveq tmp1, edx, tmpcnd, 0, 1

;jnz short loc_401DF9
ctcallnz tmpcnd, loc_401DF9

tcall loc_401DEA
endp

proc loc_401DEA
;cmp [esi+0x57], dl
add tmpadr, esi, 87
load8z tmp1, tmpadr, 1
sub tmp1, tmp1, edx
and tmpcnd, tmp1, 0xff

;jz short loc_401DF9
ctcallz tmpcnd, loc_401DF9

tcall loc_401DEF
endp

proc loc_401DEF
;mov eax, [esi+0x14]
add tmpadr, esi, 20
load eax, tmpadr, 1

;lea edi, [esi+0x10]
add edi, esi, 16

;cmp eax, edi
cmoveq eax, edi, tmpcnd, 0, 1

;jnz short loc_401E31
ctcallnz tmpcnd, loc_401E31

tcall loc_401DF9
endp

proc loc_401DF9
;sub esi, 0x104
sub esi, esi, 260

;mov eax, ecx
mov eax, ecx

;dec ecx
sub ecx, ecx, 1

;test eax, eax
mov tmpcnd, eax

;jnz short loc_401DE5
ctcallnz tmpcnd, loc_401DE5

tcall loc_401E06
endp

proc loc_401E06
;mov esi, loc_42B844
mov esi, loc_42B844

;mov ecx, 0xf
mov ecx, 0xf

tcall loc_401E10
endp

proc loc_401E10
;cmp [esi+0x57], dl
add tmpadr, esi, 87
load8z tmp1, tmpadr, 1
sub tmp1, tmp1, edx
and tmpcnd, tmp1, 0xff

;jz short loc_401E1F
ctcallz tmpcnd, loc_401E1F

tcall loc_401E15
endp

proc loc_401E15
;mov eax, [esi+0xc]
add tmpadr, esi, 12
load eax, tmpadr, 1

;lea edi, [esi+0x8]
add edi, esi, 8

;cmp eax, edi
cmoveq eax, edi, tmpcnd, 0, 1

;jnz short loc_401E77
ctcallnz tmpcnd, loc_401E77

tcall loc_401E1F
endp

proc loc_401E1F
;sub esi, 0x104
sub esi, esi, 260

;mov eax, ecx
mov eax, ecx

;dec ecx
sub ecx, ecx, 1

;test eax, eax
mov tmpcnd, eax

;jnz short loc_401E10
ctcallnz tmpcnd, loc_401E10

tcall loc_401E2C
endp

proc loc_401E2C
;jmp loc_401EBD
tcall loc_401EBD
endp

proc loc_401E31
;mov cl, [esi+0x57]
add tmpadr, esi, 87
load8z tmp0, tmpadr, 1
and ecx, ecx, 0xffffff00
or ecx, ecx, tmp0

;cmp cl, dl
sub tmp1, ecx, edx
and tmpcnd, tmp1, 0xff

;jz short loc_401E3D
ctcallz tmpcnd, loc_401E3D

tcall loc_401E38
endp

proc loc_401E38
;dec cl
sub tmp3, ecx, 1
ins8ll ecx, ecx, tmp3

;mov [esi+0x57], cl
add tmpadr, esi, 87
store8 ecx, tmpadr, 1

tcall loc_401E3D
endp

proc loc_401E3D
;mov ecx, [eax]
load ecx, eax, 1

;mov esi, [eax+0x4]
add tmpadr, eax, 4
load esi, tmpadr, 1

;mov bl, 0xff
and ebx, ebx, 0xffffff00
or ebx, ebx, 0xff

;mov [ecx+0x4], esi
add tmpadr, ecx, 4
store esi, tmpadr, 1

;mov ecx, [eax+0x4]
add tmpadr, eax, 4
load ecx, tmpadr, 1

;mov esi, [eax]
load esi, eax, 1

;mov [ecx], esi
store esi, ecx, 1

;xor ecx, ecx
xor ecx, ecx, ecx

;mov cl, [eax+0x2c]
add tmpadr, eax, 44
load8z tmp0, tmpadr, 1
and ecx, ecx, 0xffffff00
or ecx, ecx, tmp0

;mov [eax+0x10], edx
add tmpadr, eax, 16
store edx, tmpadr, 1

;mov byte [eax+0x19], 0x1
add tmpadr, eax, 25
mov tmp1, 0x1
store8 tmp1, tmpadr, 1

;mov [eax+0xc], edx
add tmpadr, eax, 12
store edx, tmpadr, 1

;mov [eax+0x1a], bl
add tmpadr, eax, 26
store8 ebx, tmpadr, 1

;mov byte [ecx+loc_455F68], 0x3
mov tmpadr, loc_455F68
add tmpadr, tmpadr, ecx
mov tmp1, 0x3
store8 tmp1, tmpadr, 1

;mov ecx, [eax+0x8]
add tmpadr, eax, 8
load ecx, tmpadr, 1

;cmp ecx, edx
cmoveq ecx, edx, tmpcnd, 0, 1

;jz near loc_401FAB
ctcallz tmpcnd, loc_401FAB

tcall loc_401E72
endp

proc loc_401E72
;jmp loc_401D68
tcall loc_401D68
endp

proc loc_401E77
;mov cl, [esi+0x57]
add tmpadr, esi, 87
load8z tmp0, tmpadr, 1
and ecx, ecx, 0xffffff00
or ecx, ecx, tmp0

;cmp cl, dl
sub tmp1, ecx, edx
and tmpcnd, tmp1, 0xff

;jz short loc_401E83
ctcallz tmpcnd, loc_401E83

tcall loc_401E7E
endp

proc loc_401E7E
;dec cl
sub tmp3, ecx, 1
ins8ll ecx, ecx, tmp3

;mov [esi+0x57], cl
add tmpadr, esi, 87
store8 ecx, tmpadr, 1

tcall loc_401E83
endp

proc loc_401E83
;mov ecx, [eax]
load ecx, eax, 1

;mov esi, [eax+0x4]
add tmpadr, eax, 4
load esi, tmpadr, 1

;mov bl, 0xff
and ebx, ebx, 0xffffff00
or ebx, ebx, 0xff

;mov [ecx+0x4], esi
add tmpadr, ecx, 4
store esi, tmpadr, 1

;mov ecx, [eax+0x4]
add tmpadr, eax, 4
load ecx, tmpadr, 1

;mov esi, [eax]
load esi, eax, 1

;mov [ecx], esi
store esi, ecx, 1

;xor ecx, ecx
xor ecx, ecx, ecx

;mov cl, [eax+0x2c]
add tmpadr, eax, 44
load8z tmp0, tmpadr, 1
and ecx, ecx, 0xffffff00
or ecx, ecx, tmp0

;mov [eax+0x10], edx
add tmpadr, eax, 16
store edx, tmpadr, 1

;mov byte [eax+0x19], 0x1
add tmpadr, eax, 25
mov tmp1, 0x1
store8 tmp1, tmpadr, 1

;mov [eax+0xc], edx
add tmpadr, eax, 12
store edx, tmpadr, 1

;mov [eax+0x1a], bl
add tmpadr, eax, 26
store8 ebx, tmpadr, 1

;mov byte [ecx+loc_455F68], 0x3
mov tmpadr, loc_455F68
add tmpadr, tmpadr, ecx
mov tmp1, 0x3
store8 tmp1, tmpadr, 1

;mov ecx, [eax+0x8]
add tmpadr, eax, 8
load ecx, tmpadr, 1

;cmp ecx, edx
cmoveq ecx, edx, tmpcnd, 0, 1

;jz near loc_401FAB
ctcallz tmpcnd, loc_401FAB

tcall loc_401EB8
endp

proc loc_401EB8
;jmp loc_401D68
tcall loc_401D68
endp

proc loc_401EBD
;mov esi, loc_42B844
mov esi, loc_42B844

;mov ecx, 0xf
mov ecx, 0xf

tcall loc_401EC7
endp

proc loc_401EC7
;cmp [esi+0x1c], edx
add tmpadr, esi, 28
load tmp1, tmpadr, 1
cmoveq tmp1, edx, tmpcnd, 0, 1

;jz short loc_401EDB
ctcallz tmpcnd, loc_401EDB

tcall loc_401ECC
endp

proc loc_401ECC
;cmp [esi+0x57], dl
add tmpadr, esi, 87
load8z tmp1, tmpadr, 1
sub tmp1, tmp1, edx
and tmpcnd, tmp1, 0xff

;jz short loc_401EDB
ctcallz tmpcnd, loc_401EDB

tcall loc_401ED1
endp

proc loc_401ED1
;mov eax, [esi+0x14]
add tmpadr, esi, 20
load eax, tmpadr, 1

;lea edi, [esi+0x10]
add edi, esi, 16

;cmp eax, edi
cmoveq eax, edi, tmpcnd, 0, 1

;jnz short loc_401F10
ctcallnz tmpcnd, loc_401F10

tcall loc_401EDB
endp

proc loc_401EDB
;sub esi, 0x104
sub esi, esi, 260

;mov eax, ecx
mov eax, ecx

;dec ecx
sub ecx, ecx, 1

;test eax, eax
mov tmpcnd, eax

;jnz short loc_401EC7
ctcallnz tmpcnd, loc_401EC7

tcall loc_401EE8
endp

proc loc_401EE8
;mov esi, loc_42B844
mov esi, loc_42B844

;mov ecx, 0xf
mov ecx, 0xf

tcall loc_401EF2
endp

proc loc_401EF2
;cmp [esi+0x57], dl
add tmpadr, esi, 87
load8z tmp1, tmpadr, 1
sub tmp1, tmp1, edx
and tmpcnd, tmp1, 0xff

;jz short loc_401EFE
ctcallz tmpcnd, loc_401EFE

tcall loc_401EF7
endp

proc loc_401EF7
;mov eax, [esi+0x4]
add tmpadr, esi, 4
load eax, tmpadr, 1

;cmp eax, esi
cmoveq eax, esi, tmpcnd, 0, 1

;jnz short loc_401F52
ctcallnz tmpcnd, loc_401F52

tcall loc_401EFE
endp

proc loc_401EFE
;sub esi, 0x104
sub esi, esi, 260

;mov eax, ecx
mov eax, ecx

;dec ecx
sub ecx, ecx, 1

;test eax, eax
mov tmpcnd, eax

;jnz short loc_401EF2
ctcallnz tmpcnd, loc_401EF2

tcall loc_401F0B
endp

proc loc_401F0B
;pop edi
POP edi

;pop esi
POP esi

;pop ebp
POP ebp

;pop ebx
POP ebx

;ret
POP tmp1
tcall tmp1
endp

proc loc_401F10
;mov cl, [esi+0x57]
add tmpadr, esi, 87
load8z tmp0, tmpadr, 1
and ecx, ecx, 0xffffff00
or ecx, ecx, tmp0

;cmp cl, dl
sub tmp1, ecx, edx
and tmpcnd, tmp1, 0xff

;jz short loc_401F1C
ctcallz tmpcnd, loc_401F1C

tcall loc_401F17
endp

proc loc_401F17
;dec cl
sub tmp3, ecx, 1
ins8ll ecx, ecx, tmp3

;mov [esi+0x57], cl
add tmpadr, esi, 87
store8 ecx, tmpadr, 1

tcall loc_401F1C
endp

proc loc_401F1C
;mov ecx, [eax]
load ecx, eax, 1

;mov esi, [eax+0x4]
add tmpadr, eax, 4
load esi, tmpadr, 1

;mov bl, 0xff
and ebx, ebx, 0xffffff00
or ebx, ebx, 0xff

;mov [ecx+0x4], esi
add tmpadr, ecx, 4
store esi, tmpadr, 1

;mov ecx, [eax+0x4]
add tmpadr, eax, 4
load ecx, tmpadr, 1

;mov esi, [eax]
load esi, eax, 1

;mov [ecx], esi
store esi, ecx, 1

;xor ecx, ecx
xor ecx, ecx, ecx

;mov cl, [eax+0x2c]
add tmpadr, eax, 44
load8z tmp0, tmpadr, 1
and ecx, ecx, 0xffffff00
or ecx, ecx, tmp0

;mov [eax+0x10], edx
add tmpadr, eax, 16
store edx, tmpadr, 1

;mov byte [eax+0x19], 0x1
add tmpadr, eax, 25
mov tmp1, 0x1
store8 tmp1, tmpadr, 1

;mov [eax+0xc], edx
add tmpadr, eax, 12
store edx, tmpadr, 1

;mov [eax+0x1a], bl
add tmpadr, eax, 26
store8 ebx, tmpadr, 1

;mov byte [ecx+loc_455F68], 0x3
mov tmpadr, loc_455F68
add tmpadr, tmpadr, ecx
mov tmp1, 0x3
store8 tmp1, tmpadr, 1

;mov ecx, [eax+0x8]
add tmpadr, eax, 8
load ecx, tmpadr, 1

;cmp ecx, edx
cmoveq ecx, edx, tmpcnd, 0, 1

;jz short loc_401FAB
ctcallz tmpcnd, loc_401FAB

tcall loc_401F4D
endp

proc loc_401F4D
;jmp loc_401D68
tcall loc_401D68
endp

proc loc_401F52
;xor ecx, ecx
xor ecx, ecx, ecx

;mov cl, [eax+0x18]
add tmpadr, eax, 24
load8z tmp0, tmpadr, 1
and ecx, ecx, 0xffffff00
or ecx, ecx, tmp0

;mov bl, [ecx+esi+0x81]
add tmpadr, ecx, esi
add tmpadr, tmpadr, 129
load8z tmp0, tmpadr, 1
and ebx, ebx, 0xffffff00
or ebx, ebx, tmp0

;lea ecx, [ecx+esi+0x81]
add tmpadr, ecx, esi
add ecx, tmpadr, 129

;inc bl
add tmp3, ebx, 1
ins8ll ebx, ebx, tmp3

;mov [ecx], bl
store8 ebx, ecx, 1

;mov cl, [esi+0x57]
add tmpadr, esi, 87
load8z tmp0, tmpadr, 1
and ecx, ecx, 0xffffff00
or ecx, ecx, tmp0

;cmp cl, dl
sub tmp1, ecx, edx
and tmpcnd, tmp1, 0xff

;jz short loc_401F75
ctcallz tmpcnd, loc_401F75

tcall loc_401F70
endp

proc loc_401F70
;dec cl
sub tmp3, ecx, 1
ins8ll ecx, ecx, tmp3

;mov [esi+0x57], cl
add tmpadr, esi, 87
store8 ecx, tmpadr, 1

tcall loc_401F75
endp

proc loc_401F75
;mov ecx, [eax]
load ecx, eax, 1

;mov esi, [eax+0x4]
add tmpadr, eax, 4
load esi, tmpadr, 1

;mov bl, 0xff
and ebx, ebx, 0xffffff00
or ebx, ebx, 0xff

;mov [ecx+0x4], esi
add tmpadr, ecx, 4
store esi, tmpadr, 1

;mov ecx, [eax+0x4]
add tmpadr, eax, 4
load ecx, tmpadr, 1

;mov esi, [eax]
load esi, eax, 1

;mov [ecx], esi
store esi, ecx, 1

;xor ecx, ecx
xor ecx, ecx, ecx

;mov cl, [eax+0x2c]
add tmpadr, eax, 44
load8z tmp0, tmpadr, 1
and ecx, ecx, 0xffffff00
or ecx, ecx, tmp0

;mov [eax+0x10], edx
add tmpadr, eax, 16
store edx, tmpadr, 1

;mov byte [eax+0x19], 0x1
add tmpadr, eax, 25
mov tmp1, 0x1
store8 tmp1, tmpadr, 1

;mov [eax+0xc], edx
add tmpadr, eax, 12
store edx, tmpadr, 1

;mov [eax+0x1a], bl
add tmpadr, eax, 26
store8 ebx, tmpadr, 1

;mov byte [ecx+loc_455F68], 0x3
mov tmpadr, loc_455F68
add tmpadr, tmpadr, ecx
mov tmp1, 0x3
store8 tmp1, tmpadr, 1

;mov ecx, [eax+0x8]
add tmpadr, eax, 8
load ecx, tmpadr, 1

;cmp ecx, edx
cmoveq ecx, edx, tmpcnd, 0, 1

;jz short loc_401FAB
ctcallz tmpcnd, loc_401FAB

tcall loc_401FA6
endp

proc loc_401FA6
;jmp loc_401D68
tcall loc_401D68
endp

proc loc_401FAB
;pop edi
POP edi

;pop esi
POP esi

;pop ebp
POP ebp

;pop ebx
POP ebx

;ret
POP tmp1
tcall tmp1
endp

proc loc_401FB0
;push esi
PUSH esi

;mov esi, [ecx]
load esi, ecx, 1

;push edi
PUSH edi

;xor eax, eax
xor eax, eax, eax

;xor edi, edi
xor edi, edi, edi

;cmp esi, ecx
cmoveq esi, ecx, tmpcnd, 0, 1

;jz short loc_401FD4
ctcallz tmpcnd, loc_401FD4

tcall loc_401FBC
endp

proc loc_401FBC
;cmp [esi+0x18], dl
add tmpadr, esi, 24
load8z tmp1, tmpadr, 1
sub tmp1, tmp1, edx
and tmpcnd, tmp1, 0xff

;jnz short loc_401FCE
ctcallnz tmpcnd, loc_401FCE

tcall loc_401FC1
endp

proc loc_401FC1
;test edi, edi
mov tmpcnd, edi

;jz short loc_401FC9
ctcallz tmpcnd, loc_401FC9

tcall loc_401FC5
endp

proc loc_401FC5
;mov eax, esi
mov eax, esi

;jmp short loc_401FCE
tcall loc_401FCE
endp

proc loc_401FC9
;mov edi, 0x1
mov edi, 0x1

tcall loc_401FCE
endp

proc loc_401FCE
;mov esi, [esi]
load esi, esi, 1

;cmp esi, ecx
cmoveq esi, ecx, tmpcnd, 0, 1

;jnz short loc_401FBC
ctcallnz tmpcnd, loc_401FBC

tcall loc_401FD4
endp

proc loc_401FD4
;pop edi
POP edi

;pop esi
POP esi

;ret
POP tmp1
tcall tmp1
endp

proc loc_401FE0
;push ecx
PUSH ecx

;cmp ecx, 0x80
cmovugt ecx, 128, tmpcnd, 0, 1

;jbe short loc_401FEE
ctcallnz tmpcnd, loc_401FEE

tcall loc_401FE9
endp

proc loc_401FE9
;mov ecx, 0x80
mov ecx, 0x80

tcall loc_401FEE
endp

proc loc_401FEE
;push edi
PUSH edi

;mov edi, 0x80
mov edi, 0x80

;sub edi, ecx
sub edi, edi, ecx

;cmp edi, 0x7c
cmovsgt edi, 124, tmpcnd, 0, 1

;mov [esp+0x4], edi
add tmpadr, esp, 4
store edi, tmpadr, 4

;jle short loc_40200B
ctcallnz tmpcnd, loc_40200B

tcall loc_401FFF
endp

proc loc_401FFF
;mov dword [esp+0x4], 0x7c
add tmpadr, esp, 4
mov tmp1, 0x7c
store tmp1, tmpadr, 4

;mov edi, [esp+0x4]
add tmpadr, esp, 4
load edi, tmpadr, 4

tcall loc_40200B
endp

proc loc_40200B
;mov ecx, [loc_41FF18]
load ecx, loc_41FF18, 4

;push ebx
PUSH ebx

;push ebp
PUSH ebp

;cmp edi, ecx
cmovsgt edi, ecx, tmpcnd, 0, 1

;push esi
PUSH esi

;jle near loc_402141
ctcallnz tmpcnd, loc_402141

tcall loc_40201C
endp

proc loc_40201C
;mov eax, [loc_41FEB4]
load eax, loc_41FEB4, 4

;cmp eax, loc_41FEB0
mov tmp1, loc_41FEB0
cmoveq eax, tmp1, tmpcnd, 0, 1

;jz short loc_402044
ctcallz tmpcnd, loc_402044

tcall loc_402028
endp

proc loc_402028
;mov edx, [eax+0x4]
add tmpadr, eax, 4
load edx, tmpadr, 1

;lea ecx, [eax+0x4]
add ecx, eax, 4

;mov [loc_41FEB4], edx
store edx, loc_41FEB4, 4

;mov ecx, [ecx]
load ecx, ecx, 1

;test eax, eax
mov tmpcnd, eax

;mov dword [ecx], loc_41FEB0
mov tmp1, loc_41FEB0
store tmp1, ecx, 1

;jnz near loc_4020F7
ctcallnz tmpcnd, loc_4020F7

tcall loc_402044
endp

proc loc_402044
;xor esi, esi
xor esi, esi, esi

;mov ecx, loc_42A95F
mov ecx, loc_42A95F

;mov ebp, loc_41FED0
mov ebp, loc_41FED0

;mov ebx, 0x10
mov ebx, 0x10

tcall loc_402055
endp

proc loc_402055
;mov al, [ecx]
load8z tmp0, ecx, 1
and eax, eax, 0xffffff00
or eax, eax, tmp0

;mov dl, [ecx+0x1]
add tmpadr, ecx, 1
load8z tmp0, tmpadr, 1
and edx, edx, 0xffffff00
or edx, edx, tmp0

;cmp al, dl
and eflags, eflags, ~(CF|ZF)
and tmp3, eax, 0xff
and tmp5, edx, 0xff
cmovult tmp3, tmp5, tmp3, CF, 0
or eflags, eflags, tmp3
sub tmp1, eax, edx
and tmp0, tmp1, 0xff
cmovz tmp0, tmp0, ZF, 0
or eflags, eflags, tmp0

;jbe short loc_402070
and tmp1, eflags, ZF | CF
ctcallnz tmp1, loc_402070

tcall loc_40205E
endp

proc loc_40205E
;sub al, dl
sub tmp3, eax, edx
ins8ll eax, eax, tmp3

;lea edx, [ecx-0x57]
add edx, ecx, -87

;mov [esi+loc_41FEC0], al
mov tmpadr, loc_41FEC0
add tmpadr, tmpadr, esi
store8 eax, tmpadr, 1

;mov [ebp], edx
store edx, ebp, 4

;inc esi
add esi, esi, 1

;add ebp, 0x4
add ebp, ebp, 4

tcall loc_402070
endp

proc loc_402070
;add ecx, 0x104
add ecx, ecx, 260

;dec ebx
sub ebx, ebx, 1
mov tmpcnd, ebx

;jnz short loc_402055
ctcallnz tmpcnd, loc_402055

tcall loc_402079
endp

proc loc_402079
;mov byte [esi+loc_41FEC0], 0x0
mov tmpadr, loc_41FEC0
add tmpadr, tmpadr, esi
store8 0, tmpadr, 1

;mov dl, [loc_41FEC0]
load8z tmp0, loc_41FEC0, 4
and edx, edx, 0xffffff00
or edx, edx, tmp0

;xor ebx, ebx
xor ebx, ebx, ebx

;test dl, dl
and tmpcnd, edx, 0xff

;mov [esi*4+loc_41FED0], ebx
mov tmpadr, loc_41FED0
shl tmp0, esi, 2
add tmpadr, tmpadr, tmp0
store ebx, tmpadr, 4

;jz short loc_4020E8
ctcallz tmpcnd, loc_4020E8

tcall loc_402093
endp

proc loc_402093
;mov esi, loc_41FED0
mov esi, loc_41FED0

tcall loc_402098
endp

proc loc_402098
;mov al, [ebx+loc_41FEC1]
mov tmpadr, loc_41FEC1
add tmpadr, tmpadr, ebx
load8z tmp0, tmpadr, 1
and eax, eax, 0xffffff00
or eax, eax, tmp0

;mov ebp, [esi]
load ebp, esi, 1

;lea ecx, [ebx+loc_41FEC1]
mov tmpadr, loc_41FEC1
add ecx, tmpadr, ebx

;test al, al
and tmpcnd, eax, 0xff

;jz short loc_4020DA
ctcallz tmpcnd, loc_4020DA

tcall loc_4020AA
endp

proc loc_4020AA
;mov edi, ecx
mov edi, ecx

;lea ecx, [esi+0x4]
add ecx, esi, 4

tcall loc_4020AF
endp

proc loc_4020AF
;cmp al, dl
and eflags, eflags, ~(CF|ZF)
and tmp3, eax, 0xff
and tmp5, edx, 0xff
cmovult tmp3, tmp5, tmp3, CF, 0
or eflags, eflags, tmp3
sub tmp1, eax, edx
and tmp0, tmp1, 0xff
cmovz tmp0, tmp0, ZF, 0
or eflags, eflags, tmp0

;ja short loc_4020B9
and tmp1, eflags, ZF | CF
ctcallz tmp1, loc_4020B9

tcall loc_4020B3
endp

proc loc_4020B3
;jb short loc_4020CB
and tmp1, eflags, CF
ctcallnz tmp1, loc_4020CB

tcall loc_4020B5
endp

proc loc_4020B5
;cmp [ecx], ebp
load tmp1, ecx, 1
cmovugt tmp1, ebp, tmpcnd, 0, 1

;jbe short loc_4020CB
ctcallnz tmpcnd, loc_4020CB

tcall loc_4020B9
endp

proc loc_4020B9
;mov [ebx+loc_41FEC0], al
mov tmpadr, loc_41FEC0
add tmpadr, tmpadr, ebx
store8 eax, tmpadr, 1

;mov [edi], dl
store8 edx, edi, 1

;mov dl, al
ins8ll edx, edx, eax

;mov eax, [ecx]
load eax, ecx, 1

;mov [esi], eax
store eax, esi, 1

;mov [ecx], ebp
store ebp, ecx, 1

;mov ebp, [esi]
load ebp, esi, 1

tcall loc_4020CB
endp

proc loc_4020CB
;mov al, [edi+0x1]
add tmpadr, edi, 1
load8z tmp0, tmpadr, 1
and eax, eax, 0xffffff00
or eax, eax, tmp0

;add ecx, 0x4
add ecx, ecx, 4

;inc edi
add edi, edi, 1

;test al, al
and tmpcnd, eax, 0xff

;jnz short loc_4020AF
ctcallnz tmpcnd, loc_4020AF

tcall loc_4020D6
endp

proc loc_4020D6
;mov edi, [esp+0x10]
add tmpadr, esp, 16
load edi, tmpadr, 4

tcall loc_4020DA
endp

proc loc_4020DA
;mov dl, [ebx+loc_41FEC1]
mov tmpadr, loc_41FEC1
add tmpadr, tmpadr, ebx
load8z tmp0, tmpadr, 1
and edx, edx, 0xffffff00
or edx, edx, tmp0

;inc ebx
add ebx, ebx, 1

;add esi, 0x4
add esi, esi, 4

;test dl, dl
and tmpcnd, edx, 0xff

;jnz short loc_402098
ctcallnz tmpcnd, loc_402098

tcall loc_4020E8
endp

proc loc_4020E8
;mov [loc_41FF10], ebx
store ebx, loc_41FF10, 4

;call loc_401AD0
PUSH loc_4020F3
tcall loc_401AD0
endp

proc loc_4020F3
;test eax, eax
mov tmpcnd, eax

;jz short loc_40213B
ctcallz tmpcnd, loc_40213B

tcall loc_4020F7
endp

proc loc_4020F7
;mov ecx, [loc_41FEB8]
load ecx, loc_41FEB8, 4

;mov [eax], ecx
store ecx, eax, 1

;mov edx, [loc_41FEB8]
load edx, loc_41FEB8, 4

;xor ecx, ecx
xor ecx, ecx, ecx

;mov [edx+0x4], eax
add tmpadr, edx, 4
store eax, tmpadr, 1

;mov [loc_41FEB8], eax
store eax, loc_41FEB8, 4

;mov dword [eax+0x4], loc_41FEB8
add tmpadr, eax, 4
mov tmp1, loc_41FEB8
store tmp1, tmpadr, 1

;mov [eax+0x10], ecx
add tmpadr, eax, 16
store ecx, tmpadr, 1

;mov byte [eax+0x19], 0x1
add tmpadr, eax, 25
mov tmp1, 0x1
store8 tmp1, tmpadr, 1

;mov [eax+0xc], ecx
add tmpadr, eax, 12
store ecx, tmpadr, 1

;mov byte [eax+0x1a], 0xff
add tmpadr, eax, 26
mov tmp1, 0xff
store8 tmp1, tmpadr, 1

;mov ecx, [loc_41FF18]
load ecx, loc_41FF18, 4

;inc ecx
add ecx, ecx, 1

;cmp edi, ecx
cmovsgt edi, ecx, tmpcnd, 0, 1

;mov [loc_41FF18], ecx
store ecx, loc_41FF18, 4

;jg near loc_40201C
ctcallz tmpcnd, loc_40201C

tcall loc_402139
endp

proc loc_402139
;jmp short loc_402141
tcall loc_402141
endp

proc loc_40213B
;mov ecx, [loc_41FF18]
load ecx, loc_41FF18, 4

tcall loc_402141
endp

proc loc_402141
;pop esi
POP esi

;pop ebp
POP ebp

;cmp edi, ecx
cmovslt edi, ecx, tmpcnd, 0, 1

;pop ebx
POP ebx

;jge short loc_4021A4
ctcallnz tmpcnd, loc_4021A4

tcall loc_402148
endp

proc loc_402148
;mov edx, loc_41FEB0
mov edx, loc_41FEB0

tcall loc_40214D
endp

proc loc_40214D
;mov eax, [loc_41FEB8]
load eax, loc_41FEB8, 4

;cmp eax, loc_41FEB8
mov tmp1, loc_41FEB8
cmoveq eax, tmp1, tmpcnd, 0, 1

;jz short loc_4021A4
ctcallz tmpcnd, loc_4021A4

tcall loc_402159
endp

proc loc_402159
;mov ecx, [eax]
load ecx, eax, 1

;mov dword [ecx+0x4], loc_41FEB8
add tmpadr, ecx, 4
mov tmp1, loc_41FEB8
store tmp1, tmpadr, 1

;mov ecx, [eax]
load ecx, eax, 1

;mov [loc_41FEB8], ecx
store ecx, loc_41FEB8, 4

;mov ecx, [loc_41FEB0]
load ecx, loc_41FEB0, 4

;mov [eax], ecx
store ecx, eax, 1

;mov ecx, [loc_41FEB0]
load ecx, loc_41FEB0, 4

;mov [ecx+0x4], eax
add tmpadr, ecx, 4
store eax, tmpadr, 1

;xor ecx, ecx
xor ecx, ecx, ecx

;mov [loc_41FEB0], eax
store eax, loc_41FEB0, 4

;mov [eax+0x4], edx
add tmpadr, eax, 4
store edx, tmpadr, 1

;mov [eax+0x10], ecx
add tmpadr, eax, 16
store ecx, tmpadr, 1

;mov byte [eax+0x19], 0x1
add tmpadr, eax, 25
mov tmp1, 0x1
store8 tmp1, tmpadr, 1

;mov [eax+0xc], ecx
add tmpadr, eax, 12
store ecx, tmpadr, 1

;mov byte [eax+0x1a], 0xff
add tmpadr, eax, 26
mov tmp1, 0xff
store8 tmp1, tmpadr, 1

;mov ecx, [loc_41FF18]
load ecx, loc_41FF18, 4

;dec ecx
sub ecx, ecx, 1

;cmp edi, ecx
cmovslt edi, ecx, tmpcnd, 0, 1

;mov [loc_41FF18], ecx
store ecx, loc_41FF18, 4

;jl short loc_40214D
ctcallz tmpcnd, loc_40214D

tcall loc_4021A4
endp

proc loc_4021A4
;mov [loc_41FF14], ecx
store ecx, loc_41FF14, 4

;pop edi
POP edi

;pop ecx
POP ecx

;ret
POP tmp1
tcall tmp1
endp

proc loc_4021B0
;push ecx
PUSH ecx

;mov edx, [loc_41FF14]
load edx, loc_41FF14, 4

;mov eax, ecx
mov eax, ecx

;mov ecx, [loc_41FF18]
load ecx, loc_41FF18, 4

;push ebp
PUSH ebp

;cmp ecx, edx
cmovsgt ecx, edx, tmpcnd, 0, 1

;jle short loc_402235
ctcallnz tmpcnd, loc_402235

tcall loc_4021C4
endp

proc loc_4021C4
;xor edx, edx
xor edx, edx, edx

;mov cl, 0x1
and ecx, ecx, 0xffffff00
or ecx, ecx, 0x1

;jmp short loc_4021CE
tcall loc_4021CE
endp

proc loc_4021CA
;mov eax, [esp+0x4]
add tmpadr, esp, 4
load eax, tmpadr, 4

tcall loc_4021CE
endp

proc loc_4021CE
;mov ebp, eax
mov ebp, eax

;dec eax
sub eax, eax, 1

;test ebp, ebp
mov tmpcnd, ebp

;mov [esp+0x4], eax
add tmpadr, esp, 4
store eax, tmpadr, 4

;jz short loc_402235
ctcallz tmpcnd, loc_402235

tcall loc_4021D9
endp

proc loc_4021D9
;mov eax, [loc_41FEB8]
load eax, loc_41FEB8, 4

;cmp eax, loc_41FEB8
mov tmp1, loc_41FEB8
cmoveq eax, tmp1, tmpcnd, 0, 1

;jz short loc_402235
ctcallz tmpcnd, loc_402235

tcall loc_4021E5
endp

proc loc_4021E5
;mov ebp, [eax]
load ebp, eax, 1

;mov dword [ebp+0x4], loc_41FEB8
add tmpadr, ebp, 4
mov tmp1, loc_41FEB8
store tmp1, tmpadr, 1

;mov ebp, [eax]
load ebp, eax, 1

;mov [loc_41FEB8], ebp
store ebp, loc_41FEB8, 4

;mov ebp, [loc_41FEB0]
load ebp, loc_41FEB0, 4

;mov [eax], ebp
store ebp, eax, 1

;mov ebp, [loc_41FEB0]
load ebp, loc_41FEB0, 4

;mov [ebp+0x4], eax
add tmpadr, ebp, 4
store eax, tmpadr, 1

;mov [loc_41FEB0], eax
store eax, loc_41FEB0, 4

;mov dword [eax+0x4], loc_41FEB0
add tmpadr, eax, 4
mov tmp1, loc_41FEB0
store tmp1, tmpadr, 1

;mov [eax+0x10], edx
add tmpadr, eax, 16
store edx, tmpadr, 1

;mov [eax+0x19], cl
add tmpadr, eax, 25
store8 ecx, tmpadr, 1

;mov [eax+0xc], edx
add tmpadr, eax, 12
store edx, tmpadr, 1

;mov byte [eax+0x1a], 0xff
add tmpadr, eax, 26
mov tmp1, 0xff
store8 tmp1, tmpadr, 1

;mov eax, [loc_41FF18]
load eax, loc_41FF18, 4

;mov ebp, [loc_41FF14]
load ebp, loc_41FF14, 4

;dec eax
sub eax, eax, 1

;cmp eax, ebp
cmovsgt eax, ebp, tmpcnd, 0, 1

;mov [loc_41FF18], eax
store eax, loc_41FF18, 4

;jg short loc_4021CA
ctcallz tmpcnd, loc_4021CA

tcall loc_402235
endp

proc loc_402235
;pop ebp
POP ebp

;pop ecx
POP ecx

;ret
POP tmp1
tcall tmp1
endp

proc loc_402240
;push ecx
PUSH ecx

;mov eax, [loc_41FF18]
load eax, loc_41FF18, 4

;push ebx
PUSH ebx

;mov edx, 0x7c
mov edx, 0x7c

;push ebp
PUSH ebp

;push esi
PUSH esi

;cmp eax, edx
cmovslt eax, edx, tmpcnd, 0, 1

;push edi
PUSH edi

;mov [esp+0x10], ecx
add tmpadr, esp, 16
store ecx, tmpadr, 4

;jge near loc_402402
ctcallnz tmpcnd, loc_402402

tcall loc_40225B
endp

proc loc_40225B
;mov eax, [loc_41FEB4]
load eax, loc_41FEB4, 4

;cmp eax, loc_41FEB0
mov tmp1, loc_41FEB0
cmoveq eax, tmp1, tmpcnd, 0, 1

;jz short loc_4022C7
ctcallz tmpcnd, loc_4022C7

tcall loc_402267
endp

proc loc_402267
;mov esi, [eax+0x4]
add tmpadr, eax, 4
load esi, tmpadr, 1

;lea ecx, [eax+0x4]
add ecx, eax, 4

;mov [loc_41FEB4], esi
store esi, loc_41FEB4, 4

;xor edi, edi
xor edi, edi, edi

;mov esi, [ecx]
load esi, ecx, 1

;cmp eax, edi
cmoveq eax, edi, tmpcnd, 0, 1

;mov dword [esi], loc_41FEB0
mov tmp1, loc_41FEB0
store tmp1, esi, 1

;jz short loc_4022C0
ctcallz tmpcnd, loc_4022C0

tcall loc_402281
endp

proc loc_402281
;mov esi, [loc_41FEB8]
load esi, loc_41FEB8, 4

;mov [eax], esi
store esi, eax, 1

;mov esi, [loc_41FEB8]
load esi, loc_41FEB8, 4

;mov [esi+0x4], eax
add tmpadr, esi, 4
store eax, tmpadr, 1

;mov [loc_41FEB8], eax
store eax, loc_41FEB8, 4

;mov dword [ecx], loc_41FEB8
mov tmp1, loc_41FEB8
store tmp1, ecx, 1

;mov [eax+0x10], edi
add tmpadr, eax, 16
store edi, tmpadr, 1

;mov byte [eax+0x19], 0x1
add tmpadr, eax, 25
mov tmp1, 0x1
store8 tmp1, tmpadr, 1

;mov [eax+0xc], edi
add tmpadr, eax, 12
store edi, tmpadr, 1

;mov byte [eax+0x1a], 0xff
add tmpadr, eax, 26
mov tmp1, 0xff
store8 tmp1, tmpadr, 1

;mov eax, [loc_41FF18]
load eax, loc_41FF18, 4

;inc eax
add eax, eax, 1

;cmp eax, edx
cmovslt eax, edx, tmpcnd, 0, 1

;mov [loc_41FF18], eax
store eax, loc_41FF18, 4

;jge near loc_402402
ctcallnz tmpcnd, loc_402402

tcall loc_4022BE
endp

proc loc_4022BE
;jmp short loc_40225B
tcall loc_40225B
endp

proc loc_4022C0
;mov eax, [loc_41FEB4]
load eax, loc_41FEB4, 4

;jmp short loc_4022C9
tcall loc_4022C9
endp

proc loc_4022C7
;xor edi, edi
xor edi, edi, edi

tcall loc_4022C9
endp

proc loc_4022C9
;cmp [loc_41FF18], edx
load tmp1, loc_41FF18, 4
cmovslt tmp1, edx, tmpcnd, 0, 1

;jge near loc_402402
ctcallnz tmpcnd, loc_402402

tcall loc_4022D5
endp

proc loc_4022D5
;jmp short loc_4022DC
tcall loc_4022DC
endp

proc loc_4022D7
;mov eax, [loc_41FEB4]
load eax, loc_41FEB4, 4

tcall loc_4022DC
endp

proc loc_4022DC
;cmp [esp+0x10], edi
add tmpadr, esp, 16
load tmp1, tmpadr, 4
cmoveq tmp1, edi, tmpcnd, 0, 1

;jz near loc_402402
ctcallz tmpcnd, loc_402402

tcall loc_4022E6
endp

proc loc_4022E6
;cmp eax, loc_41FEB0
mov tmp1, loc_41FEB0
cmoveq eax, tmp1, tmpcnd, 0, 1

;jz short loc_402309
ctcallz tmpcnd, loc_402309

tcall loc_4022ED
endp

proc loc_4022ED
;mov edx, [eax+0x4]
add tmpadr, eax, 4
load edx, tmpadr, 1

;lea ecx, [eax+0x4]
add ecx, eax, 4

;mov [loc_41FEB4], edx
store edx, loc_41FEB4, 4

;cmp eax, edi
cmoveq eax, edi, tmpcnd, 0, 1

;mov ecx, [ecx]
load ecx, ecx, 1

;mov dword [ecx], loc_41FEB0
mov tmp1, loc_41FEB0
store tmp1, ecx, 1

;jnz near loc_4023BA
ctcallnz tmpcnd, loc_4023BA

tcall loc_402309
endp

proc loc_402309
;xor esi, esi
xor esi, esi, esi

;mov ecx, loc_42A95F
mov ecx, loc_42A95F

;mov ebp, loc_41FED0
mov ebp, loc_41FED0

;mov ebx, 0x10
mov ebx, 0x10

tcall loc_40231A
endp

proc loc_40231A
;mov al, [ecx]
load8z tmp0, ecx, 1
and eax, eax, 0xffffff00
or eax, eax, tmp0

;mov dl, [ecx+0x1]
add tmpadr, ecx, 1
load8z tmp0, tmpadr, 1
and edx, edx, 0xffffff00
or edx, edx, tmp0

;cmp al, dl
and eflags, eflags, ~(CF|ZF)
and tmp3, eax, 0xff
and tmp5, edx, 0xff
cmovult tmp3, tmp5, tmp3, CF, 0
or eflags, eflags, tmp3
sub tmp1, eax, edx
and tmp0, tmp1, 0xff
cmovz tmp0, tmp0, ZF, 0
or eflags, eflags, tmp0

;jbe short loc_402335
and tmp1, eflags, ZF | CF
ctcallnz tmp1, loc_402335

tcall loc_402323
endp

proc loc_402323
;sub al, dl
sub tmp3, eax, edx
ins8ll eax, eax, tmp3

;lea edx, [ecx-0x57]
add edx, ecx, -87

;mov [esi+loc_41FEC0], al
mov tmpadr, loc_41FEC0
add tmpadr, tmpadr, esi
store8 eax, tmpadr, 1

;mov [ebp], edx
store edx, ebp, 4

;inc esi
add esi, esi, 1

;add ebp, 0x4
add ebp, ebp, 4

tcall loc_402335
endp

proc loc_402335
;add ecx, 0x104
add ecx, ecx, 260

;dec ebx
sub ebx, ebx, 1
mov tmpcnd, ebx

;jnz short loc_40231A
ctcallnz tmpcnd, loc_40231A

tcall loc_40233E
endp

proc loc_40233E
;mov byte [esi+loc_41FEC0], 0x0
mov tmpadr, loc_41FEC0
add tmpadr, tmpadr, esi
store8 0, tmpadr, 1

;mov dl, [loc_41FEC0]
load8z tmp0, loc_41FEC0, 4
and edx, edx, 0xffffff00
or edx, edx, tmp0

;xor ebx, ebx
xor ebx, ebx, ebx

;mov [esi*4+loc_41FED0], edi
mov tmpadr, loc_41FED0
shl tmp0, esi, 2
add tmpadr, tmpadr, tmp0
store edi, tmpadr, 4

;test dl, dl
and tmpcnd, edx, 0xff

;jz short loc_4023AB
ctcallz tmpcnd, loc_4023AB

tcall loc_402358
endp

proc loc_402358
;mov esi, loc_41FED0
mov esi, loc_41FED0

tcall loc_40235D
endp

proc loc_40235D
;mov al, [ebx+loc_41FEC1]
mov tmpadr, loc_41FEC1
add tmpadr, tmpadr, ebx
load8z tmp0, tmpadr, 1
and eax, eax, 0xffffff00
or eax, eax, tmp0

;mov ebp, [esi]
load ebp, esi, 1

;lea ecx, [ebx+loc_41FEC1]
mov tmpadr, loc_41FEC1
add ecx, tmpadr, ebx

;test al, al
and tmpcnd, eax, 0xff

;jz short loc_40239D
ctcallz tmpcnd, loc_40239D

tcall loc_40236F
endp

proc loc_40236F
;mov edi, ecx
mov edi, ecx

;lea ecx, [esi+0x4]
add ecx, esi, 4

tcall loc_402374
endp

proc loc_402374
;cmp al, dl
and eflags, eflags, ~(CF|ZF)
and tmp3, eax, 0xff
and tmp5, edx, 0xff
cmovult tmp3, tmp5, tmp3, CF, 0
or eflags, eflags, tmp3
sub tmp1, eax, edx
and tmp0, tmp1, 0xff
cmovz tmp0, tmp0, ZF, 0
or eflags, eflags, tmp0

;ja short loc_40237E
and tmp1, eflags, ZF | CF
ctcallz tmp1, loc_40237E

tcall loc_402378
endp

proc loc_402378
;jb short loc_402390
and tmp1, eflags, CF
ctcallnz tmp1, loc_402390

tcall loc_40237A
endp

proc loc_40237A
;cmp [ecx], ebp
load tmp1, ecx, 1
cmovugt tmp1, ebp, tmpcnd, 0, 1

;jbe short loc_402390
ctcallnz tmpcnd, loc_402390

tcall loc_40237E
endp

proc loc_40237E
;mov [ebx+loc_41FEC0], al
mov tmpadr, loc_41FEC0
add tmpadr, tmpadr, ebx
store8 eax, tmpadr, 1

;mov [edi], dl
store8 edx, edi, 1

;mov dl, al
ins8ll edx, edx, eax

;mov eax, [ecx]
load eax, ecx, 1

;mov [esi], eax
store eax, esi, 1

;mov [ecx], ebp
store ebp, ecx, 1

;mov ebp, [esi]
load ebp, esi, 1

tcall loc_402390
endp

proc loc_402390
;mov al, [edi+0x1]
add tmpadr, edi, 1
load8z tmp0, tmpadr, 1
and eax, eax, 0xffffff00
or eax, eax, tmp0

;add ecx, 0x4
add ecx, ecx, 4

;inc edi
add edi, edi, 1

;test al, al
and tmpcnd, eax, 0xff

;jnz short loc_402374
ctcallnz tmpcnd, loc_402374

tcall loc_40239B
endp

proc loc_40239B
;xor edi, edi
xor edi, edi, edi

tcall loc_40239D
endp

proc loc_40239D
;mov dl, [ebx+loc_41FEC1]
mov tmpadr, loc_41FEC1
add tmpadr, tmpadr, ebx
load8z tmp0, tmpadr, 1
and edx, edx, 0xffffff00
or edx, edx, tmp0

;inc ebx
add ebx, ebx, 1

;add esi, 0x4
add esi, esi, 4

;test dl, dl
and tmpcnd, edx, 0xff

;jnz short loc_40235D
ctcallnz tmpcnd, loc_40235D

tcall loc_4023AB
endp

proc loc_4023AB
;mov [loc_41FF10], ebx
store ebx, loc_41FF10, 4

;call loc_401AD0
PUSH loc_4023B6
tcall loc_401AD0
endp

proc loc_4023B6
;cmp eax, edi
cmoveq eax, edi, tmpcnd, 0, 1

;jz short loc_402402
ctcallz tmpcnd, loc_402402

tcall loc_4023BA
endp

proc loc_4023BA
;mov ecx, [loc_41FEB8]
load ecx, loc_41FEB8, 4

;mov [eax], ecx
store ecx, eax, 1

;mov edx, [loc_41FEB8]
load edx, loc_41FEB8, 4

;mov [edx+0x4], eax
add tmpadr, edx, 4
store eax, tmpadr, 1

;mov edx, [esp+0x10]
add tmpadr, esp, 16
load edx, tmpadr, 4

;mov [loc_41FEB8], eax
store eax, loc_41FEB8, 4

;mov dword [eax+0x4], loc_41FEB8
add tmpadr, eax, 4
mov tmp1, loc_41FEB8
store tmp1, tmpadr, 1

;mov [eax+0x10], edi
add tmpadr, eax, 16
store edi, tmpadr, 1

;mov byte [eax+0x19], 0x1
add tmpadr, eax, 25
mov tmp1, 0x1
store8 tmp1, tmpadr, 1

;mov [eax+0xc], edi
add tmpadr, eax, 12
store edi, tmpadr, 1

;mov byte [eax+0x1a], 0xff
add tmpadr, eax, 26
mov tmp1, 0xff
store8 tmp1, tmpadr, 1

;mov eax, [loc_41FF18]
load eax, loc_41FF18, 4

;inc eax
add eax, eax, 1

;dec edx
sub edx, edx, 1

;cmp eax, 0x7c
cmovslt eax, 124, tmpcnd, 0, 1

;mov [loc_41FF18], eax
store eax, loc_41FF18, 4

;mov [esp+0x10], edx
add tmpadr, esp, 16
store edx, tmpadr, 4

;jl near loc_4022D7
ctcallz tmpcnd, loc_4022D7

tcall loc_402402
endp

proc loc_402402
;pop edi
POP edi

;pop esi
POP esi

;pop ebp
POP ebp

;pop ebx
POP ebx

;pop ecx
POP ecx

;ret
POP tmp1
tcall tmp1
endp

proc loc_402410
;push ecx
PUSH ecx

;mov eax, [loc_41FF18]
load eax, loc_41FF18, 4

;cmp eax, 0x7c
cmovslt eax, 124, tmpcnd, 0, 1

;jl short loc_402434
ctcallz tmpcnd, loc_402434

tcall loc_40241B
endp

proc loc_40241B
;xor edx, edx
xor edx, edx, edx

;mov ecx, 0x1
mov ecx, 0x1

;call loc_40A480
PUSH loc_402427
tcall loc_40A480
endp

proc loc_402427
;xor edx, edx
xor edx, edx, edx

;xor ecx, ecx
xor ecx, ecx, ecx

;call loc_40A480
PUSH loc_402430
tcall loc_40A480
endp

proc loc_402430
;pop ecx
POP ecx

;ret 0x4
POP tmp1
add esp, esp, 4
tcall tmp1
endp

proc loc_402434
;mov ecx, 0x80
mov ecx, 0x80

;sub ecx, eax
sub ecx, ecx, eax

;mov [esp], ecx
store ecx, esp, 4

;fild dword [esp]
load tmp1, esp, 4
FILD_INT32 tmp1

;fmul dword [esp+0x8]
add tmpadr, esp, 8
load tmp1, tmpadr, 4
FMUL_FLOAT tmp1

;call _ftol_asm
PUSH loc_40244C
tcall _ftol_asm
endp

proc loc_40244C
;mov ecx, eax
mov ecx, eax

;call loc_402240
PUSH loc_402453
tcall loc_402240
endp

proc loc_402453
;pop ecx
POP ecx

;ret 0x4
POP tmp1
add esp, esp, 4
tcall tmp1
endp

proc loc_404760
;mov al, [esp+0x4]
add tmpadr, esp, 4
load8z tmp0, tmpadr, 4
and eax, eax, 0xffffff00
or eax, eax, tmp0

;test al, al
and tmpcnd, eax, 0xff

;jnz short loc_40478A
ctcallnz tmpcnd, loc_40478A

tcall loc_404768
endp

proc loc_404768
;cmp byte [ecx+0x1], 0x9
add tmpadr, ecx, 1
load8z tmp1, tmpadr, 1
sub tmp1, tmp1, 9
and tmpcnd, tmp1, 0xff

;jnz short loc_40478A
ctcallnz tmpcnd, loc_40478A

tcall loc_40476E
endp

proc loc_40476E
;mov al, [ecx+0x2]
add tmpadr, ecx, 2
load8z tmp0, tmpadr, 1
and eax, eax, 0xffffff00
or eax, eax, tmp0

;test al, al
and tmpcnd, eax, 0xff

;jbe short loc_40478A
ctcallz tmpcnd, loc_40478A

tcall loc_404775
endp

proc loc_404775
;cmp al, 0x2
and eflags, eflags, ~(CF|ZF)
and tmp3, eax, 0xff
cmovult tmp3, 0x2, tmp3, CF, 0
or eflags, eflags, tmp3
sub tmp1, eax, 2
and tmp0, tmp1, 0xff
cmovz tmp0, tmp0, ZF, 0
or eflags, eflags, tmp0

;ja short loc_40478A
and tmp1, eflags, ZF | CF
ctcallz tmp1, loc_40478A

tcall loc_404779
endp

proc loc_404779
;cmp edx, 0x4
cmoveq edx, 4, tmpcnd, 0, 1

;jnz short loc_40478A
ctcallnz tmpcnd, loc_40478A

tcall loc_40477E
endp

proc loc_40477E
;cmp byte [ecx], 0x7f
load8z tmp1, ecx, 1
sub tmp1, tmp1, 127
and tmpcnd, tmp1, 0xff

;jnz short loc_40478A
ctcallnz tmpcnd, loc_40478A

tcall loc_404783
endp

proc loc_404783
;xor ecx, ecx
xor ecx, ecx, ecx

;call loc_4065F0
PUSH loc_40478A
tcall loc_4065F0
endp

proc loc_40478A
;ret 0x4
POP tmp1
add esp, esp, 4
tcall tmp1
endp

proc loc_404790
;mov al, [esp+0x4]
add tmpadr, esp, 4
load8z tmp0, tmpadr, 4
and eax, eax, 0xffffff00
or eax, eax, tmp0

;test al, al
and tmpcnd, eax, 0xff

;jnz short loc_4047E1
ctcallnz tmpcnd, loc_4047E1

tcall loc_404798
endp

proc loc_404798
;cmp byte [ecx], 0x7f
load8z tmp1, ecx, 1
sub tmp1, tmp1, 127
and tmpcnd, tmp1, 0xff

;jnz short loc_4047E1
ctcallnz tmpcnd, loc_4047E1

tcall loc_40479D
endp

proc loc_40479D
;cmp byte [ecx+0x1], 0x4
add tmpadr, ecx, 1
load8z tmp1, tmpadr, 1
sub tmp1, tmp1, 4
and tmpcnd, tmp1, 0xff

;jnz short loc_4047E1
ctcallnz tmpcnd, loc_4047E1

tcall loc_4047A3
endp

proc loc_4047A3
;xor eax, eax
xor eax, eax, eax

;mov al, [ecx+0x2]
add tmpadr, ecx, 2
load8z tmp0, tmpadr, 1
and eax, eax, 0xffffff00
or eax, eax, tmp0

;dec eax
sub eax, eax, 1
mov tmpcnd, eax

;jnz short loc_4047E1
ctcallnz tmpcnd, loc_4047E1

tcall loc_4047AB
endp

proc loc_4047AB
;cmp edx, 0x6
cmoveq edx, 6, tmpcnd, 0, 1

;jnz short loc_4047E1
ctcallnz tmpcnd, loc_4047E1

tcall loc_4047B0
endp

proc loc_4047B0
;xor eax, eax
xor eax, eax, eax

;mov al, [ecx+0x4]
add tmpadr, ecx, 4
load8z tmp0, tmpadr, 1
and eax, eax, 0xffffff00
or eax, eax, tmp0

;mov [esp+0x4], eax
add tmpadr, esp, 4
store eax, tmpadr, 4

;fild dword [esp+0x4]
add tmpadr, esp, 4
load tmp1, tmpadr, 4
FILD_INT32 tmp1

;fmul dword [loc_4181E0]
load tmp1, loc_4181E0, 4
FMUL_FLOAT tmp1

;fld st0
FLD_ST 0

;fmul st0, st1
FMUL_ST 1

;fstp dword [loc_41B6B8]
FSTP_FLOAT
store tmp0, loc_41B6B8, 4

;fstp st0
FSTP_ST 0

;fld dword [loc_41B6BC]
load tmp1, loc_41B6BC, 4
FLD_FLOAT tmp1

;fmul dword [loc_41B6B8]
load tmp1, loc_41B6B8, 4
FMUL_FLOAT tmp1

;fstp dword [loc_41B6FC]
FSTP_FLOAT
store tmp0, loc_41B6FC, 4

tcall loc_4047E1
endp

proc loc_4047E1
;ret 0x4
POP tmp1
add esp, esp, 4
tcall tmp1
endp

proc loc_4047F0
;mov al, [esp+0x4]
add tmpadr, esp, 4
load8z tmp0, tmpadr, 4
and eax, eax, 0xffffff00
or eax, eax, tmp0

;test al, al
and tmpcnd, eax, 0xff

;jnz short loc_404833
ctcallnz tmpcnd, loc_404833

tcall loc_4047F8
endp

proc loc_4047F8
;mov al, [ecx]
load8z tmp0, ecx, 1
and eax, eax, 0xffffff00
or eax, eax, tmp0

;and al, 0xf0
and eax, eax, 0xfffffff0

;cmp al, 0x10
sub tmp1, eax, 16
and tmpcnd, tmp1, 0xff

;jnz short loc_404833
ctcallnz tmpcnd, loc_404833

tcall loc_404800
endp

proc loc_404800
;cmp byte [ecx+0x1], 0x4c
add tmpadr, ecx, 1
load8z tmp1, tmpadr, 1
sub tmp1, tmp1, 76
and tmpcnd, tmp1, 0xff

;jnz short loc_404833
ctcallnz tmpcnd, loc_404833

tcall loc_404806
endp

proc loc_404806
;cmp edx, 0x7
cmovslt edx, 7, tmpcnd, 0, 1

;jl short loc_404833
ctcallz tmpcnd, loc_404833

tcall loc_40480B
endp

proc loc_40480B
;xor edx, edx
xor edx, edx, edx

;xor eax, eax
xor eax, eax, eax

;mov dl, [ecx+0x2]
add tmpadr, ecx, 2
load8z tmp0, tmpadr, 1
and edx, edx, 0xffffff00
or edx, edx, tmp0

;mov al, [ecx+0x3]
add tmpadr, ecx, 3
load8z tmp0, tmpadr, 1
and eax, eax, 0xffffff00
or eax, eax, tmp0

;shl edx, 0x7
shl edx, edx, 7

;or edx, eax
or edx, edx, eax

;xor eax, eax
xor eax, eax, eax

;mov al, [ecx+0x4]
add tmpadr, ecx, 4
load8z tmp0, tmpadr, 1
and eax, eax, 0xffffff00
or eax, eax, tmp0

;shl edx, 0x7
shl edx, edx, 7

;or edx, eax
or edx, edx, eax

;cmp edx, 0x7e
cmoveq edx, 126, tmpcnd, 0, 1

;jnz short loc_404833
ctcallnz tmpcnd, loc_404833

tcall loc_404829
endp

proc loc_404829
;mov ecx, 0x1
mov ecx, 0x1

;call loc_4065F0
PUSH loc_404833
tcall loc_4065F0
endp

proc loc_404833
;ret 0x4
POP tmp1
add esp, esp, 4
tcall tmp1
endp

proc loc_404840
;push ebx
PUSH ebx

;mov ebx, ecx
mov ebx, ecx

;push ebp
PUSH ebp

;push esi
PUSH esi

;mov al, [ebx+0x1]
add tmpadr, ebx, 1
load8z tmp0, tmpadr, 1
and eax, eax, 0xffffff00
or eax, eax, tmp0

;push edi
PUSH edi

;cmp al, 0x42
sub tmp1, eax, 66
and tmpcnd, tmp1, 0xff

;mov ebp, edx
mov ebp, edx

;jnz near loc_40496E
ctcallnz tmpcnd, loc_40496E

tcall loc_404853
endp

proc loc_404853
;cmp byte [ebx+0x2], 0x12
add tmpadr, ebx, 2
load8z tmp1, tmpadr, 1
sub tmp1, tmp1, 18
and tmpcnd, tmp1, 0xff

;jnz near loc_40496E
ctcallnz tmpcnd, loc_40496E

tcall loc_40485D
endp

proc loc_40485D
;cmp ebp, 0x9
cmovslt ebp, 9, tmpcnd, 0, 1

;jl near loc_40496E
ctcallz tmpcnd, loc_40496E

tcall loc_404866
endp

proc loc_404866
;xor ecx, ecx
xor ecx, ecx, ecx

;xor eax, eax
xor eax, eax, eax

;mov cl, [ebx+0x3]
add tmpadr, ebx, 3
load8z tmp0, tmpadr, 1
and ecx, ecx, 0xffffff00
or ecx, ecx, tmp0

;mov al, [ebx+0x4]
add tmpadr, ebx, 4
load8z tmp0, tmpadr, 1
and eax, eax, 0xffffff00
or eax, eax, tmp0

;shl ecx, 0x7
shl ecx, ecx, 7

;or ecx, eax
or ecx, ecx, eax

;xor edx, edx
xor edx, edx, edx

;mov dl, [ebx+0x5]
add tmpadr, ebx, 5
load8z tmp0, tmpadr, 1
and edx, edx, 0xffffff00
or edx, edx, tmp0

;add ebx, 0x6
add ebx, ebx, 6

;shl ecx, 0x7
shl ecx, ecx, 7

;or ecx, edx
or ecx, ecx, edx

;cmp ecx, 0x7f
cmoveq ecx, 127, tmpcnd, 0, 1

;jz near loc_40495C
ctcallz tmpcnd, loc_40495C

tcall loc_40488B
endp

proc loc_40488B
;cmp ecx, 0x10007f
cmoveq ecx, 1048703, tmpcnd, 0, 1

;jz near loc_404941
ctcallz tmpcnd, loc_404941

tcall loc_404897
endp

proc loc_404897
;mov eax, ecx
mov eax, ecx

;sub ebp, 0x8
sub ebp, ebp, 8

;and eax, 0x1ff800
and eax, eax, 0x1ff800

;cmp eax, 0x100800
cmoveq eax, 1050624, tmpcnd, 0, 1

;jnz short loc_4048F3
ctcallnz tmpcnd, loc_4048F3

tcall loc_4048A8
endp

proc loc_4048A8
;mov edx, ecx
mov edx, ecx

;and edx, 0x7f
and edx, edx, 0x7f

;cmp dl, 0x15
sub tmp1, edx, 21
and tmpcnd, tmp1, 0xff

;jnz near loc_40496E
ctcallnz tmpcnd, loc_40496E

tcall loc_4048B6
endp

proc loc_4048B6
;mov al, [esp+0x14]
add tmpadr, esp, 20
load8z tmp0, tmpadr, 4
and eax, eax, 0xffffff00
or eax, eax, tmp0

;pop edi
POP edi

;shr ecx, 0x7
lshr ecx, ecx, 7

;and cl, 0xf
and ecx, ecx, 0xffffff0f

;pop esi
POP esi

;shl al, 0x4
shl tmp4, eax, 4
ins8ll eax, eax, tmp4

;add cl, al
add tmp3, ecx, eax
ins8ll ecx, ecx, tmp3

;pop ebp
POP ebp

;mov [esp+0x8], cl
add tmpadr, esp, 8
store8 ecx, tmpadr, 4

;mov ecx, [esp+0x8]
add tmpadr, esp, 8
load ecx, tmpadr, 4

;and ecx, 0xff
and ecx, ecx, 0xff

;mov eax, ecx
mov eax, ecx

;shl eax, 0x6
shl eax, eax, 6

;add eax, ecx
add eax, eax, ecx

;mov cl, [ebx]
load8z tmp0, ebx, 1
and ecx, ecx, 0xffffff00
or ecx, ecx, tmp0

;shl eax, 0x2
shl eax, eax, 2

;pop ebx
POP ebx

;mov [eax+loc_42A966], cl
mov tmpadr, loc_42A966
add tmpadr, tmpadr, eax
store8 ecx, tmpadr, 1

;mov byte [eax+loc_42A965], 0x0
mov tmpadr, loc_42A965
add tmpadr, tmpadr, eax
store8 0, tmpadr, 1

;ret 0x4
POP tmp1
add esp, esp, 4
tcall tmp1
endp

proc loc_4048F3
;mov al, [esp+0x14]
add tmpadr, esp, 20
load8z tmp0, tmpadr, 4
and eax, eax, 0xffffff00
or eax, eax, tmp0

;test al, al
and tmpcnd, eax, 0xff

;jnz short loc_40496E
ctcallnz tmpcnd, loc_40496E

tcall loc_4048FB
endp

proc loc_4048FB
;mov eax, [(loc_41B1E8 + (8))]
load eax, loc_41B1E8[8], 4

;test eax, eax
mov tmpcnd, eax

;jz short loc_40496E
ctcallz tmpcnd, loc_40496E

tcall loc_404904
endp

proc loc_404904
;mov edi, (loc_41B1E8 + (4))
mov edi, loc_41B1E8[4]

tcall loc_404909
endp

proc loc_404909
;mov eax, [edi-0x4]
add tmpadr, edi, -4
load eax, tmpadr, 1

;cmp ecx, eax
cmovult ecx, eax, tmpcnd, 0, 1

;jb short loc_404930
ctcallz tmpcnd, loc_404930

tcall loc_404910
endp

proc loc_404910
;mov esi, [edi]
load esi, edi, 1

;cmp ecx, esi
cmovult ecx, esi, tmpcnd, 0, 1

;jae short loc_404930
ctcallnz tmpcnd, loc_404930

tcall loc_404916
endp

proc loc_404916
;sub esi, ecx
sub esi, esi, ecx

;cmp esi, ebp
cmovsgt esi, ebp, tmpcnd, 0, 1

;jle short loc_40491E
ctcallnz tmpcnd, loc_40491E

tcall loc_40491C
endp

proc loc_40491C
;mov esi, ebp
mov esi, ebp

tcall loc_40491E
endp

proc loc_40491E
;push ebx
PUSH ebx

;mov edx, esi
mov edx, esi

;sub ecx, eax
sub ecx, ecx, eax

;call dword [edi+0x4]
add tmpadr, edi, 4
load tmp2, tmpadr, 1
PUSH loc_404926
tcall tmp2
endp

proc loc_404926
;sub ebp, esi
sub ebp, ebp, esi

;test ebp, ebp
cmovsgt ebp, 0, tmpcnd, 0, 1

;jle short loc_40496E
ctcallnz tmpcnd, loc_40496E

tcall loc_40492C
endp

proc loc_40492C
;mov ecx, [edi]
load ecx, edi, 1

;add ebx, esi
add ebx, ebx, esi

tcall loc_404930
endp

proc loc_404930
;mov eax, [edi+0x10]
add tmpadr, edi, 16
load eax, tmpadr, 1

;add edi, 0xc
add edi, edi, 12

;test eax, eax
mov tmpcnd, eax

;jnz short loc_404909
ctcallnz tmpcnd, loc_404909

tcall loc_40493A
endp

proc loc_40493A
;pop edi
POP edi

;pop esi
POP esi

;pop ebp
POP ebp

;pop ebx
POP ebx

;ret 0x4
POP tmp1
add esp, esp, 4
tcall tmp1
endp

proc loc_404941
;cmp byte [ebx], 0x0
load8z tmp1, ebx, 1
and tmpcnd, tmp1, 0xff

;jz short loc_40495C
ctcallz tmpcnd, loc_40495C

tcall loc_404946
endp

proc loc_404946
;mov al, [esp+0x14]
add tmpadr, esp, 20
load8z tmp0, tmpadr, 4
and eax, eax, 0xffffff00
or eax, eax, tmp0

;test al, al
and tmpcnd, eax, 0xff

;jnz short loc_40496E
ctcallnz tmpcnd, loc_40496E

tcall loc_40494E
endp

proc loc_40494E
;xor ecx, ecx
xor ecx, ecx, ecx

;call loc_4065F0
PUSH loc_404955
tcall loc_4065F0
endp

proc loc_404955
;pop edi
POP edi

;pop esi
POP esi

;pop ebp
POP ebp

;pop ebx
POP ebx

;ret 0x4
POP tmp1
add esp, esp, 4
tcall tmp1
endp

proc loc_40495C
;mov al, [esp+0x14]
add tmpadr, esp, 20
load8z tmp0, tmpadr, 4
and eax, eax, 0xffffff00
or eax, eax, tmp0

;test al, al
and tmpcnd, eax, 0xff

;jnz short loc_40496E
ctcallnz tmpcnd, loc_40496E

tcall loc_404964
endp

proc loc_404964
;mov ecx, 0x2
mov ecx, 0x2

;call loc_4065F0
PUSH loc_40496E
tcall loc_4065F0
endp

proc loc_40496E
;pop edi
POP edi

;pop esi
POP esi

;pop ebp
POP ebp

;pop ebx
POP ebx

;ret 0x4
POP tmp1
add esp, esp, 4
tcall tmp1
endp

proc loc_404980
;mov eax, edx
mov eax, edx

;dec edx
sub edx, edx, 1

;push esi
PUSH esi

;mov esi, ecx
mov esi, ecx

;test eax, eax
mov tmpcnd, eax

;jz short loc_4049C1
ctcallz tmpcnd, loc_4049C1

tcall loc_40498A
endp

proc loc_40498A
;push ebx
PUSH ebx

;push edi
PUSH edi

;mov edi, [esp+0x10]
add tmpadr, esp, 16
load edi, tmpadr, 4

;lea ebx, [edx+0x1]
add ebx, edx, 1

tcall loc_404993
endp

proc loc_404993
;cmp esi, 0x4
cmovugt esi, 4, tmpcnd, 0, 1

;ja short loc_4049BA
ctcallz tmpcnd, loc_4049BA

tcall loc_404998
endp

proc loc_404998
;jmp dword [esi*4+loc_4049C8]
mov tmpadr, loc_4049C8
shl tmp0, esi, 2
add tmpadr, tmpadr, tmp0
load tmp1, tmpadr, 4
tcall tmp1
endp

proc loc_40499F
;xor ecx, ecx
xor ecx, ecx, ecx

;mov cl, [edi]
load8z tmp0, edi, 1
and ecx, ecx, 0xffffff00
or ecx, ecx, tmp0

;call loc_408840
PUSH loc_4049A8
tcall loc_408840
endp

proc loc_4049A8
;jmp short loc_4049BA
tcall loc_4049BA
endp

proc loc_4049AA
;mov cl, [edi]
load8z tmp0, edi, 1
and ecx, ecx, 0xffffff00
or ecx, ecx, tmp0

;call loc_408950
PUSH loc_4049B1
tcall loc_408950
endp

proc loc_4049B1
;jmp short loc_4049BA
tcall loc_4049BA
endp

proc loc_4049B3
;mov cl, [edi]
load8z tmp0, edi, 1
and ecx, ecx, 0xffffff00
or ecx, ecx, tmp0

;call loc_408980
PUSH loc_4049BA
tcall loc_408980
endp

proc loc_4049BA
;inc esi
add esi, esi, 1

;inc edi
add edi, edi, 1

;dec ebx
sub ebx, ebx, 1
mov tmpcnd, ebx

;jnz short loc_404993
ctcallnz tmpcnd, loc_404993

tcall loc_4049BF
endp

proc loc_4049BF
;pop edi
POP edi

;pop ebx
POP ebx

tcall loc_4049C1
endp

proc loc_4049C1
;pop esi
POP esi

;ret 0x4
POP tmp1
add esp, esp, 4
tcall tmp1
endp

;
proc loc_4049E0
;mov eax, edx
mov eax, edx

;dec edx
sub edx, edx, 1

;push edi
PUSH edi

;mov edi, ecx
mov edi, ecx

;test eax, eax
mov tmpcnd, eax

;jz short loc_404A56
ctcallz tmpcnd, loc_404A56

tcall loc_4049EA
endp

proc loc_4049EA
;push ebx
PUSH ebx

;push esi
PUSH esi

;mov esi, [esp+0x10]
add tmpadr, esp, 16
load esi, tmpadr, 4

;lea ebx, [edx+0x1]
add ebx, edx, 1

tcall loc_4049F3
endp

proc loc_4049F3
;cmp edi, 0x6
cmovugt edi, 6, tmpcnd, 0, 1

;ja short loc_404A4F
ctcallz tmpcnd, loc_404A4F

tcall loc_4049F8
endp

proc loc_4049F8
;jmp dword [edi*4+loc_404A5C]
mov tmpadr, loc_404A5C
shl tmp0, edi, 2
add tmpadr, tmpadr, tmp0
load tmp1, tmpadr, 4
tcall tmp1
endp

proc loc_4049FF
;xor ecx, ecx
xor ecx, ecx, ecx

;mov cl, [esi]
load8z tmp0, esi, 1
and ecx, ecx, 0xffffff00
or ecx, ecx, tmp0

;call loc_408610
PUSH loc_404A08
tcall loc_408610
endp

proc loc_404A08
;jmp short loc_404A4F
tcall loc_404A4F
endp

proc loc_404A0A
;mov al, [esi]
load8z tmp0, esi, 1
and eax, eax, 0xffffff00
or eax, eax, tmp0

;shl al, 1
shl tmp4, eax, 1
ins8ll eax, eax, tmp4

;xor ecx, ecx
xor ecx, ecx, ecx

;mov [loc_455D61], al
store8 eax, loc_455D61, 1

;mov cl, al
ins8ll ecx, ecx, eax

;mov [esp+0x10], ecx
add tmpadr, esp, 16
store ecx, tmpadr, 4

;fild dword [esp+0x10]
add tmpadr, esp, 16
load tmp1, tmpadr, 4
FILD_INT32 tmp1

;fmul dword [loc_4181E0]
load tmp1, loc_4181E0, 4
FMUL_FLOAT tmp1

;fstp dword [loc_44587C]
FSTP_FLOAT
store tmp0, loc_44587C, 4

;jmp short loc_404A4F
tcall loc_404A4F
endp

proc loc_404A2D
;mov cl, [esi]
load8z tmp0, esi, 1
and ecx, ecx, 0xffffff00
or ecx, ecx, tmp0

;call loc_4086A0
PUSH loc_404A34
tcall loc_4086A0
endp

proc loc_404A34
;jmp short loc_404A4F
tcall loc_404A4F
endp

proc loc_404A36
;mov cl, [esi]
load8z tmp0, esi, 1
and ecx, ecx, 0xffffff00
or ecx, ecx, tmp0

;call loc_4086E0
PUSH loc_404A3D
tcall loc_4086E0
endp

proc loc_404A3D
;jmp short loc_404A4F
tcall loc_404A4F
endp

proc loc_404A3F
;mov cl, [esi]
load8z tmp0, esi, 1
and ecx, ecx, 0xffffff00
or ecx, ecx, tmp0

;call loc_408720
PUSH loc_404A46
tcall loc_408720
endp

proc loc_404A46
;jmp short loc_404A4F
tcall loc_404A4F
endp

proc loc_404A48
;mov cl, [esi]
load8z tmp0, esi, 1
and ecx, ecx, 0xffffff00
or ecx, ecx, tmp0

;call loc_408760
PUSH loc_404A4F
tcall loc_408760
endp

proc loc_404A4F
;inc edi
add edi, edi, 1

;inc esi
add esi, esi, 1

;dec ebx
sub ebx, ebx, 1
mov tmpcnd, ebx

;jnz short loc_4049F3
ctcallnz tmpcnd, loc_4049F3

tcall loc_404A54
endp

proc loc_404A54
;pop esi
POP esi

;pop ebx
POP ebx

tcall loc_404A56
endp

proc loc_404A56
;pop edi
POP edi

;ret 0x4
POP tmp1
add esp, esp, 4
tcall tmp1
endp

;
proc loc_404A80
;mov ecx, [esp+0x4]
add tmpadr, esp, 4
load ecx, tmpadr, 4

;xor eax, eax
xor eax, eax, eax

;mov al, [ecx]
load8z tmp0, ecx, 1
and eax, eax, 0xffffff00
or eax, eax, tmp0

;mov [esp+0x4], eax
add tmpadr, esp, 4
store eax, tmpadr, 4

;fild dword [esp+0x4]
add tmpadr, esp, 4
load tmp1, tmpadr, 4
FILD_INT32 tmp1

;fmul dword [loc_4181E0]
load tmp1, loc_4181E0, 4
FMUL_FLOAT tmp1

;fld st0
FLD_ST 0

;fmul st0, st1
FMUL_ST 1

;fstp dword [loc_41B6B8]
FSTP_FLOAT
store tmp0, loc_41B6B8, 4

;fstp st0
FSTP_ST 0

;fld dword [loc_41B6BC]
load tmp1, loc_41B6BC, 4
FLD_FLOAT tmp1

;fmul dword [loc_41B6B8]
load tmp1, loc_41B6B8, 4
FMUL_FLOAT tmp1

;fstp dword [loc_41B6FC]
FSTP_FLOAT
store tmp0, loc_41B6FC, 4

;ret 0x4
POP tmp1
add esp, esp, 4
tcall tmp1
endp

proc loc_4056C0
;sub esp, 0x10
sub esp, esp, 16

;mov [loc_42A2E0], ecx
store ecx, loc_42A2E0, 4

;mov eax, [ecx+0x28]
add tmpadr, ecx, 40
load eax, tmpadr, 1

;push ebx
PUSH ebx

;push ebp
PUSH ebp

;xor bl, bl
and ebx, ebx, 0xffffff00

;push esi
PUSH esi

;cmp edx, eax
cmoveq edx, eax, tmpcnd, 0, 1

;push edi
PUSH edi

;jnz near loc_4058D9
ctcallnz tmpcnd, loc_4058D9

tcall loc_4056DA
endp

proc loc_4056DA
;cmp dword [ecx+0x20], 0x200
add tmpadr, ecx, 32
load tmp1, tmpadr, 1
cmoveq tmp1, 512, tmpcnd, 0, 1

;jnz near loc_4058D9
ctcallnz tmpcnd, loc_4058D9

tcall loc_4056E7
endp

proc loc_4056E7
;mov edx, [ecx+0x24]
add tmpadr, ecx, 36
load edx, tmpadr, 1

;cmp edx, 0x100
cmoveq edx, 256, tmpcnd, 0, 1

;jz short loc_4056FE
ctcallz tmpcnd, loc_4056FE

tcall loc_4056F2
endp

proc loc_4056F2
;cmp edx, 0x101
cmoveq edx, 257, tmpcnd, 0, 1

;jnz near loc_4058D9
ctcallnz tmpcnd, loc_4058D9

tcall loc_4056FE
endp

proc loc_4056FE
;mov esi, [ecx+0x34]
add tmpadr, ecx, 52
load esi, tmpadr, 1

;mov ebp, [ecx+0x2c]
add tmpadr, ecx, 44
load ebp, tmpadr, 1

;mov edi, [ecx+0x30]
add tmpadr, ecx, 48
load edi, tmpadr, 1

;add esi, ecx
add esi, esi, ecx

;add eax, ecx
add eax, eax, ecx

;add ebp, ecx
add ebp, ebp, ecx

;mov edx, esi
mov edx, esi

;mov [ecx+0x28], eax
add tmpadr, ecx, 40
store eax, tmpadr, 1

;mov eax, ebp
mov eax, ebp

;mov [esp+0x1c], edx
add tmpadr, esp, 28
store edx, tmpadr, 4

;mov edx, [ecx+0x38]
add tmpadr, ecx, 56
load edx, tmpadr, 1

;mov [esp+0x14], eax
add tmpadr, esp, 20
store eax, tmpadr, 4

;mov eax, [ecx+0x3c]
add tmpadr, ecx, 60
load eax, tmpadr, 1

;add edx, ecx
add edx, edx, ecx

;add edi, ecx
add edi, edi, ecx

;mov [ecx+0x38], edx
add tmpadr, ecx, 56
store edx, tmpadr, 1

;add eax, ecx
add eax, eax, ecx

;xor edx, edx
xor edx, edx, edx

;mov [ecx+0x2c], ebp
add tmpadr, ecx, 44
store ebp, tmpadr, 1

;mov [ecx+0x30], edi
add tmpadr, ecx, 48
store edi, tmpadr, 1

;mov [ecx+0x34], esi
add tmpadr, ecx, 52
store esi, tmpadr, 1

;mov [ecx+0x3c], eax
add tmpadr, ecx, 60
store eax, tmpadr, 1

;mov ebp, [loc_42A2E0]
load ebp, loc_42A2E0, 4

;mov [esp+0x10], edx
add tmpadr, esp, 16
store edx, tmpadr, 4

tcall loc_405743
endp

proc loc_405743
;xor esi, esi
xor esi, esi, esi

;shl edx, 0x7
shl edx, edx, 7

;lea eax, [edx+ebp+0x50]
add tmpadr, edx, ebp
add eax, tmpadr, 80

;mov [esp+0x18], eax
add tmpadr, esp, 24
store eax, tmpadr, 4

tcall loc_405750
endp

proc loc_405750
;mov eax, [esp+0x18]
add tmpadr, esp, 24
load eax, tmpadr, 4

;xor edx, edx
xor edx, edx, edx

;mov dl, [eax+esi]
add tmpadr, eax, esi
load8z tmp0, tmpadr, 1
and edx, edx, 0xffffff00
or edx, edx, tmp0

;mov eax, [esp+0x14]
add tmpadr, esp, 20
load eax, tmpadr, 4

;shl edx, 0x8
shl edx, edx, 8

;add edx, eax
add edx, edx, eax

;cmp edx, edi
cmovugt edx, edi, tmpcnd, 0, 1

;ja near loc_4058D9
ctcallz tmpcnd, loc_4058D9

tcall loc_40576A
endp

proc loc_40576A
;mov edx, [esp+0x10]
add tmpadr, esp, 16
load edx, tmpadr, 4

;mov eax, edx
mov eax, edx

;sub eax, 0x0
sub eax, eax, 0
mov tmpcnd, eax

;jz short loc_40578B
ctcallz tmpcnd, loc_40578B

tcall loc_405775
endp

proc loc_405775
;dec eax
sub eax, eax, 1
mov tmpcnd, eax

;jnz near loc_4058D9
ctcallnz tmpcnd, loc_4058D9

tcall loc_40577C
endp

proc loc_40577C
;cmp bl, [esi+ebp+0xd0]
add tmpadr, esi, ebp
add tmpadr, tmpadr, 208
load8z tmp1, tmpadr, 1
and eflags, eflags, ~CF
and tmp3, ebx, 0xff
and tmp5, tmp1, 0xff
cmovult tmp3, tmp5, tmp3, CF, 0
or eflags, eflags, tmp3
sub tmp2, ebx, tmp1

;jae near loc_4058D9
and tmp1, eflags, CF
ctcallz tmp1, loc_4058D9

tcall loc_405789
endp

proc loc_405789
;jmp short loc_405795
tcall loc_405795
endp

proc loc_40578B
;mov al, [esi+ebp+0x50]
add tmpadr, esi, ebp
add tmpadr, tmpadr, 80
load8z tmp0, tmpadr, 1
and eax, eax, 0xffffff00
or eax, eax, tmp0

;cmp bl, al
and eflags, eflags, ~CF
and tmp3, ebx, 0xff
and tmp5, eax, 0xff
cmovult tmp3, tmp5, tmp3, CF, 0
or eflags, eflags, tmp3
sub tmp1, ebx, eax

;jae short loc_405795
and tmp1, eflags, CF
ctcallz tmp1, loc_405795

tcall loc_405793
endp

proc loc_405793
;mov bl, al
ins8ll ebx, ebx, eax

tcall loc_405795
endp

proc loc_405795
;inc esi
add esi, esi, 1

;cmp esi, 0x80
cmovslt esi, 128, tmpcnd, 0, 1

;jl short loc_405750
ctcallz tmpcnd, loc_405750

tcall loc_40579E
endp

proc loc_40579E
;inc edx
add edx, edx, 1

;cmp edx, 0x2
cmovslt edx, 2, tmpcnd, 0, 1

;mov [esp+0x10], edx
add tmpadr, esp, 16
store edx, tmpadr, 4

;jl short loc_405743
ctcallz tmpcnd, loc_405743

tcall loc_4057A8
endp

proc loc_4057A8
;mov edx, [esp+0x14]
add tmpadr, esp, 20
load edx, tmpadr, 4

;inc bl
add tmp3, ebx, 1
ins8ll ebx, ebx, tmp3

;mov [esp+0x18], bl
add tmpadr, esp, 24
store8 ebx, tmpadr, 4

;mov ebx, [esp+0x1c]
add tmpadr, esp, 28
load ebx, tmpadr, 4

;xor esi, esi
xor esi, esi, esi

;cmp edx, edi
cmovult edx, edi, tmpcnd, 0, 1

;mov ebp, edi
mov ebp, edi

;mov [esp+0x10], ebx
add tmpadr, esp, 16
store ebx, tmpadr, 4

;jae short loc_4057DA
ctcallnz tmpcnd, loc_4057DA

tcall loc_4057C2
endp

proc loc_4057C2
;mov eax, [esp+0x18]
add tmpadr, esp, 24
load eax, tmpadr, 4

;sub edi, edx
sub edi, edi, edx

;add edi, 0xff
add edi, edi, 255

;and eax, 0xff
and eax, eax, 0xff

;shr edi, 0x8
lshr edi, edi, 8

tcall loc_4057D6
endp

proc loc_4057D6
;inc esi
add esi, esi, 1

;dec edi
sub edi, edi, 1
mov tmpcnd, edi

;jnz short loc_4057D6
ctcallnz tmpcnd, loc_4057D6

tcall loc_4057DA
endp

proc loc_4057DA
;cmp ebx, ebp
cmovugt ebx, ebp, tmpcnd, 0, 1

;jbe short loc_40581A
ctcallnz tmpcnd, loc_40581A

tcall loc_4057DE
endp

proc loc_4057DE
;xor ebx, ebx
xor ebx, ebx, ebx

;lea esi, [ebp+0x14]
add esi, ebp, 20

tcall loc_4057E3
endp

proc loc_4057E3
;mov eax, [esi]
load eax, esi, 1

;mov edi, [ecx+0x38]
add tmpadr, ecx, 56
load edi, tmpadr, 1

;cmp eax, 0xffffffff
cmoveq eax, -1, tmpcnd, 0, 1

;lea edx, [eax+edi]
add edx, eax, edi

;jnz short loc_4057F4
ctcallnz tmpcnd, loc_4057F4

tcall loc_4057F0
endp

proc loc_4057F0
;xor edx, edx
xor edx, edx, edx

;jmp short loc_405805
tcall loc_405805
endp

proc loc_4057F4
;cmp edx, edi
cmovult edx, edi, tmpcnd, 0, 1

;jb near loc_4058D9
ctcallz tmpcnd, loc_4058D9

tcall loc_4057FC
endp

proc loc_4057FC
;cmp edx, [ecx+0x3c]
add tmpadr, ecx, 60
load tmp1, tmpadr, 1
cmovult edx, tmp1, tmpcnd, 0, 1

;jae near loc_4058D9
ctcallnz tmpcnd, loc_4058D9

tcall loc_405805
endp

proc loc_405805
;mov [esi], edx
store edx, esi, 1

;inc ebx
add ebx, ebx, 1

;add esi, 0x4
add esi, esi, 4

;cmp ebx, 0x10
cmovslt ebx, 16, tmpcnd, 0, 1

;jl short loc_4057E3
ctcallz tmpcnd, loc_4057E3

tcall loc_405810
endp

proc loc_405810
;mov eax, [ecx+0x34]
add tmpadr, ecx, 52
load eax, tmpadr, 1

;add ebp, 0x54
add ebp, ebp, 84

;cmp eax, ebp
cmovugt eax, ebp, tmpcnd, 0, 1

;ja short loc_4057DE
ctcallz tmpcnd, loc_4057DE

tcall loc_40581A
endp

proc loc_40581A
;mov edx, [esp+0x10]
add tmpadr, esp, 16
load edx, tmpadr, 4

;mov eax, [ecx+0x38]
add tmpadr, ecx, 56
load eax, tmpadr, 1

;cmp eax, edx
cmovugt eax, edx, tmpcnd, 0, 1

;jbe short loc_405875
ctcallnz tmpcnd, loc_405875

tcall loc_405825
endp

proc loc_405825
;mov eax, [esp+0x10]
add tmpadr, esp, 16
load eax, tmpadr, 4

;xor ebx, ebx
xor ebx, ebx, ebx

;lea esi, [eax+0x84]
add esi, eax, 132

tcall loc_405831
endp

proc loc_405831
;mov eax, [esi]
load eax, esi, 1

;mov edi, [ecx+0x38]
add tmpadr, ecx, 56
load edi, tmpadr, 1

;cmp eax, 0xffffffff
cmoveq eax, -1, tmpcnd, 0, 1

;lea edx, [eax+edi]
add edx, eax, edi

;jnz short loc_405842
ctcallnz tmpcnd, loc_405842

tcall loc_40583E
endp

proc loc_40583E
;xor edx, edx
xor edx, edx, edx

;jmp short loc_405853
tcall loc_405853
endp

proc loc_405842
;cmp edx, edi
cmovult edx, edi, tmpcnd, 0, 1

;jb near loc_4058D9
ctcallz tmpcnd, loc_4058D9

tcall loc_40584A
endp

proc loc_40584A
;cmp edx, [ecx+0x3c]
add tmpadr, ecx, 60
load tmp1, tmpadr, 1
cmovult edx, tmp1, tmpcnd, 0, 1

;jae near loc_4058D9
ctcallnz tmpcnd, loc_4058D9

tcall loc_405853
endp

proc loc_405853
;mov [esi], edx
store edx, esi, 1

;inc ebx
add ebx, ebx, 1

;add esi, 0x4
add esi, esi, 4

;cmp ebx, 0x80
cmovslt ebx, 128, tmpcnd, 0, 1

;jl short loc_405831
ctcallz tmpcnd, loc_405831

tcall loc_405861
endp

proc loc_405861
;mov eax, [esp+0x10]
add tmpadr, esp, 16
load eax, tmpadr, 4

;mov edx, [ecx+0x38]
add tmpadr, ecx, 56
load edx, tmpadr, 1

;add eax, 0x284
add eax, eax, 644

;cmp edx, eax
cmovugt edx, eax, tmpcnd, 0, 1

;mov [esp+0x10], eax
add tmpadr, esp, 16
store eax, tmpadr, 4

;ja short loc_405825
ctcallz tmpcnd, loc_405825

tcall loc_405875
endp

proc loc_405875
;mov ebp, [ecx+0x38]
add tmpadr, ecx, 56
load ebp, tmpadr, 1

;mov eax, [ecx+0x3c]
add tmpadr, ecx, 60
load eax, tmpadr, 1

;cmp eax, ebp
cmovugt eax, ebp, tmpcnd, 0, 1

;jbe short loc_4058CC
ctcallnz tmpcnd, loc_4058CC

tcall loc_40587F
endp

proc loc_40587F
;xor ebx, ebx
xor ebx, ebx, ebx

;lea edi, [ebp+0x4]
add edi, ebp, 4

tcall loc_405884
endp

proc loc_405884
;mov edx, [edi]
load edx, edi, 1

;mov esi, [ecx+0x3c]
add tmpadr, ecx, 60
load esi, tmpadr, 1

;cmp edx, 0xffffffff
cmoveq edx, -1, tmpcnd, 0, 1

;lea eax, [edx+esi]
add eax, edx, esi

;jnz short loc_405895
ctcallnz tmpcnd, loc_405895

tcall loc_405891
endp

proc loc_405891
;xor eax, eax
xor eax, eax, eax

;jmp short loc_4058B7
tcall loc_4058B7
endp

proc loc_405895
;cmp eax, esi
cmovult eax, esi, tmpcnd, 0, 1

;jb short loc_4058D9
ctcallz tmpcnd, loc_4058D9

tcall loc_405899
endp

proc loc_405899
;cmp eax, [ecx+0x28]
add tmpadr, ecx, 40
load tmp1, tmpadr, 1
cmovult eax, tmp1, tmpcnd, 0, 1

;jae short loc_4058D9
ctcallnz tmpcnd, loc_4058D9

tcall loc_40589E
endp

proc loc_40589E
;mov dx, [eax]
load16z tmp0, eax, 1
and edx, edx, 0xffff0000
or edx, edx, tmp0

;test dx, dx
and tmpcnd, edx, 0xffff

;lea esi, [edx+0x1]
add esi, edx, 1

;mov [eax], si
store16 esi, eax, 1

;jnz short loc_4058B7
ctcallnz tmpcnd, loc_4058B7

tcall loc_4058AC
endp

proc loc_4058AC
;mov edx, [ecx+0x3c]
add tmpadr, ecx, 60
load edx, tmpadr, 1

;mov esi, [eax+0x4]
add tmpadr, eax, 4
load esi, tmpadr, 1

;add esi, edx
add esi, esi, edx

;mov [eax+0x4], esi
add tmpadr, eax, 4
store esi, tmpadr, 1

tcall loc_4058B7
endp

proc loc_4058B7
;mov [edi], eax
store eax, edi, 1

;inc ebx
add ebx, ebx, 1

;add edi, 0xc
add edi, edi, 12

;cmp ebx, 0x2
cmovslt ebx, 2, tmpcnd, 0, 1

;jl short loc_405884
ctcallz tmpcnd, loc_405884

tcall loc_4058C2
endp

proc loc_4058C2
;mov eax, [ecx+0x3c]
add tmpadr, ecx, 60
load eax, tmpadr, 1

;add ebp, 0x50
add ebp, ebp, 80

;cmp eax, ebp
cmovugt eax, ebp, tmpcnd, 0, 1

;ja short loc_40587F
ctcallz tmpcnd, loc_40587F

tcall loc_4058CC
endp

proc loc_4058CC
;pop edi
POP edi

;pop esi
POP esi

;pop ebp
POP ebp

;mov eax, 0x1
mov eax, 0x1

;pop ebx
POP ebx

;add esp, 0x10
add esp, esp, 16

;ret
POP tmp1
tcall tmp1
endp

proc loc_4058D9
;pop edi
POP edi

;pop esi
POP esi

;pop ebp
POP ebp

;xor eax, eax
xor eax, eax, eax

;pop ebx
POP ebx

;add esp, 0x10
add esp, esp, 16

;ret
POP tmp1
tcall tmp1
endp

proc loc_405910
;push ebx
PUSH ebx

;mov bl, [esp+0x8]
add tmpadr, esp, 8
load8z tmp0, tmpadr, 4
and ebx, ebx, 0xffffff00
or ebx, ebx, tmp0

;push esi
PUSH esi

;xor eax, eax
xor eax, eax, eax

;mov esi, ecx
mov esi, ecx

;push edi
PUSH edi

;mov ecx, [loc_42A2E0]
load ecx, loc_42A2E0, 4

;test bl, bl
and tmp1, ebx, ebx
and eflags, eflags, ~ZF
and tmp0, tmp1, 0xff
cmovz tmp0, tmp0, ZF, 0
or eflags, eflags, tmp0

;setnz al
and tmp1, eflags, ZF
cmovz tmp1, tmp1, 1, 0
and eax, eax, 0xffffff00
or eax, eax, tmp1

;shl eax, 0x7
shl eax, eax, 7

;mov edi, ecx
mov edi, ecx

;and esi, 0xff
and esi, esi, 0xff

;add edi, eax
add edi, edi, eax

;xor eax, eax
xor eax, eax, eax

;and edx, 0xff
and edx, edx, 0xff

;mov al, [esi+edi+0x50]
add tmpadr, esi, edi
add tmpadr, tmpadr, 80
load8z tmp0, tmpadr, 1
and eax, eax, 0xffffff00
or eax, eax, tmp0

;shl eax, 0x7
shl eax, eax, 7

;add eax, edx
add eax, eax, edx

;mov edx, [ecx+0x2c]
add tmpadr, ecx, 44
load edx, tmpadr, 1

;mov ax, [edx+eax*2]
shl tmpadr, eax, 1
add tmpadr, tmpadr, edx
load16z tmp0, tmpadr, 1
and eax, eax, 0xffff0000
or eax, eax, tmp0

;cmp ax, 0xffff
sub tmp1, eax, -1
and tmpcnd, tmp1, 0xffff

;jnz short loc_405959
ctcallnz tmpcnd, loc_405959

tcall loc_405951
endp

proc loc_405951
;pop edi
POP edi

;pop esi
POP esi

;xor eax, eax
xor eax, eax, eax

;pop ebx
POP ebx

;ret 0x4
POP tmp1
add esp, esp, 4
tcall tmp1
endp

proc loc_405959
;test bl, bl
and tmpcnd, ebx, 0xff

;jz short loc_405976
ctcallz tmpcnd, loc_405976

tcall loc_40595D
endp

proc loc_40595D
;and eax, 0xffff
and eax, eax, 0xffff

;pop edi
POP edi

;pop esi
POP esi

;pop ebx
POP ebx

;lea edx, [eax+eax*4]
shl tmpadr, eax, 2
add edx, tmpadr, eax

;shl edx, 0x5
shl edx, edx, 5

;add edx, eax
add edx, edx, eax

;mov eax, [ecx+0x34]
add tmpadr, ecx, 52
load eax, tmpadr, 1

;lea eax, [eax+edx*4]
shl tmpadr, edx, 2
add eax, tmpadr, eax

;ret 0x4
POP tmp1
add esp, esp, 4
tcall tmp1
endp

proc loc_405976
;mov ecx, [ecx+0x30]
add tmpadr, ecx, 48
load ecx, tmpadr, 1

;and eax, 0xffff
and eax, eax, 0xffff

;pop edi
POP edi

;pop esi
POP esi

;lea edx, [eax+eax*4]
shl tmpadr, eax, 2
add edx, tmpadr, eax

;pop ebx
POP ebx

;lea eax, [eax+edx*4]
shl tmpadr, edx, 2
add eax, tmpadr, eax

;lea eax, [ecx+eax*4]
shl tmpadr, eax, 2
add eax, tmpadr, ecx

;ret 0x4
POP tmp1
add esp, esp, 4
tcall tmp1
endp

proc loc_405990
;sub esp, 0x8
sub esp, esp, 8

;push ebx
PUSH ebx

;push ebp
PUSH ebp

;push esi
PUSH esi

;push edi
PUSH edi

;xor ebx, ebx
xor ebx, ebx, ebx

;mov ecx, 0x20
mov ecx, 0x20

;xor eax, eax
xor eax, eax, eax

;mov edi, loc_42A2FC
mov edi, loc_42A2FC

;mov [loc_42A2F8], ebx
store ebx, loc_42A2F8, 4

;mov esi, loc_42A37C
mov esi, loc_42A37C

;rep stosd
REP_STOSD

;mov ecx, 0x20
mov ecx, 0x20

;or eax, 0xffffffff
or eax, eax, 0xffffffff

;mov edi, loc_42A37C
mov edi, loc_42A37C

;rep stosd
REP_STOSD

;mov ecx, 0x20
mov ecx, 0x20

;mov edi, loc_42A3FC
mov edi, loc_42A3FC

;rep movsd
REP_MOVSD

;mov ecx, 0x20
mov ecx, 0x20

;mov esi, loc_42A37C
mov esi, loc_42A37C

;mov edi, loc_42A47C
mov edi, loc_42A47C

;rep movsd
REP_MOVSD

;mov ecx, 0x81
mov ecx, 0x81

;mov esi, loc_42A2F8
mov esi, loc_42A2F8

;mov edi, loc_42A4FC
mov edi, loc_42A4FC

;rep movsd
REP_MOVSD

;mov ecx, 0x81
mov ecx, 0x81

;mov esi, loc_42A2F8
mov esi, loc_42A2F8

;mov edi, loc_42A700
mov edi, loc_42A700

;rep movsd
REP_MOVSD

;mov ecx, 0x4
mov ecx, 0x4

;call loc_408840
PUSH loc_405A0A
tcall loc_408840
endp

proc loc_405A0A
;mov ecx, 0x2
mov ecx, 0x2

;call loc_408610
PUSH loc_405A14
tcall loc_408610
endp

proc loc_405A14
;xor edx, edx
xor edx, edx, edx

;mov [loc_42BA08], ebx
store ebx, loc_42BA08, 4

;mov [esp+0x10], edx
add tmpadr, esp, 16
store edx, tmpadr, 4

;mov ebp, loc_42A910
mov ebp, loc_42A910

tcall loc_405A25
endp

proc loc_405A25
;mov ecx, 0x20
mov ecx, 0x20

;xor eax, eax
xor eax, eax, eax

;lea edi, [ebp+0x79]
add edi, ebp, 121

;mov esi, [loc_42A2F4]
load esi, loc_42A2F4, 4

;rep stosd
REP_STOSD

;lea eax, [ebp-0x8]
add eax, ebp, -8

;mov cl, [edx+loc_41B6A8]
mov tmpadr, loc_41B6A8
add tmpadr, tmpadr, edx
load8z tmp0, tmpadr, 1
and ecx, ecx, 0xffffff00
or ecx, ecx, tmp0

;mov [ebp-0x4], eax
add tmpadr, ebp, -4
store eax, tmpadr, 4

;mov [ebp+0x52], cl
add tmpadr, ebp, 82
store8 ecx, tmpadr, 2

;mov [eax], eax
store eax, eax, 1

;lea eax, [ebp+0x8]
add eax, ebp, 8

;mov [ebp+0x4], ebp
add tmpadr, ebp, 4
store ebp, tmpadr, 4

;mov [ebp], ebp
store ebp, ebp, 4

;mov [ebp+0xc], eax
add tmpadr, ebp, 12
store eax, tmpadr, 4

;mov [eax], eax
store eax, eax, 1

;mov al, [edx+loc_41B698]
mov tmpadr, loc_41B698
add tmpadr, tmpadr, edx
load8z tmp0, tmpadr, 1
and eax, eax, 0xffffff00
or eax, eax, tmp0

;mov ecx, [loc_42A2EC]
load ecx, loc_42A2EC, 4

;mov [ebp+0x50], al
add tmpadr, ebp, 80
store8 eax, tmpadr, 4

;mov eax, 0x43ec3871
mov eax, 0x43ec3871

;lea edx, [ebp+0x59]
add edx, ebp, 89

;mov [ebp+0x34], eax
add tmpadr, ebp, 52
store eax, tmpadr, 4

;mov [ebp+0x38], eax
add tmpadr, ebp, 56
store eax, tmpadr, 4

;mov eax, [loc_42A2E8]
load eax, loc_42A2E8, 4

;mov edi, edx
mov edi, edx

;mov edx, [loc_42A2F0]
load edx, loc_42A2F0, 4

;cmp ebp, loc_42A910
mov tmp1, loc_42A910
cmoveq ebp, tmp1, tmpcnd, 0, 1

;mov [ebp+0x10], ebx
add tmpadr, ebp, 16
store ebx, tmpadr, 4

;mov [edi], eax
store eax, edi, 1

;mov [ebp+0x14], ebx
add tmpadr, ebp, 20
store ebx, tmpadr, 4

;mov [ebp+0x51], bl
add tmpadr, ebp, 81
store8 ebx, tmpadr, 1

;mov [ebp+0x4f], bl
add tmpadr, ebp, 79
store8 ebx, tmpadr, 1

;mov [edi+0x4], ecx
add tmpadr, edi, 4
store ecx, tmpadr, 1

;mov dword [ebp+0x1c], 0x44fa0000
add tmpadr, ebp, 28
mov tmp1, 0x44fa0000
store tmp1, tmpadr, 4

;mov [ebp+0x20], ebx
add tmpadr, ebp, 32
store ebx, tmpadr, 4

;mov [ebp+0x24], ebx
add tmpadr, ebp, 36
store ebx, tmpadr, 4

;mov [edi+0x8], edx
add tmpadr, edi, 8
store edx, tmpadr, 1

;mov [ebp+0x28], ebx
add tmpadr, ebp, 40
store ebx, tmpadr, 4

;mov dword [ebp+0x2c], 0x3f800000
add tmpadr, ebp, 44
mov tmp1, 0x3f800000
store tmp1, tmpadr, 4

;mov dword [ebp+0x30], 0x3f1eb867
add tmpadr, ebp, 48
mov tmp1, 0x3f1eb867
store tmp1, tmpadr, 4

;mov [edi+0xc], esi
add tmpadr, edi, 12
store esi, tmpadr, 1

;lea edi, [ebp+0x69]
add edi, ebp, 105

;mov [ebp+0x4c], bl
add tmpadr, ebp, 76
store8 ebx, tmpadr, 4

;mov [ebp+0x40], ebx
add tmpadr, ebp, 64
store ebx, tmpadr, 4

;mov [edi], eax
store eax, edi, 1

;mov [ebp+0x3c], ebx
add tmpadr, ebp, 60
store ebx, tmpadr, 4

;mov [ebp+0x54], bl
add tmpadr, ebp, 84
store8 ebx, tmpadr, 4

;mov [ebp+0x53], bl
add tmpadr, ebp, 83
store8 ebx, tmpadr, 1

;mov [edi+0x4], ecx
add tmpadr, edi, 4
store ecx, tmpadr, 1

;mov [ebp+0x48], ebx
add tmpadr, ebp, 72
store ebx, tmpadr, 4

;mov [ebp+0x4e], bl
add tmpadr, ebp, 78
store8 ebx, tmpadr, 2

;mov [ebp+0x4d], bl
add tmpadr, ebp, 77
store8 ebx, tmpadr, 1

;mov [edi+0x8], edx
add tmpadr, edi, 8
store edx, tmpadr, 1

;mov [ebp+0x55], bl
add tmpadr, ebp, 85
store8 ebx, tmpadr, 1

;mov [ebp+0x58], bl
add tmpadr, ebp, 88
store8 ebx, tmpadr, 4

;mov [ebp+0x57], bl
add tmpadr, ebp, 87
store8 ebx, tmpadr, 1

;mov [edi+0xc], esi
add tmpadr, edi, 12
store esi, tmpadr, 1

;jz short loc_405B01
ctcallz tmpcnd, loc_405B01

tcall loc_405AEC
endp

proc loc_405AEC
;cmp ebp, loc_42B950
mov tmp1, loc_42B950
cmoveq ebp, tmp1, tmpcnd, 0, 1

;jz short loc_405B01
ctcallz tmpcnd, loc_405B01

tcall loc_405AF4
endp

proc loc_405AF4
;mov esi, loc_42A2F8
mov esi, loc_42A2F8

;mov [ebp+0x56], bl
add tmpadr, ebp, 86
store8 ebx, tmpadr, 2

;mov [ebp+0x18], esi
add tmpadr, ebp, 24
store esi, tmpadr, 4

;jmp short loc_405B11
tcall loc_405B11
endp

proc loc_405B01
;mov dword [ebp+0x18], loc_42A4FC
add tmpadr, ebp, 24
mov tmp1, loc_42A4FC
store tmp1, tmpadr, 4

;mov byte [ebp+0x56], 0x1
add tmpadr, ebp, 86
mov tmp1, 0x1
store8 tmp1, tmpadr, 2

;mov esi, loc_42A2F8
mov esi, loc_42A2F8

tcall loc_405B11
endp

proc loc_405B11
;mov al, [ebp+0x56]
add tmpadr, ebp, 86
load8z tmp0, tmpadr, 2
and eax, eax, 0xffffff00
or eax, eax, tmp0

;xor dl, dl
and edx, edx, 0xffffff00

;push eax
PUSH eax

;xor cl, cl
and ecx, ecx, 0xffffff00

;call loc_405910
PUSH loc_405B1E
tcall loc_405910
endp

proc loc_405B1E
;mov cl, [ebp+0x56]
add tmpadr, ebp, 86
load8z tmp0, tmpadr, 2
and ecx, ecx, 0xffffff00
or ecx, ecx, tmp0

;cmp cl, bl
and eflags, eflags, ~(CF|ZF)
and tmp3, ecx, 0xff
and tmp5, ebx, 0xff
cmovult tmp3, tmp5, tmp3, CF, 0
or eflags, eflags, tmp3
sub tmp1, ecx, ebx
and tmp0, tmp1, 0xff
cmovz tmp0, tmp0, ZF, 0
or eflags, eflags, tmp0

;jz short loc_405B6E
and tmp1, eflags, ZF
ctcallnz tmp1, loc_405B6E

tcall loc_405B25
endp

proc loc_405B25
;jbe short loc_405B69
and tmp1, eflags, ZF | CF
ctcallnz tmp1, loc_405B69

tcall loc_405B27
endp

proc loc_405B27
;cmp cl, 0x2
and eflags, eflags, ~(CF|ZF)
and tmp3, ecx, 0xff
cmovult tmp3, 0x2, tmp3, CF, 0
or eflags, eflags, tmp3
sub tmp1, ecx, 2
and tmp0, tmp1, 0xff
cmovz tmp0, tmp0, ZF, 0
or eflags, eflags, tmp0

;ja short loc_405B69
and tmp1, eflags, ZF | CF
ctcallz tmp1, loc_405B69

tcall loc_405B2C
endp

proc loc_405B2C
;mov [esp+0x14], cl
add tmpadr, esp, 20
store8 ecx, tmpadr, 4

;mov [ebp+0x14], eax
add tmpadr, ebp, 20
store eax, tmpadr, 4

;mov eax, [esp+0x14]
add tmpadr, esp, 20
load eax, tmpadr, 4

;mov [ebp+0x10], ebx
add tmpadr, ebp, 16
store ebx, tmpadr, 4

;and eax, 0xff
and eax, eax, 0xff

;mov ecx, eax
mov ecx, eax

;shl ecx, 0x7
shl ecx, ecx, 7

;add ecx, eax
add ecx, ecx, eax

;mov eax, [ecx*4+loc_42A2F8]
mov tmpadr, loc_42A2F8
shl tmp0, ecx, 2
add tmpadr, tmpadr, tmp0
load eax, tmpadr, 4

;cmp eax, ebx
cmoveq eax, ebx, tmpcnd, 0, 1

;lea edi, [ecx*4+loc_42A2F8]
mov tmpadr, loc_42A2F8
shl tmp0, ecx, 2
add edi, tmpadr, tmp0

;mov [ebp+0x18], edi
add tmpadr, ebp, 24
store edi, tmpadr, 4

;jz short loc_405B77
ctcallz tmpcnd, loc_405B77

tcall loc_405B5B
endp

proc loc_405B5B
;mov ecx, 0x81
mov ecx, 0x81

;mov esi, loc_42A2F8
mov esi, loc_42A2F8

;rep movsd
REP_MOVSD

;jmp short loc_405B77
tcall loc_405B77
endp

proc loc_405B69
;mov [ebp+0x10], ebx
add tmpadr, ebp, 16
store ebx, tmpadr, 4

;jmp short loc_405B71
tcall loc_405B71
endp

proc loc_405B6E
;mov [ebp+0x10], eax
add tmpadr, ebp, 16
store eax, tmpadr, 4

tcall loc_405B71
endp

proc loc_405B71
;mov [ebp+0x14], ebx
add tmpadr, ebp, 20
store ebx, tmpadr, 4

;mov [ebp+0x18], esi
add tmpadr, ebp, 24
store esi, tmpadr, 4

tcall loc_405B77
endp

proc loc_405B77
;mov edx, [esp+0x10]
add tmpadr, esp, 16
load edx, tmpadr, 4

;mov dword [ebp+0x44], 0x3da14285
add tmpadr, ebp, 68
mov tmp1, 0x3da14285
store tmp1, tmpadr, 4

;add ebp, 0x104
add ebp, ebp, 260

;inc edx
add edx, edx, 1

;cmp ebp, loc_42B950
mov tmp1, loc_42B950
cmovslt ebp, tmp1, tmpcnd, 0, 1

;mov [esp+0x10], edx
add tmpadr, esp, 16
store edx, tmpadr, 4

;jl near loc_405A25
ctcallz tmpcnd, loc_405A25

tcall loc_405B99
endp

proc loc_405B99
;mov dword [loc_41B6B8], 0x3f4ccccd
mov tmp1, 0x3f4ccccd
store tmp1, loc_41B6B8, 4

;mov dword [loc_41B6BC], 0x3f800000
mov tmp1, 0x3f800000
store tmp1, loc_41B6BC, 4

;mov dword [loc_41B6FC], 0x3f4ccccd
mov tmp1, 0x3f4ccccd
store tmp1, loc_41B6FC, 4

;xor ecx, ecx
xor ecx, ecx, ecx

;mov esi, 0x7f7f
mov esi, 0x7f7f

tcall loc_405BBE
endp

proc loc_405BBE
;cmp ecx, 0x9
and eflags, eflags, ~(ZF|SF|OF)
cmovslt ecx, -2147483639, tmp3, OF, 0
or eflags, eflags, tmp3
sub tmp1, ecx, 9
cmovz tmp1, tmp0, ZF, 0
or eflags, eflags, tmp0
and tmp0, tmp1, 0x80000000
cmovz tmp0, tmp0, 0, SF
or eflags, eflags, tmp0

;jge short loc_405BD3
lshr tmp1, eflags, OF_SHIFT - SF_SHIFT
xor tmp1, tmp1, eflags
and tmp1, tmp1, SF
ctcallz tmp1, loc_405BD3

tcall loc_405BC3
endp

proc loc_405BC3
;mov edx, ecx
mov edx, ecx

;shl edx, 0x6
shl edx, edx, 6

;add edx, ecx
add edx, edx, ecx

;lea edx, [edx*4+loc_42AA0C]
mov tmpadr, loc_42AA0C
shl tmp0, edx, 2
add edx, tmpadr, tmp0

;jmp short loc_405BEA
tcall loc_405BEA
endp

proc loc_405BD3
;jnz short loc_405BDC
and tmp1, eflags, ZF
ctcallz tmp1, loc_405BDC

tcall loc_405BD5
endp

proc loc_405BD5
;mov edx, loc_42A908
mov edx, loc_42A908

;jmp short loc_405BEA
tcall loc_405BEA
endp

proc loc_405BDC
;mov eax, ecx
mov eax, ecx

;shl eax, 0x6
shl eax, eax, 6

;add eax, ecx
add eax, eax, ecx

;lea edx, [eax*4+loc_42A908]
mov tmpadr, loc_42A908
shl tmp0, eax, 2
add edx, tmpadr, tmp0

tcall loc_405BEA
endp

proc loc_405BEA
;lea eax, [ecx+ecx*2]
shl tmpadr, ecx, 1
add eax, tmpadr, ecx

;shl eax, 0x2
shl eax, eax, 2

;inc ecx
add ecx, ecx, 1

;mov [eax+loc_42B948], edx
mov tmpadr, loc_42B948
add tmpadr, tmpadr, eax
store edx, tmpadr, 1

;mov [eax+loc_42B94E], si
mov tmpadr, loc_42B94E
add tmpadr, tmpadr, eax
store16 esi, tmpadr, 1

;mov [eax+loc_42B94C], si
mov tmpadr, loc_42B94C
add tmpadr, tmpadr, eax
store16 esi, tmpadr, 1

;cmp ecx, 0x10
cmovslt ecx, 16, tmpcnd, 0, 1

;mov [eax+loc_42B950], bx
mov tmpadr, loc_42B950
add tmpadr, tmpadr, eax
store16 ebx, tmpadr, 1

;jl short loc_405BBE
ctcallz tmpcnd, loc_405BBE

tcall loc_405C11
endp

proc loc_405C11
;pop edi
POP edi

;pop esi
POP esi

;pop ebp
POP ebp

;pop ebx
POP ebx

;add esp, 0x8
add esp, esp, 8

;ret
POP tmp1
tcall tmp1
endp

proc loc_405C80
;push esi
PUSH esi

;push edi
PUSH edi

;mov edi, [ecx+0x18]
add tmpadr, ecx, 24
load edi, tmpadr, 1

;test edi, edi
mov tmpcnd, edi

;jz short loc_405CA7
ctcallz tmpcnd, loc_405CA7

tcall loc_405C89
endp

proc loc_405C89
;lea esi, [edi+0x3]
add esi, edi, 3

;xor eax, eax
xor eax, eax, eax

tcall loc_405C8E
endp

proc loc_405C8E
;mov cl, [esi]
load8z tmp0, esi, 1
and ecx, ecx, 0xffffff00
or ecx, ecx, tmp0

;inc esi
add esi, esi, 1

;cmp cl, dl
and eflags, eflags, ~CF
and tmp3, ecx, 0xff
and tmp5, edx, 0xff
cmovult tmp3, tmp5, tmp3, CF, 0
or eflags, eflags, tmp3
sub tmp1, ecx, edx

;jae short loc_405CA0
and tmp1, eflags, CF
ctcallz tmp1, loc_405CA0

tcall loc_405C95
endp

proc loc_405C95
;inc eax
add eax, eax, 1

;cmp eax, 0x10
cmovslt eax, 16, tmpcnd, 0, 1

;jl short loc_405C8E
ctcallz tmpcnd, loc_405C8E

tcall loc_405C9B
endp

proc loc_405C9B
;pop edi
POP edi

;xor eax, eax
xor eax, eax, eax

;pop esi
POP esi

;ret
POP tmp1
tcall tmp1
endp

proc loc_405CA0
;mov eax, [edi+eax*4+0x14]
shl tmpadr, eax, 2
add tmpadr, tmpadr, edi
add tmpadr, tmpadr, 20
load eax, tmpadr, 1

;pop edi
POP edi

;pop esi
POP esi

;ret
POP tmp1
tcall tmp1
endp

proc loc_405CA7
;mov ecx, [ecx+0x1c]
add tmpadr, ecx, 28
load ecx, tmpadr, 1

;test ecx, ecx
mov tmpcnd, ecx

;jz short loc_405C9B
ctcallz tmpcnd, loc_405C9B

tcall loc_405CAE
endp

proc loc_405CAE
;and edx, 0xff
and edx, edx, 0xff

;pop edi
POP edi

;pop esi
POP esi

;mov eax, [ecx+edx*4+0x84]
shl tmpadr, edx, 2
add tmpadr, tmpadr, ecx
add tmpadr, tmpadr, 132
load eax, tmpadr, 1

;ret
POP tmp1
tcall tmp1
endp

proc loc_405CC0
;push ebx
PUSH ebx

;mov bl, [esp+0x8]
add tmpadr, esp, 8
load8z tmp0, tmpadr, 4
and ebx, ebx, 0xffffff00
or ebx, ebx, tmp0

;push ebp
PUSH ebp

;push esi
PUSH esi

;push edi
PUSH edi

;xor esi, esi
xor esi, esi, esi

;lea eax, [ecx+0x4]
add eax, ecx, 4

;mov edi, edx
mov edi, edx

;mov ebp, 0x2
mov ebp, 0x2

tcall loc_405CD4
endp

proc loc_405CD4
;cmp [eax+0x8], bl
add tmpadr, eax, 8
load8z tmp1, tmpadr, 1
and eflags, eflags, ~(CF|ZF)
and tmp3, tmp1, 0xff
and tmp5, ebx, 0xff
cmovult tmp3, tmp5, tmp3, CF, 0
or eflags, eflags, tmp3
sub tmp1, tmp1, ebx
and tmp0, tmp1, 0xff
cmovz tmp0, tmp0, ZF, 0
or eflags, eflags, tmp0

;ja short loc_405CF0
and tmp1, eflags, ZF | CF
ctcallz tmp1, loc_405CF0

tcall loc_405CD9
endp

proc loc_405CD9
;cmp [eax+0xa], bl
add tmpadr, eax, 10
load8z tmp1, tmpadr, 1
and eflags, eflags, ~CF
and tmp3, tmp1, 0xff
and tmp5, ebx, 0xff
cmovult tmp3, tmp5, tmp3, CF, 0
or eflags, eflags, tmp3
sub tmp1, tmp1, ebx

;jb short loc_405CF0
and tmp1, eflags, CF
ctcallnz tmp1, loc_405CF0

tcall loc_405CDE
endp

proc loc_405CDE
;mov ecx, [eax]
load ecx, eax, 1

;test ecx, ecx
mov tmpcnd, ecx

;jz short loc_405CF0
ctcallz tmpcnd, loc_405CF0

tcall loc_405CE4
endp

proc loc_405CE4
;cmp dword [ecx+0x4], 0x0
add tmpadr, ecx, 4
load tmp1, tmpadr, 1
cmoveq tmp1, 0, tmpcnd, 0, 1

;jz short loc_405CF0
ctcallz tmpcnd, loc_405CF0

tcall loc_405CEA
endp

proc loc_405CEA
;mov [edi], eax
store eax, edi, 1

;inc esi
add esi, esi, 1

;add edi, 0x4
add edi, edi, 4

tcall loc_405CF0
endp

proc loc_405CF0
;add eax, 0xc
add eax, eax, 12

;dec ebp
sub ebp, ebp, 1
mov tmpcnd, ebp

;jnz short loc_405CD4
ctcallnz tmpcnd, loc_405CD4

tcall loc_405CF6
endp

proc loc_405CF6
;cmp esi, 0x2
cmovslt esi, 2, tmpcnd, 0, 1

;jge short loc_405D09
ctcallnz tmpcnd, loc_405D09

tcall loc_405CFB
endp

proc loc_405CFB
;mov ecx, 0x2
mov ecx, 0x2

;lea edi, [edx+esi*4]
shl tmpadr, esi, 2
add edi, tmpadr, edx

;sub ecx, esi
sub ecx, ecx, esi

;xor eax, eax
xor eax, eax, eax

;rep stosd
REP_STOSD

tcall loc_405D09
endp

proc loc_405D09
;pop edi
POP edi

;pop esi
POP esi

;pop ebp
POP ebp

;pop ebx
POP ebx

;ret 0x4
POP tmp1
add esp, esp, 4
tcall tmp1
endp

proc loc_405D10
;mov eax, [esp+0x4]
add tmpadr, esp, 4
load eax, tmpadr, 4

;and edx, 0xff
and edx, edx, 0xff

;and eax, 0xff
and eax, eax, 0xff

;push esi
PUSH esi

;shl eax, 0x7
shl eax, eax, 7

;or eax, edx
or eax, eax, edx

;sub eax, 0x2000
sub eax, eax, 8192

;mov [esp+0x8], eax
add tmpadr, esp, 8
store eax, tmpadr, 4

;fild dword [esp+0x8]
add tmpadr, esp, 8
load tmp1, tmpadr, 4
FILD_INT32 tmp1

;fmul dword [loc_4181E4]
load tmp1, loc_4181E4, 4
FMUL_FLOAT tmp1

;fcom dword [ecx+0x28]
add tmpadr, ecx, 40
load tmp1, tmpadr, 1
FCOM_FLOAT tmp1

;fnstsw ax
FNSTSW_VOID
and eax, eax, 0xffff0000
or eax, eax, tmp0

;test ah, 0x40
and tmpcnd, eax, 0x4000

;jnz near loc_405DCA
ctcallnz tmpcnd, loc_405DCA

tcall loc_405D46
endp

proc loc_405D46
;mov eax, [ecx]
load eax, ecx, 1

;fstp dword [ecx+0x28]
FSTP_FLOAT
add tmpadr, ecx, 40
store tmp0, tmpadr, 1

;cmp eax, ecx
cmoveq eax, ecx, tmpcnd, 0, 1

;jz short loc_405D70
ctcallz tmpcnd, loc_405D70

tcall loc_405D4F
endp

proc loc_405D4F
;fld dword [ecx+0x28]
add tmpadr, ecx, 40
load tmp1, tmpadr, 1
FLD_FLOAT tmp1

;fmul dword [ecx+0x24]
add tmpadr, ecx, 36
load tmp1, tmpadr, 1
FMUL_FLOAT tmp1

;mov edx, [eax+0x10]
add tmpadr, eax, 16
load edx, tmpadr, 1

;fadd dword [eax+0x1c]
add tmpadr, eax, 28
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;fadd dword [ecx+0x30]
add tmpadr, ecx, 48
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;fadd dword [ecx+0x2c]
add tmpadr, ecx, 44
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;fadd dword [loc_42BA08]
load tmp1, loc_42BA08, 4
FADD_FLOAT tmp1

;fstp dword [edx+0x40]
FSTP_FLOAT
add tmpadr, edx, 64
store tmp0, tmpadr, 1

;mov eax, [eax]
load eax, eax, 1

;cmp eax, ecx
cmoveq eax, ecx, tmpcnd, 0, 1

;jnz short loc_405D4F
ctcallnz tmpcnd, loc_405D4F

tcall loc_405D70
endp

proc loc_405D70
;mov eax, [ecx+0x8]
add tmpadr, ecx, 8
load eax, tmpadr, 1

;lea edx, [ecx+0x8]
add edx, ecx, 8

;cmp eax, edx
cmoveq eax, edx, tmpcnd, 0, 1

;jz short loc_405D9B
ctcallz tmpcnd, loc_405D9B

tcall loc_405D7A
endp

proc loc_405D7A
;fld dword [ecx+0x28]
add tmpadr, ecx, 40
load tmp1, tmpadr, 1
FLD_FLOAT tmp1

;fmul dword [ecx+0x24]
add tmpadr, ecx, 36
load tmp1, tmpadr, 1
FMUL_FLOAT tmp1

;mov esi, [eax+0x10]
add tmpadr, eax, 16
load esi, tmpadr, 1

;fadd dword [eax+0x1c]
add tmpadr, eax, 28
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;fadd dword [ecx+0x30]
add tmpadr, ecx, 48
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;fadd dword [ecx+0x2c]
add tmpadr, ecx, 44
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;fadd dword [loc_42BA08]
load tmp1, loc_42BA08, 4
FADD_FLOAT tmp1

;fstp dword [esi+0x40]
FSTP_FLOAT
add tmpadr, esi, 64
store tmp0, tmpadr, 1

;mov eax, [eax]
load eax, eax, 1

;cmp eax, edx
cmoveq eax, edx, tmpcnd, 0, 1

;jnz short loc_405D7A
ctcallnz tmpcnd, loc_405D7A

tcall loc_405D9B
endp

proc loc_405D9B
;mov eax, [ecx+0x10]
add tmpadr, ecx, 16
load eax, tmpadr, 1

;lea edx, [ecx+0x10]
add edx, ecx, 16

;cmp eax, edx
cmoveq eax, edx, tmpcnd, 0, 1

;jz short loc_405DCC
ctcallz tmpcnd, loc_405DCC

tcall loc_405DA5
endp

proc loc_405DA5
;fld dword [ecx+0x28]
add tmpadr, ecx, 40
load tmp1, tmpadr, 1
FLD_FLOAT tmp1

;fmul dword [ecx+0x24]
add tmpadr, ecx, 36
load tmp1, tmpadr, 1
FMUL_FLOAT tmp1

;mov esi, [eax+0x10]
add tmpadr, eax, 16
load esi, tmpadr, 1

;fadd dword [eax+0x1c]
add tmpadr, eax, 28
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;fadd dword [ecx+0x30]
add tmpadr, ecx, 48
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;fadd dword [ecx+0x2c]
add tmpadr, ecx, 44
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;fadd dword [loc_42BA08]
load tmp1, loc_42BA08, 4
FADD_FLOAT tmp1

;fstp dword [esi+0x40]
FSTP_FLOAT
add tmpadr, esi, 64
store tmp0, tmpadr, 1

;mov eax, [eax]
load eax, eax, 1

;cmp eax, edx
cmoveq eax, edx, tmpcnd, 0, 1

;jnz short loc_405DA5
ctcallnz tmpcnd, loc_405DA5

tcall loc_405DC6
endp

proc loc_405DC6
;pop esi
POP esi

;ret 0x4
POP tmp1
add esp, esp, 4
tcall tmp1
endp

proc loc_405DCA
;fstp st0
FSTP_ST 0

tcall loc_405DCC
endp

proc loc_405DCC
;pop esi
POP esi

;ret 0x4
POP tmp1
add esp, esp, 4
tcall tmp1
endp

proc loc_405DD0
;push ebx
PUSH ebx

;push ebp
PUSH ebp

;push esi
PUSH esi

;mov esi, ecx
mov esi, ecx

;mov eax, 0x3f1eb867
mov eax, 0x3f1eb867

;push edi
PUSH edi

;cmp [esi+0x38], eax
add tmpadr, esi, 56
load tmp1, tmpadr, 1
cmoveq tmp1, eax, tmpcnd, 0, 1

;jz short loc_405E45
ctcallz tmpcnd, loc_405E45

tcall loc_405DE0
endp

proc loc_405DE0
;mov [esi+0x38], eax
add tmpadr, esi, 56
store eax, tmpadr, 1

;mov eax, [esi]
load eax, esi, 1

;cmp eax, esi
cmoveq eax, esi, tmpcnd, 0, 1

;jz short loc_405E01
ctcallz tmpcnd, loc_405E01

tcall loc_405DE9
endp

proc loc_405DE9
;fld dword [eax+0x20]
add tmpadr, eax, 32
load tmp1, tmpadr, 1
FLD_FLOAT tmp1

;fmul dword [esi+0x38]
add tmpadr, esi, 56
load tmp1, tmpadr, 1
FMUL_FLOAT tmp1

;mov ecx, [eax+0x10]
add tmpadr, eax, 16
load ecx, tmpadr, 1

;fmul dword [esi+0x34]
add tmpadr, esi, 52
load tmp1, tmpadr, 1
FMUL_FLOAT tmp1

;fstp dword [ecx+0x90]
FSTP_FLOAT
add tmpadr, ecx, 144
store tmp0, tmpadr, 1

;mov eax, [eax]
load eax, eax, 1

;cmp eax, esi
cmoveq eax, esi, tmpcnd, 0, 1

;jnz short loc_405DE9
ctcallnz tmpcnd, loc_405DE9

tcall loc_405E01
endp

proc loc_405E01
;mov eax, [esi+0x8]
add tmpadr, esi, 8
load eax, tmpadr, 1

;lea ecx, [esi+0x8]
add ecx, esi, 8

;cmp eax, ecx
cmoveq eax, ecx, tmpcnd, 0, 1

;jz short loc_405E23
ctcallz tmpcnd, loc_405E23

tcall loc_405E0B
endp

proc loc_405E0B
;fld dword [eax+0x20]
add tmpadr, eax, 32
load tmp1, tmpadr, 1
FLD_FLOAT tmp1

;fmul dword [esi+0x38]
add tmpadr, esi, 56
load tmp1, tmpadr, 1
FMUL_FLOAT tmp1

;mov edx, [eax+0x10]
add tmpadr, eax, 16
load edx, tmpadr, 1

;fmul dword [esi+0x34]
add tmpadr, esi, 52
load tmp1, tmpadr, 1
FMUL_FLOAT tmp1

;fstp dword [edx+0x90]
FSTP_FLOAT
add tmpadr, edx, 144
store tmp0, tmpadr, 1

;mov eax, [eax]
load eax, eax, 1

;cmp eax, ecx
cmoveq eax, ecx, tmpcnd, 0, 1

;jnz short loc_405E0B
ctcallnz tmpcnd, loc_405E0B

tcall loc_405E23
endp

proc loc_405E23
;mov eax, [esi+0x10]
add tmpadr, esi, 16
load eax, tmpadr, 1

;lea ecx, [esi+0x10]
add ecx, esi, 16

;cmp eax, ecx
cmoveq eax, ecx, tmpcnd, 0, 1

;jz short loc_405E45
ctcallz tmpcnd, loc_405E45

tcall loc_405E2D
endp

proc loc_405E2D
;fld dword [eax+0x20]
add tmpadr, eax, 32
load tmp1, tmpadr, 1
FLD_FLOAT tmp1

;fmul dword [esi+0x38]
add tmpadr, esi, 56
load tmp1, tmpadr, 1
FMUL_FLOAT tmp1

;mov edx, [eax+0x10]
add tmpadr, eax, 16
load edx, tmpadr, 1

;fmul dword [esi+0x34]
add tmpadr, esi, 52
load tmp1, tmpadr, 1
FMUL_FLOAT tmp1

;fstp dword [edx+0x90]
FSTP_FLOAT
add tmpadr, edx, 144
store tmp0, tmpadr, 1

;mov eax, [eax]
load eax, eax, 1

;cmp eax, ecx
cmoveq eax, ecx, tmpcnd, 0, 1

;jnz short loc_405E2D
ctcallnz tmpcnd, loc_405E2D

tcall loc_405E45
endp

proc loc_405E45
;mov al, [esi+0x54]
add tmpadr, esi, 84
load8z tmp0, tmpadr, 1
and eax, eax, 0xffffff00
or eax, eax, tmp0

;xor ebx, ebx
xor ebx, ebx, ebx

;cmp al, bl
sub tmp1, eax, ebx
and tmpcnd, tmp1, 0xff

;jz short loc_405EAD
ctcallz tmpcnd, loc_405EAD

tcall loc_405E4E
endp

proc loc_405E4E
;mov edi, [esi]
load edi, esi, 1

;mov [esi+0x54], bl
add tmpadr, esi, 84
store8 ebx, tmpadr, 1

;cmp edi, esi
cmoveq edi, esi, tmpcnd, 0, 1

;jz short loc_405E6D
ctcallz tmpcnd, loc_405E6D

tcall loc_405E57
endp

proc loc_405E57
;mov ecx, [edi+0x10]
add tmpadr, edi, 16
load ecx, tmpadr, 1

;push 0x1
PUSH 0x1

;push edi
PUSH edi

;mov edx, esi
mov edx, esi

;add ecx, 0x7c
add ecx, ecx, 124

;call loc_409880
PUSH loc_405E67
tcall loc_409880
endp

proc loc_405E67
;mov edi, [edi]
load edi, edi, 1

;cmp edi, esi
cmoveq edi, esi, tmpcnd, 0, 1

;jnz short loc_405E57
ctcallnz tmpcnd, loc_405E57

tcall loc_405E6D
endp

proc loc_405E6D
;mov edi, [esi+0x8]
add tmpadr, esi, 8
load edi, tmpadr, 1

;lea ebp, [esi+0x8]
add ebp, esi, 8

;cmp edi, ebp
cmoveq edi, ebp, tmpcnd, 0, 1

;jz short loc_405E8D
ctcallz tmpcnd, loc_405E8D

tcall loc_405E77
endp

proc loc_405E77
;mov ecx, [edi+0x10]
add tmpadr, edi, 16
load ecx, tmpadr, 1

;push 0x1
PUSH 0x1

;push edi
PUSH edi

;mov edx, esi
mov edx, esi

;add ecx, 0x7c
add ecx, ecx, 124

;call loc_409880
PUSH loc_405E87
tcall loc_409880
endp

proc loc_405E87
;mov edi, [edi]
load edi, edi, 1

;cmp edi, ebp
cmoveq edi, ebp, tmpcnd, 0, 1

;jnz short loc_405E77
ctcallnz tmpcnd, loc_405E77

tcall loc_405E8D
endp

proc loc_405E8D
;mov edi, [esi+0x10]
add tmpadr, esi, 16
load edi, tmpadr, 1

;lea ebp, [esi+0x10]
add ebp, esi, 16

;cmp edi, ebp
cmoveq edi, ebp, tmpcnd, 0, 1

;jz short loc_405EAD
ctcallz tmpcnd, loc_405EAD

tcall loc_405E97
endp

proc loc_405E97
;mov ecx, [edi+0x10]
add tmpadr, edi, 16
load ecx, tmpadr, 1

;push 0x1
PUSH 0x1

;push edi
PUSH edi

;mov edx, esi
mov edx, esi

;add ecx, 0x7c
add ecx, ecx, 124

;call loc_409880
PUSH loc_405EA7
tcall loc_409880
endp

proc loc_405EA7
;mov edi, [edi]
load edi, edi, 1

;cmp edi, ebp
cmoveq edi, ebp, tmpcnd, 0, 1

;jnz short loc_405E97
ctcallnz tmpcnd, loc_405E97

tcall loc_405EAD
endp

proc loc_405EAD
;mov ecx, [esi+0x34]
add tmpadr, esi, 52
load ecx, tmpadr, 1

;mov eax, 0x3f800000
mov eax, 0x3f800000

;cmp ecx, eax
cmoveq ecx, eax, tmpcnd, 0, 1

;jz short loc_405F1E
ctcallz tmpcnd, loc_405F1E

tcall loc_405EB9
endp

proc loc_405EB9
;mov [esi+0x34], eax
add tmpadr, esi, 52
store eax, tmpadr, 1

;mov eax, [esi]
load eax, esi, 1

;cmp eax, esi
cmoveq eax, esi, tmpcnd, 0, 1

;jz short loc_405EDA
ctcallz tmpcnd, loc_405EDA

tcall loc_405EC2
endp

proc loc_405EC2
;fld dword [eax+0x20]
add tmpadr, eax, 32
load tmp1, tmpadr, 1
FLD_FLOAT tmp1

;fmul dword [esi+0x38]
add tmpadr, esi, 56
load tmp1, tmpadr, 1
FMUL_FLOAT tmp1

;mov ecx, [eax+0x10]
add tmpadr, eax, 16
load ecx, tmpadr, 1

;fmul dword [esi+0x34]
add tmpadr, esi, 52
load tmp1, tmpadr, 1
FMUL_FLOAT tmp1

;fstp dword [ecx+0x90]
FSTP_FLOAT
add tmpadr, ecx, 144
store tmp0, tmpadr, 1

;mov eax, [eax]
load eax, eax, 1

;cmp eax, esi
cmoveq eax, esi, tmpcnd, 0, 1

;jnz short loc_405EC2
ctcallnz tmpcnd, loc_405EC2

tcall loc_405EDA
endp

proc loc_405EDA
;mov eax, [esi+0x8]
add tmpadr, esi, 8
load eax, tmpadr, 1

;lea ecx, [esi+0x8]
add ecx, esi, 8

;cmp eax, ecx
cmoveq eax, ecx, tmpcnd, 0, 1

;jz short loc_405EFC
ctcallz tmpcnd, loc_405EFC

tcall loc_405EE4
endp

proc loc_405EE4
;fld dword [eax+0x20]
add tmpadr, eax, 32
load tmp1, tmpadr, 1
FLD_FLOAT tmp1

;fmul dword [esi+0x38]
add tmpadr, esi, 56
load tmp1, tmpadr, 1
FMUL_FLOAT tmp1

;mov edx, [eax+0x10]
add tmpadr, eax, 16
load edx, tmpadr, 1

;fmul dword [esi+0x34]
add tmpadr, esi, 52
load tmp1, tmpadr, 1
FMUL_FLOAT tmp1

;fstp dword [edx+0x90]
FSTP_FLOAT
add tmpadr, edx, 144
store tmp0, tmpadr, 1

;mov eax, [eax]
load eax, eax, 1

;cmp eax, ecx
cmoveq eax, ecx, tmpcnd, 0, 1

;jnz short loc_405EE4
ctcallnz tmpcnd, loc_405EE4

tcall loc_405EFC
endp

proc loc_405EFC
;mov eax, [esi+0x10]
add tmpadr, esi, 16
load eax, tmpadr, 1

;lea ecx, [esi+0x10]
add ecx, esi, 16

;cmp eax, ecx
cmoveq eax, ecx, tmpcnd, 0, 1

;jz short loc_405F1E
ctcallz tmpcnd, loc_405F1E

tcall loc_405F06
endp

proc loc_405F06
;fld dword [eax+0x20]
add tmpadr, eax, 32
load tmp1, tmpadr, 1
FLD_FLOAT tmp1

;fmul dword [esi+0x38]
add tmpadr, esi, 56
load tmp1, tmpadr, 1
FMUL_FLOAT tmp1

;mov edx, [eax+0x10]
add tmpadr, eax, 16
load edx, tmpadr, 1

;fmul dword [esi+0x34]
add tmpadr, esi, 52
load tmp1, tmpadr, 1
FMUL_FLOAT tmp1

;fstp dword [edx+0x90]
FSTP_FLOAT
add tmpadr, edx, 144
store tmp0, tmpadr, 1

;mov eax, [eax]
load eax, eax, 1

;cmp eax, ecx
cmoveq eax, ecx, tmpcnd, 0, 1

;jnz short loc_405F06
ctcallnz tmpcnd, loc_405F06

tcall loc_405F1E
endp

proc loc_405F1E
;xor dl, dl
and edx, edx, 0xffffff00

;mov ecx, esi
mov ecx, esi

;call loc_401590
PUSH loc_405F27
tcall loc_401590
endp

proc loc_405F27
;cmp [esi+0x5b], bl
add tmpadr, esi, 91
load8z tmp1, tmpadr, 1
sub tmp1, tmp1, ebx
and tmpcnd, tmp1, 0xff

;jz short loc_405F3E
ctcallz tmpcnd, loc_405F3E

tcall loc_405F2C
endp

proc loc_405F2C
;mov edx, loc_4065C0
mov edx, loc_4065C0

;mov ecx, esi
mov ecx, esi

;mov [esi+0x5b], bl
add tmpadr, esi, 91
store8 ebx, tmpadr, 1

;mov [esi+0x44], ebx
add tmpadr, esi, 68
store ebx, tmpadr, 1

;call loc_405FD0
PUSH loc_405F3E
tcall loc_405FD0
endp

proc loc_405F3E
;fld dword [esi+0x28]
add tmpadr, esi, 40
load tmp1, tmpadr, 1
FLD_FLOAT tmp1

;fcomp dword [loc_4181E8]
load tmp1, loc_4181E8, 4
FCOMP_FLOAT tmp1

;fnstsw ax
FNSTSW_VOID
and eax, eax, 0xffff0000
or eax, eax, tmp0

;test ah, 0x40
and tmpcnd, eax, 0x4000

;jnz short loc_405FAA
ctcallnz tmpcnd, loc_405FAA

tcall loc_405F4E
endp

proc loc_405F4E
;mov eax, [esi]
load eax, esi, 1

;mov [esi+0x28], ebx
add tmpadr, esi, 40
store ebx, tmpadr, 1

;cmp eax, esi
cmoveq eax, esi, tmpcnd, 0, 1

;jz short loc_405F78
ctcallz tmpcnd, loc_405F78

tcall loc_405F57
endp

proc loc_405F57
;fld dword [esi+0x24]
add tmpadr, esi, 36
load tmp1, tmpadr, 1
FLD_FLOAT tmp1

;fmul dword [esi+0x28]
add tmpadr, esi, 40
load tmp1, tmpadr, 1
FMUL_FLOAT tmp1

;mov ecx, [eax+0x10]
add tmpadr, eax, 16
load ecx, tmpadr, 1

;fadd dword [eax+0x1c]
add tmpadr, eax, 28
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;fadd dword [loc_42BA08]
load tmp1, loc_42BA08, 4
FADD_FLOAT tmp1

;fadd dword [esi+0x30]
add tmpadr, esi, 48
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;fadd dword [esi+0x2c]
add tmpadr, esi, 44
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;fstp dword [ecx+0x40]
FSTP_FLOAT
add tmpadr, ecx, 64
store tmp0, tmpadr, 1

;mov eax, [eax]
load eax, eax, 1

;cmp eax, esi
cmoveq eax, esi, tmpcnd, 0, 1

;jnz short loc_405F57
ctcallnz tmpcnd, loc_405F57

tcall loc_405F78
endp

proc loc_405F78
;mov edi, [esi+0x8]
add tmpadr, esi, 8
load edi, tmpadr, 1

;lea ebx, [esi+0x8]
add ebx, esi, 8

;cmp edi, ebx
cmoveq edi, ebx, tmpcnd, 0, 1

;jz short loc_405F91
ctcallz tmpcnd, loc_405F91

tcall loc_405F82
endp

proc loc_405F82
;mov edx, edi
mov edx, edi

;mov ecx, esi
mov ecx, esi

;call loc_405FB0
PUSH loc_405F8B
tcall loc_405FB0
endp

proc loc_405F8B
;mov edi, [edi]
load edi, edi, 1

;cmp edi, ebx
cmoveq edi, ebx, tmpcnd, 0, 1

;jnz short loc_405F82
ctcallnz tmpcnd, loc_405F82

tcall loc_405F91
endp

proc loc_405F91
;mov edi, [esi+0x10]
add tmpadr, esi, 16
load edi, tmpadr, 1

;lea ebx, [esi+0x10]
add ebx, esi, 16

;cmp edi, ebx
cmoveq edi, ebx, tmpcnd, 0, 1

;jz short loc_405FAA
ctcallz tmpcnd, loc_405FAA

tcall loc_405F9B
endp

proc loc_405F9B
;mov edx, edi
mov edx, edi

;mov ecx, esi
mov ecx, esi

;call loc_405FB0
PUSH loc_405FA4
tcall loc_405FB0
endp

proc loc_405FA4
;mov edi, [edi]
load edi, edi, 1

;cmp edi, ebx
cmoveq edi, ebx, tmpcnd, 0, 1

;jnz short loc_405F9B
ctcallnz tmpcnd, loc_405F9B

tcall loc_405FAA
endp

proc loc_405FAA
;pop edi
POP edi

;pop esi
POP esi

;pop ebp
POP ebp

;pop ebx
POP ebx

;ret
POP tmp1
tcall tmp1
endp

proc loc_405FB0
;fld dword [ecx+0x28]
add tmpadr, ecx, 40
load tmp1, tmpadr, 1
FLD_FLOAT tmp1

;fmul dword [ecx+0x24]
add tmpadr, ecx, 36
load tmp1, tmpadr, 1
FMUL_FLOAT tmp1

;mov eax, [edx+0x10]
add tmpadr, edx, 16
load eax, tmpadr, 1

;fadd dword [ecx+0x30]
add tmpadr, ecx, 48
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;fadd dword [ecx+0x2c]
add tmpadr, ecx, 44
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;fadd dword [edx+0x1c]
add tmpadr, edx, 28
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;fadd dword [loc_42BA08]
load tmp1, loc_42BA08, 4
FADD_FLOAT tmp1

;fstp dword [eax+0x40]
FSTP_FLOAT
add tmpadr, eax, 64
store tmp0, tmpadr, 1

;ret
POP tmp1
tcall tmp1
endp

proc loc_405FD0
;push ebx
PUSH ebx

;push ebp
PUSH ebp

;push esi
PUSH esi

;mov esi, ecx
mov esi, ecx

;push edi
PUSH edi

;mov ebx, edx
mov ebx, edx

;mov edi, [esi]
load edi, esi, 1

;cmp edi, esi
cmoveq edi, esi, tmpcnd, 0, 1

;jz short loc_405FEA
ctcallz tmpcnd, loc_405FEA

tcall loc_405FDE
endp

proc loc_405FDE
;mov edx, edi
mov edx, edi

;mov ecx, esi
mov ecx, esi

;call ebx
PUSH loc_405FE4
tcall ebx
endp

proc loc_405FE4
;mov edi, [edi]
load edi, edi, 1

;cmp edi, esi
cmoveq edi, esi, tmpcnd, 0, 1

;jnz short loc_405FDE
ctcallnz tmpcnd, loc_405FDE

tcall loc_405FEA
endp

proc loc_405FEA
;mov edi, [esi+0x8]
add tmpadr, esi, 8
load edi, tmpadr, 1

;lea ebp, [esi+0x8]
add ebp, esi, 8

;cmp edi, ebp
cmoveq edi, ebp, tmpcnd, 0, 1

;jz short loc_406000
ctcallz tmpcnd, loc_406000

tcall loc_405FF4
endp

proc loc_405FF4
;mov edx, edi
mov edx, edi

;mov ecx, esi
mov ecx, esi

;call ebx
PUSH loc_405FFA
tcall ebx
endp

proc loc_405FFA
;mov edi, [edi]
load edi, edi, 1

;cmp edi, ebp
cmoveq edi, ebp, tmpcnd, 0, 1

;jnz short loc_405FF4
ctcallnz tmpcnd, loc_405FF4

tcall loc_406000
endp

proc loc_406000
;mov edi, [esi+0x10]
add tmpadr, esi, 16
load edi, tmpadr, 1

;lea ebp, [esi+0x10]
add ebp, esi, 16

;cmp edi, ebp
cmoveq edi, ebp, tmpcnd, 0, 1

;jz short loc_406016
ctcallz tmpcnd, loc_406016

tcall loc_40600A
endp

proc loc_40600A
;mov edx, edi
mov edx, edi

;mov ecx, esi
mov ecx, esi

;call ebx
PUSH loc_406010
tcall ebx
endp

proc loc_406010
;mov edi, [edi]
load edi, edi, 1

;cmp edi, ebp
cmoveq edi, ebp, tmpcnd, 0, 1

;jnz short loc_40600A
ctcallnz tmpcnd, loc_40600A

tcall loc_406016
endp

proc loc_406016
;pop edi
POP edi

;pop esi
POP esi

;pop ebp
POP ebp

;pop ebx
POP ebx

;ret
POP tmp1
tcall tmp1
endp

proc loc_406020
;push ecx
PUSH ecx

;and edx, 0xff
and edx, edx, 0xff

;push esi
PUSH esi

;mov [esp+0x4], edx
add tmpadr, esp, 4
store edx, tmpadr, 4

;fild dword [esp+0x4]
add tmpadr, esp, 4
load tmp1, tmpadr, 4
FILD_INT32 tmp1

;fmul dword [loc_4181E0]
load tmp1, loc_4181E0, 4
FMUL_FLOAT tmp1

;fld st0
FLD_ST 0

;fmulp st1, st0
FMULP_ST 1

;fcom dword [ecx+0x38]
add tmpadr, ecx, 56
load tmp1, tmpadr, 1
FCOM_FLOAT tmp1

;fnstsw ax
FNSTSW_VOID
and eax, eax, 0xffff0000
or eax, eax, tmp0

;test ah, 0x40
and tmpcnd, eax, 0x4000

;jnz short loc_4060AC
ctcallnz tmpcnd, loc_4060AC

tcall loc_406044
endp

proc loc_406044
;mov eax, [ecx]
load eax, ecx, 1

;fstp dword [ecx+0x38]
FSTP_FLOAT
add tmpadr, ecx, 56
store tmp0, tmpadr, 1

;cmp eax, ecx
cmoveq eax, ecx, tmpcnd, 0, 1

;jz short loc_406065
ctcallz tmpcnd, loc_406065

tcall loc_40604D
endp

proc loc_40604D
;fld dword [eax+0x20]
add tmpadr, eax, 32
load tmp1, tmpadr, 1
FLD_FLOAT tmp1

;fmul dword [ecx+0x34]
add tmpadr, ecx, 52
load tmp1, tmpadr, 1
FMUL_FLOAT tmp1

;mov edx, [eax+0x10]
add tmpadr, eax, 16
load edx, tmpadr, 1

;fmul dword [ecx+0x38]
add tmpadr, ecx, 56
load tmp1, tmpadr, 1
FMUL_FLOAT tmp1

;fstp dword [edx+0x90]
FSTP_FLOAT
add tmpadr, edx, 144
store tmp0, tmpadr, 1

;mov eax, [eax]
load eax, eax, 1

;cmp eax, ecx
cmoveq eax, ecx, tmpcnd, 0, 1

;jnz short loc_40604D
ctcallnz tmpcnd, loc_40604D

tcall loc_406065
endp

proc loc_406065
;mov eax, [ecx+0x8]
add tmpadr, ecx, 8
load eax, tmpadr, 1

;lea edx, [ecx+0x8]
add edx, ecx, 8

;cmp eax, edx
cmoveq eax, edx, tmpcnd, 0, 1

;jz short loc_406087
ctcallz tmpcnd, loc_406087

tcall loc_40606F
endp

proc loc_40606F
;fld dword [eax+0x20]
add tmpadr, eax, 32
load tmp1, tmpadr, 1
FLD_FLOAT tmp1

;fmul dword [ecx+0x34]
add tmpadr, ecx, 52
load tmp1, tmpadr, 1
FMUL_FLOAT tmp1

;mov esi, [eax+0x10]
add tmpadr, eax, 16
load esi, tmpadr, 1

;fmul dword [ecx+0x38]
add tmpadr, ecx, 56
load tmp1, tmpadr, 1
FMUL_FLOAT tmp1

;fstp dword [esi+0x90]
FSTP_FLOAT
add tmpadr, esi, 144
store tmp0, tmpadr, 1

;mov eax, [eax]
load eax, eax, 1

;cmp eax, edx
cmoveq eax, edx, tmpcnd, 0, 1

;jnz short loc_40606F
ctcallnz tmpcnd, loc_40606F

tcall loc_406087
endp

proc loc_406087
;mov eax, [ecx+0x10]
add tmpadr, ecx, 16
load eax, tmpadr, 1

;lea edx, [ecx+0x10]
add edx, ecx, 16

;cmp eax, edx
cmoveq eax, edx, tmpcnd, 0, 1

;jz short loc_4060AE
ctcallz tmpcnd, loc_4060AE

tcall loc_406091
endp

proc loc_406091
;fld dword [eax+0x20]
add tmpadr, eax, 32
load tmp1, tmpadr, 1
FLD_FLOAT tmp1

;fmul dword [ecx+0x34]
add tmpadr, ecx, 52
load tmp1, tmpadr, 1
FMUL_FLOAT tmp1

;mov esi, [eax+0x10]
add tmpadr, eax, 16
load esi, tmpadr, 1

;fmul dword [ecx+0x38]
add tmpadr, ecx, 56
load tmp1, tmpadr, 1
FMUL_FLOAT tmp1

;fstp dword [esi+0x90]
FSTP_FLOAT
add tmpadr, esi, 144
store tmp0, tmpadr, 1

;mov eax, [eax]
load eax, eax, 1

;cmp eax, edx
cmoveq eax, edx, tmpcnd, 0, 1

;jnz short loc_406091
ctcallnz tmpcnd, loc_406091

tcall loc_4060A9
endp

proc loc_4060A9
;pop esi
POP esi

;pop ecx
POP ecx

;ret
POP tmp1
tcall tmp1
endp

proc loc_4060AC
;fstp st0
FSTP_ST 0

tcall loc_4060AE
endp

proc loc_4060AE
;pop esi
POP esi

;pop ecx
POP ecx

;ret
POP tmp1
tcall tmp1
endp

proc loc_4060C0
;push ebx
PUSH ebx

;push esi
PUSH esi

;mov esi, ecx
mov esi, ecx

;sub dl, 0x40
sub tmp3, edx, 64
ins8ll edx, edx, tmp3

;push edi
PUSH edi

;cmp [esi+0x54], dl
add tmpadr, esi, 84
load8z tmp1, tmpadr, 1
sub tmp1, tmp1, edx
and tmpcnd, tmp1, 0xff

;jz short loc_40612C
ctcallz tmpcnd, loc_40612C

tcall loc_4060CD
endp

proc loc_4060CD
;mov edi, [esi]
load edi, esi, 1

;mov [esi+0x54], dl
add tmpadr, esi, 84
store8 edx, tmpadr, 1

;cmp edi, esi
cmoveq edi, esi, tmpcnd, 0, 1

;jz short loc_4060EC
ctcallz tmpcnd, loc_4060EC

tcall loc_4060D6
endp

proc loc_4060D6
;mov ecx, [edi+0x10]
add tmpadr, edi, 16
load ecx, tmpadr, 1

;push 0x1
PUSH 0x1

;push edi
PUSH edi

;mov edx, esi
mov edx, esi

;add ecx, 0x7c
add ecx, ecx, 124

;call loc_409880
PUSH loc_4060E6
tcall loc_409880
endp

proc loc_4060E6
;mov edi, [edi]
load edi, edi, 1

;cmp edi, esi
cmoveq edi, esi, tmpcnd, 0, 1

;jnz short loc_4060D6
ctcallnz tmpcnd, loc_4060D6

tcall loc_4060EC
endp

proc loc_4060EC
;mov edi, [esi+0x8]
add tmpadr, esi, 8
load edi, tmpadr, 1

;lea ebx, [esi+0x8]
add ebx, esi, 8

;cmp edi, ebx
cmoveq edi, ebx, tmpcnd, 0, 1

;jz short loc_40610C
ctcallz tmpcnd, loc_40610C

tcall loc_4060F6
endp

proc loc_4060F6
;mov ecx, [edi+0x10]
add tmpadr, edi, 16
load ecx, tmpadr, 1

;push 0x1
PUSH 0x1

;push edi
PUSH edi

;mov edx, esi
mov edx, esi

;add ecx, 0x7c
add ecx, ecx, 124

;call loc_409880
PUSH loc_406106
tcall loc_409880
endp

proc loc_406106
;mov edi, [edi]
load edi, edi, 1

;cmp edi, ebx
cmoveq edi, ebx, tmpcnd, 0, 1

;jnz short loc_4060F6
ctcallnz tmpcnd, loc_4060F6

tcall loc_40610C
endp

proc loc_40610C
;mov edi, [esi+0x10]
add tmpadr, esi, 16
load edi, tmpadr, 1

;lea ebx, [esi+0x10]
add ebx, esi, 16

;cmp edi, ebx
cmoveq edi, ebx, tmpcnd, 0, 1

;jz short loc_40612C
ctcallz tmpcnd, loc_40612C

tcall loc_406116
endp

proc loc_406116
;mov ecx, [edi+0x10]
add tmpadr, edi, 16
load ecx, tmpadr, 1

;push 0x1
PUSH 0x1

;push edi
PUSH edi

;mov edx, esi
mov edx, esi

;add ecx, 0x7c
add ecx, ecx, 124

;call loc_409880
PUSH loc_406126
tcall loc_409880
endp

proc loc_406126
;mov edi, [edi]
load edi, edi, 1

;cmp edi, ebx
cmoveq edi, ebx, tmpcnd, 0, 1

;jnz short loc_406116
ctcallnz tmpcnd, loc_406116

tcall loc_40612C
endp

proc loc_40612C
;pop edi
POP edi

;pop esi
POP esi

;pop ebx
POP ebx

;ret
POP tmp1
tcall tmp1
endp

proc loc_406130
;push ecx
PUSH ecx

;and edx, 0xff
and edx, edx, 0xff

;push esi
PUSH esi

;mov [esp+0x4], edx
add tmpadr, esp, 4
store edx, tmpadr, 4

;fild dword [esp+0x4]
add tmpadr, esp, 4
load tmp1, tmpadr, 4
FILD_INT32 tmp1

;fmul dword [loc_4181E0]
load tmp1, loc_4181E0, 4
FMUL_FLOAT tmp1

;fld st0
FLD_ST 0

;fmulp st1, st0
FMULP_ST 1

;fcom dword [ecx+0x34]
add tmpadr, ecx, 52
load tmp1, tmpadr, 1
FCOM_FLOAT tmp1

;fnstsw ax
FNSTSW_VOID
and eax, eax, 0xffff0000
or eax, eax, tmp0

;test ah, 0x40
and tmpcnd, eax, 0x4000

;jnz short loc_4061BC
ctcallnz tmpcnd, loc_4061BC

tcall loc_406154
endp

proc loc_406154
;mov eax, [ecx]
load eax, ecx, 1

;fstp dword [ecx+0x34]
FSTP_FLOAT
add tmpadr, ecx, 52
store tmp0, tmpadr, 1

;cmp eax, ecx
cmoveq eax, ecx, tmpcnd, 0, 1

;jz short loc_406175
ctcallz tmpcnd, loc_406175

tcall loc_40615D
endp

proc loc_40615D
;fld dword [eax+0x20]
add tmpadr, eax, 32
load tmp1, tmpadr, 1
FLD_FLOAT tmp1

;fmul dword [ecx+0x38]
add tmpadr, ecx, 56
load tmp1, tmpadr, 1
FMUL_FLOAT tmp1

;mov edx, [eax+0x10]
add tmpadr, eax, 16
load edx, tmpadr, 1

;fmul dword [ecx+0x34]
add tmpadr, ecx, 52
load tmp1, tmpadr, 1
FMUL_FLOAT tmp1

;fstp dword [edx+0x90]
FSTP_FLOAT
add tmpadr, edx, 144
store tmp0, tmpadr, 1

;mov eax, [eax]
load eax, eax, 1

;cmp eax, ecx
cmoveq eax, ecx, tmpcnd, 0, 1

;jnz short loc_40615D
ctcallnz tmpcnd, loc_40615D

tcall loc_406175
endp

proc loc_406175
;mov eax, [ecx+0x8]
add tmpadr, ecx, 8
load eax, tmpadr, 1

;lea edx, [ecx+0x8]
add edx, ecx, 8

;cmp eax, edx
cmoveq eax, edx, tmpcnd, 0, 1

;jz short loc_406197
ctcallz tmpcnd, loc_406197

tcall loc_40617F
endp

proc loc_40617F
;fld dword [eax+0x20]
add tmpadr, eax, 32
load tmp1, tmpadr, 1
FLD_FLOAT tmp1

;fmul dword [ecx+0x38]
add tmpadr, ecx, 56
load tmp1, tmpadr, 1
FMUL_FLOAT tmp1

;mov esi, [eax+0x10]
add tmpadr, eax, 16
load esi, tmpadr, 1

;fmul dword [ecx+0x34]
add tmpadr, ecx, 52
load tmp1, tmpadr, 1
FMUL_FLOAT tmp1

;fstp dword [esi+0x90]
FSTP_FLOAT
add tmpadr, esi, 144
store tmp0, tmpadr, 1

;mov eax, [eax]
load eax, eax, 1

;cmp eax, edx
cmoveq eax, edx, tmpcnd, 0, 1

;jnz short loc_40617F
ctcallnz tmpcnd, loc_40617F

tcall loc_406197
endp

proc loc_406197
;mov eax, [ecx+0x10]
add tmpadr, ecx, 16
load eax, tmpadr, 1

;lea edx, [ecx+0x10]
add edx, ecx, 16

;cmp eax, edx
cmoveq eax, edx, tmpcnd, 0, 1

;jz short loc_4061BE
ctcallz tmpcnd, loc_4061BE

tcall loc_4061A1
endp

proc loc_4061A1
;fld dword [eax+0x20]
add tmpadr, eax, 32
load tmp1, tmpadr, 1
FLD_FLOAT tmp1

;fmul dword [ecx+0x38]
add tmpadr, ecx, 56
load tmp1, tmpadr, 1
FMUL_FLOAT tmp1

;mov esi, [eax+0x10]
add tmpadr, eax, 16
load esi, tmpadr, 1

;fmul dword [ecx+0x34]
add tmpadr, ecx, 52
load tmp1, tmpadr, 1
FMUL_FLOAT tmp1

;fstp dword [esi+0x90]
FSTP_FLOAT
add tmpadr, esi, 144
store tmp0, tmpadr, 1

;mov eax, [eax]
load eax, eax, 1

;cmp eax, edx
cmoveq eax, edx, tmpcnd, 0, 1

;jnz short loc_4061A1
ctcallnz tmpcnd, loc_4061A1

tcall loc_4061B9
endp

proc loc_4061B9
;pop esi
POP esi

;pop ecx
POP ecx

;ret
POP tmp1
tcall tmp1
endp

proc loc_4061BC
;fstp st0
FSTP_ST 0

tcall loc_4061BE
endp

proc loc_4061BE
;pop esi
POP esi

;pop ecx
POP ecx

;ret
POP tmp1
tcall tmp1
endp

proc loc_4061D0
;push ecx
PUSH ecx

;mov al, [ecx+0x5b]
add tmpadr, ecx, 91
load8z tmp0, tmpadr, 1
and eax, eax, 0xffffff00
or eax, eax, tmp0

;push esi
PUSH esi

;cmp dl, al
sub tmp1, edx, eax
and tmpcnd, tmp1, 0xff

;jz near loc_4062A4
ctcallz tmpcnd, loc_4062A4

tcall loc_4061DD
endp

proc loc_4061DD
;mov [ecx+0x5b], dl
add tmpadr, ecx, 91
store8 edx, tmpadr, 1

;and edx, 0xff
and edx, edx, 0xff

;mov [esp+0x4], edx
add tmpadr, esp, 4
store edx, tmpadr, 4

;mov edx, [ecx]
load edx, ecx, 1

;fild dword [esp+0x4]
add tmpadr, esp, 4
load tmp1, tmpadr, 4
FILD_INT32 tmp1

;cmp edx, ecx
and eflags, eflags, ~ZF
sub tmp1, edx, ecx
cmovz tmp1, tmp0, ZF, 0
or eflags, eflags, tmp0

;fmul dword [ecx+0x3c]
add tmpadr, ecx, 60
load tmp1, tmpadr, 1
FMUL_FLOAT tmp1

;fmul dword [loc_4181E0]
load tmp1, loc_4181E0, 4
FMUL_FLOAT tmp1

;fstp dword [ecx+0x44]
FSTP_FLOAT
add tmpadr, ecx, 68
store tmp0, tmpadr, 1

;jz short loc_406230
and tmp1, eflags, ZF
ctcallnz tmp1, loc_406230

tcall loc_406200
endp

proc loc_406200
;fld dword [edx+0x24]
add tmpadr, edx, 36
load tmp1, tmpadr, 1
FLD_FLOAT tmp1

;fcomp dword [loc_4181E8]
load tmp1, loc_4181E8, 4
FCOMP_FLOAT tmp1

;fnstsw ax
FNSTSW_VOID
and eax, eax, 0xffff0000
or eax, eax, tmp0

;test ah, 0x1
and tmpcnd, eax, 0x100

;jnz short loc_40621B
ctcallnz tmpcnd, loc_40621B

tcall loc_406210
endp

proc loc_406210
;fld dword [ecx+0x48]
add tmpadr, ecx, 72
load tmp1, tmpadr, 1
FLD_FLOAT tmp1

;fadd dword [ecx+0x44]
add tmpadr, ecx, 68
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;fadd dword [edx+0x24]
add tmpadr, edx, 36
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;jmp short loc_406224
tcall loc_406224
endp

proc loc_40621B
;fld dword [edx+0x24]
add tmpadr, edx, 36
load tmp1, tmpadr, 1
FLD_FLOAT tmp1

;fsub dword [ecx+0x44]
add tmpadr, ecx, 68
load tmp1, tmpadr, 1
FSUB_FLOAT tmp1

;fsub dword [ecx+0x48]
add tmpadr, ecx, 72
load tmp1, tmpadr, 1
FSUB_FLOAT tmp1

tcall loc_406224
endp

proc loc_406224
;mov eax, [edx+0x10]
add tmpadr, edx, 16
load eax, tmpadr, 1

;fstp dword [eax+0x44]
FSTP_FLOAT
add tmpadr, eax, 68
store tmp0, tmpadr, 1

;mov edx, [edx]
load edx, edx, 1

;cmp edx, ecx
cmoveq edx, ecx, tmpcnd, 0, 1

;jnz short loc_406200
ctcallnz tmpcnd, loc_406200

tcall loc_406230
endp

proc loc_406230
;mov edx, [ecx+0x8]
add tmpadr, ecx, 8
load edx, tmpadr, 1

;lea esi, [ecx+0x8]
add esi, ecx, 8

;cmp edx, esi
cmoveq edx, esi, tmpcnd, 0, 1

;jz short loc_40626A
ctcallz tmpcnd, loc_40626A

tcall loc_40623A
endp

proc loc_40623A
;fld dword [edx+0x24]
add tmpadr, edx, 36
load tmp1, tmpadr, 1
FLD_FLOAT tmp1

;fcomp dword [loc_4181E8]
load tmp1, loc_4181E8, 4
FCOMP_FLOAT tmp1

;fnstsw ax
FNSTSW_VOID
and eax, eax, 0xffff0000
or eax, eax, tmp0

;test ah, 0x1
and tmpcnd, eax, 0x100

;jnz short loc_406255
ctcallnz tmpcnd, loc_406255

tcall loc_40624A
endp

proc loc_40624A
;fld dword [ecx+0x48]
add tmpadr, ecx, 72
load tmp1, tmpadr, 1
FLD_FLOAT tmp1

;fadd dword [ecx+0x44]
add tmpadr, ecx, 68
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;fadd dword [edx+0x24]
add tmpadr, edx, 36
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;jmp short loc_40625E
tcall loc_40625E
endp

proc loc_406255
;fld dword [edx+0x24]
add tmpadr, edx, 36
load tmp1, tmpadr, 1
FLD_FLOAT tmp1

;fsub dword [ecx+0x44]
add tmpadr, ecx, 68
load tmp1, tmpadr, 1
FSUB_FLOAT tmp1

;fsub dword [ecx+0x48]
add tmpadr, ecx, 72
load tmp1, tmpadr, 1
FSUB_FLOAT tmp1

tcall loc_40625E
endp

proc loc_40625E
;mov eax, [edx+0x10]
add tmpadr, edx, 16
load eax, tmpadr, 1

;fstp dword [eax+0x44]
FSTP_FLOAT
add tmpadr, eax, 68
store tmp0, tmpadr, 1

;mov edx, [edx]
load edx, edx, 1

;cmp edx, esi
cmoveq edx, esi, tmpcnd, 0, 1

;jnz short loc_40623A
ctcallnz tmpcnd, loc_40623A

tcall loc_40626A
endp

proc loc_40626A
;mov edx, [ecx+0x10]
add tmpadr, ecx, 16
load edx, tmpadr, 1

;lea esi, [ecx+0x10]
add esi, ecx, 16

;cmp edx, esi
cmoveq edx, esi, tmpcnd, 0, 1

;jz short loc_4062A4
ctcallz tmpcnd, loc_4062A4

tcall loc_406274
endp

proc loc_406274
;fld dword [edx+0x24]
add tmpadr, edx, 36
load tmp1, tmpadr, 1
FLD_FLOAT tmp1

;fcomp dword [loc_4181E8]
load tmp1, loc_4181E8, 4
FCOMP_FLOAT tmp1

;fnstsw ax
FNSTSW_VOID
and eax, eax, 0xffff0000
or eax, eax, tmp0

;test ah, 0x1
and tmpcnd, eax, 0x100

;jnz short loc_40628F
ctcallnz tmpcnd, loc_40628F

tcall loc_406284
endp

proc loc_406284
;fld dword [ecx+0x48]
add tmpadr, ecx, 72
load tmp1, tmpadr, 1
FLD_FLOAT tmp1

;fadd dword [ecx+0x44]
add tmpadr, ecx, 68
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;fadd dword [edx+0x24]
add tmpadr, edx, 36
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;jmp short loc_406298
tcall loc_406298
endp

proc loc_40628F
;fld dword [edx+0x24]
add tmpadr, edx, 36
load tmp1, tmpadr, 1
FLD_FLOAT tmp1

;fsub dword [ecx+0x44]
add tmpadr, ecx, 68
load tmp1, tmpadr, 1
FSUB_FLOAT tmp1

;fsub dword [ecx+0x48]
add tmpadr, ecx, 72
load tmp1, tmpadr, 1
FSUB_FLOAT tmp1

tcall loc_406298
endp

proc loc_406298
;mov eax, [edx+0x10]
add tmpadr, edx, 16
load eax, tmpadr, 1

;fstp dword [eax+0x44]
FSTP_FLOAT
add tmpadr, eax, 68
store tmp0, tmpadr, 1

;mov edx, [edx]
load edx, edx, 1

;cmp edx, esi
cmoveq edx, esi, tmpcnd, 0, 1

;jnz short loc_406274
ctcallnz tmpcnd, loc_406274

tcall loc_4062A4
endp

proc loc_4062A4
;pop esi
POP esi

;pop ecx
POP ecx

;ret
POP tmp1
tcall tmp1
endp

proc loc_4062B0
;push ecx
PUSH ecx

;shr dx, 0x7
and tmp4, edx, 0xffff
lshr tmp4, tmp4, 7
and edx, edx, 0xffff0000
or edx, edx, tmp4

;and edx, 0xffff
and edx, edx, 0xffff

;push esi
PUSH esi

;mov [esp+0x4], edx
add tmpadr, esp, 4
store edx, tmpadr, 4

;fild dword [esp+0x4]
add tmpadr, esp, 4
load tmp1, tmpadr, 4
FILD_INT32 tmp1

;fmul dword [loc_4181EC]
load tmp1, loc_4181EC, 4
FMUL_FLOAT tmp1

;fcom dword [ecx+0x24]
add tmpadr, ecx, 36
load tmp1, tmpadr, 1
FCOM_FLOAT tmp1

;fnstsw ax
FNSTSW_VOID
and eax, eax, 0xffff0000
or eax, eax, tmp0

;test ah, 0x40
and tmpcnd, eax, 0x4000

;jnz near loc_40635B
ctcallnz tmpcnd, loc_40635B

tcall loc_4062D8
endp

proc loc_4062D8
;mov eax, [ecx]
load eax, ecx, 1

;fstp dword [ecx+0x24]
FSTP_FLOAT
add tmpadr, ecx, 36
store tmp0, tmpadr, 1

;cmp eax, ecx
cmoveq eax, ecx, tmpcnd, 0, 1

;jz short loc_406302
ctcallz tmpcnd, loc_406302

tcall loc_4062E1
endp

proc loc_4062E1
;fld dword [ecx+0x28]
add tmpadr, ecx, 40
load tmp1, tmpadr, 1
FLD_FLOAT tmp1

;fmul dword [ecx+0x24]
add tmpadr, ecx, 36
load tmp1, tmpadr, 1
FMUL_FLOAT tmp1

;mov edx, [eax+0x10]
add tmpadr, eax, 16
load edx, tmpadr, 1

;fadd dword [eax+0x1c]
add tmpadr, eax, 28
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;fadd dword [loc_42BA08]
load tmp1, loc_42BA08, 4
FADD_FLOAT tmp1

;fadd dword [ecx+0x30]
add tmpadr, ecx, 48
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;fadd dword [ecx+0x2c]
add tmpadr, ecx, 44
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;fstp dword [edx+0x40]
FSTP_FLOAT
add tmpadr, edx, 64
store tmp0, tmpadr, 1

;mov eax, [eax]
load eax, eax, 1

;cmp eax, ecx
cmoveq eax, ecx, tmpcnd, 0, 1

;jnz short loc_4062E1
ctcallnz tmpcnd, loc_4062E1

tcall loc_406302
endp

proc loc_406302
;mov eax, [ecx+0x8]
add tmpadr, ecx, 8
load eax, tmpadr, 1

;lea edx, [ecx+0x8]
add edx, ecx, 8

;cmp eax, edx
cmoveq eax, edx, tmpcnd, 0, 1

;jz short loc_40632D
ctcallz tmpcnd, loc_40632D

tcall loc_40630C
endp

proc loc_40630C
;fld dword [ecx+0x28]
add tmpadr, ecx, 40
load tmp1, tmpadr, 1
FLD_FLOAT tmp1

;fmul dword [ecx+0x24]
add tmpadr, ecx, 36
load tmp1, tmpadr, 1
FMUL_FLOAT tmp1

;mov esi, [eax+0x10]
add tmpadr, eax, 16
load esi, tmpadr, 1

;fadd dword [eax+0x1c]
add tmpadr, eax, 28
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;fadd dword [loc_42BA08]
load tmp1, loc_42BA08, 4
FADD_FLOAT tmp1

;fadd dword [ecx+0x30]
add tmpadr, ecx, 48
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;fadd dword [ecx+0x2c]
add tmpadr, ecx, 44
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;fstp dword [esi+0x40]
FSTP_FLOAT
add tmpadr, esi, 64
store tmp0, tmpadr, 1

;mov eax, [eax]
load eax, eax, 1

;cmp eax, edx
cmoveq eax, edx, tmpcnd, 0, 1

;jnz short loc_40630C
ctcallnz tmpcnd, loc_40630C

tcall loc_40632D
endp

proc loc_40632D
;mov eax, [ecx+0x10]
add tmpadr, ecx, 16
load eax, tmpadr, 1

;lea edx, [ecx+0x10]
add edx, ecx, 16

;cmp eax, edx
cmoveq eax, edx, tmpcnd, 0, 1

;jz short loc_40635D
ctcallz tmpcnd, loc_40635D

tcall loc_406337
endp

proc loc_406337
;fld dword [ecx+0x28]
add tmpadr, ecx, 40
load tmp1, tmpadr, 1
FLD_FLOAT tmp1

;fmul dword [ecx+0x24]
add tmpadr, ecx, 36
load tmp1, tmpadr, 1
FMUL_FLOAT tmp1

;mov esi, [eax+0x10]
add tmpadr, eax, 16
load esi, tmpadr, 1

;fadd dword [eax+0x1c]
add tmpadr, eax, 28
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;fadd dword [loc_42BA08]
load tmp1, loc_42BA08, 4
FADD_FLOAT tmp1

;fadd dword [ecx+0x30]
add tmpadr, ecx, 48
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;fadd dword [ecx+0x2c]
add tmpadr, ecx, 44
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;fstp dword [esi+0x40]
FSTP_FLOAT
add tmpadr, esi, 64
store tmp0, tmpadr, 1

;mov eax, [eax]
load eax, eax, 1

;cmp eax, edx
cmoveq eax, edx, tmpcnd, 0, 1

;jnz short loc_406337
ctcallnz tmpcnd, loc_406337

tcall loc_406358
endp

proc loc_406358
;pop esi
POP esi

;pop ecx
POP ecx

;ret
POP tmp1
tcall tmp1
endp

proc loc_40635B
;fstp st0
FSTP_ST 0

tcall loc_40635D
endp

proc loc_40635D
;pop esi
POP esi

;pop ecx
POP ecx

;ret
POP tmp1
tcall tmp1
endp

proc loc_406360
;push ecx
PUSH ecx

;and edx, 0xffff
and edx, edx, 0xffff

;push esi
PUSH esi

;shr edx, 0x7
lshr edx, edx, 7

;sub edx, 0x40
sub edx, edx, 64

;mov [esp+0x4], edx
add tmpadr, esp, 4
store edx, tmpadr, 4

;fild dword [esp+0x4]
add tmpadr, esp, 4
load tmp1, tmpadr, 4
FILD_INT32 tmp1

;fmul dword [loc_4181EC]
load tmp1, loc_4181EC, 4
FMUL_FLOAT tmp1

;fcom dword [ecx+0x2c]
add tmpadr, ecx, 44
load tmp1, tmpadr, 1
FCOM_FLOAT tmp1

;fnstsw ax
FNSTSW_VOID
and eax, eax, 0xffff0000
or eax, eax, tmp0

;test ah, 0x40
and tmpcnd, eax, 0x4000

;jnz near loc_40640D
ctcallnz tmpcnd, loc_40640D

tcall loc_40638A
endp

proc loc_40638A
;mov eax, [ecx]
load eax, ecx, 1

;fstp dword [ecx+0x2c]
FSTP_FLOAT
add tmpadr, ecx, 44
store tmp0, tmpadr, 1

;cmp eax, ecx
cmoveq eax, ecx, tmpcnd, 0, 1

;jz short loc_4063B4
ctcallz tmpcnd, loc_4063B4

tcall loc_406393
endp

proc loc_406393
;fld dword [ecx+0x24]
add tmpadr, ecx, 36
load tmp1, tmpadr, 1
FLD_FLOAT tmp1

;fmul dword [ecx+0x28]
add tmpadr, ecx, 40
load tmp1, tmpadr, 1
FMUL_FLOAT tmp1

;mov edx, [eax+0x10]
add tmpadr, eax, 16
load edx, tmpadr, 1

;fadd dword [eax+0x1c]
add tmpadr, eax, 28
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;fadd dword [ecx+0x2c]
add tmpadr, ecx, 44
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;fadd dword [loc_42BA08]
load tmp1, loc_42BA08, 4
FADD_FLOAT tmp1

;fadd dword [ecx+0x30]
add tmpadr, ecx, 48
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;fstp dword [edx+0x40]
FSTP_FLOAT
add tmpadr, edx, 64
store tmp0, tmpadr, 1

;mov eax, [eax]
load eax, eax, 1

;cmp eax, ecx
cmoveq eax, ecx, tmpcnd, 0, 1

;jnz short loc_406393
ctcallnz tmpcnd, loc_406393

tcall loc_4063B4
endp

proc loc_4063B4
;mov eax, [ecx+0x8]
add tmpadr, ecx, 8
load eax, tmpadr, 1

;lea edx, [ecx+0x8]
add edx, ecx, 8

;cmp eax, edx
cmoveq eax, edx, tmpcnd, 0, 1

;jz short loc_4063DF
ctcallz tmpcnd, loc_4063DF

tcall loc_4063BE
endp

proc loc_4063BE
;fld dword [ecx+0x24]
add tmpadr, ecx, 36
load tmp1, tmpadr, 1
FLD_FLOAT tmp1

;fmul dword [ecx+0x28]
add tmpadr, ecx, 40
load tmp1, tmpadr, 1
FMUL_FLOAT tmp1

;mov esi, [eax+0x10]
add tmpadr, eax, 16
load esi, tmpadr, 1

;fadd dword [eax+0x1c]
add tmpadr, eax, 28
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;fadd dword [ecx+0x2c]
add tmpadr, ecx, 44
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;fadd dword [loc_42BA08]
load tmp1, loc_42BA08, 4
FADD_FLOAT tmp1

;fadd dword [ecx+0x30]
add tmpadr, ecx, 48
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;fstp dword [esi+0x40]
FSTP_FLOAT
add tmpadr, esi, 64
store tmp0, tmpadr, 1

;mov eax, [eax]
load eax, eax, 1

;cmp eax, edx
cmoveq eax, edx, tmpcnd, 0, 1

;jnz short loc_4063BE
ctcallnz tmpcnd, loc_4063BE

tcall loc_4063DF
endp

proc loc_4063DF
;mov eax, [ecx+0x10]
add tmpadr, ecx, 16
load eax, tmpadr, 1

;lea edx, [ecx+0x10]
add edx, ecx, 16

;cmp eax, edx
cmoveq eax, edx, tmpcnd, 0, 1

;jz short loc_40640F
ctcallz tmpcnd, loc_40640F

tcall loc_4063E9
endp

proc loc_4063E9
;fld dword [ecx+0x24]
add tmpadr, ecx, 36
load tmp1, tmpadr, 1
FLD_FLOAT tmp1

;fmul dword [ecx+0x28]
add tmpadr, ecx, 40
load tmp1, tmpadr, 1
FMUL_FLOAT tmp1

;mov esi, [eax+0x10]
add tmpadr, eax, 16
load esi, tmpadr, 1

;fadd dword [eax+0x1c]
add tmpadr, eax, 28
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;fadd dword [ecx+0x2c]
add tmpadr, ecx, 44
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;fadd dword [loc_42BA08]
load tmp1, loc_42BA08, 4
FADD_FLOAT tmp1

;fadd dword [ecx+0x30]
add tmpadr, ecx, 48
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;fstp dword [esi+0x40]
FSTP_FLOAT
add tmpadr, esi, 64
store tmp0, tmpadr, 1

;mov eax, [eax]
load eax, eax, 1

;cmp eax, edx
cmoveq eax, edx, tmpcnd, 0, 1

;jnz short loc_4063E9
ctcallnz tmpcnd, loc_4063E9

tcall loc_40640A
endp

proc loc_40640A
;pop esi
POP esi

;pop ecx
POP ecx

;ret
POP tmp1
tcall tmp1
endp

proc loc_40640D
;fstp st0
FSTP_ST 0

tcall loc_40640F
endp

proc loc_40640F
;pop esi
POP esi

;pop ecx
POP ecx

;ret
POP tmp1
tcall tmp1
endp

proc loc_406420
;push ecx
PUSH ecx

;and edx, 0xffff
and edx, edx, 0xffff

;push esi
PUSH esi

;sub edx, 0x2000
sub edx, edx, 8192

;mov [esp+0x4], edx
add tmpadr, esp, 4
store edx, tmpadr, 4

;fild dword [esp+0x4]
add tmpadr, esp, 4
load tmp1, tmpadr, 4
FILD_INT32 tmp1

;fmul dword [loc_4181F0]
load tmp1, loc_4181F0, 4
FMUL_FLOAT tmp1

;fcom dword [ecx+0x30]
add tmpadr, ecx, 48
load tmp1, tmpadr, 1
FCOM_FLOAT tmp1

;fnstsw ax
FNSTSW_VOID
and eax, eax, 0xffff0000
or eax, eax, tmp0

;test ah, 0x40
and tmpcnd, eax, 0x4000

;jnz near loc_4064CD
ctcallnz tmpcnd, loc_4064CD

tcall loc_40644A
endp

proc loc_40644A
;mov eax, [ecx]
load eax, ecx, 1

;fstp dword [ecx+0x30]
FSTP_FLOAT
add tmpadr, ecx, 48
store tmp0, tmpadr, 1

;cmp eax, ecx
cmoveq eax, ecx, tmpcnd, 0, 1

;jz short loc_406474
ctcallz tmpcnd, loc_406474

tcall loc_406453
endp

proc loc_406453
;fld dword [ecx+0x28]
add tmpadr, ecx, 40
load tmp1, tmpadr, 1
FLD_FLOAT tmp1

;fmul dword [ecx+0x24]
add tmpadr, ecx, 36
load tmp1, tmpadr, 1
FMUL_FLOAT tmp1

;mov edx, [eax+0x10]
add tmpadr, eax, 16
load edx, tmpadr, 1

;fadd dword [eax+0x1c]
add tmpadr, eax, 28
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;fadd dword [loc_42BA08]
load tmp1, loc_42BA08, 4
FADD_FLOAT tmp1

;fadd dword [ecx+0x30]
add tmpadr, ecx, 48
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;fadd dword [ecx+0x2c]
add tmpadr, ecx, 44
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;fstp dword [edx+0x40]
FSTP_FLOAT
add tmpadr, edx, 64
store tmp0, tmpadr, 1

;mov eax, [eax]
load eax, eax, 1

;cmp eax, ecx
cmoveq eax, ecx, tmpcnd, 0, 1

;jnz short loc_406453
ctcallnz tmpcnd, loc_406453

tcall loc_406474
endp

proc loc_406474
;mov eax, [ecx+0x8]
add tmpadr, ecx, 8
load eax, tmpadr, 1

;lea edx, [ecx+0x8]
add edx, ecx, 8

;cmp eax, edx
cmoveq eax, edx, tmpcnd, 0, 1

;jz short loc_40649F
ctcallz tmpcnd, loc_40649F

tcall loc_40647E
endp

proc loc_40647E
;fld dword [ecx+0x28]
add tmpadr, ecx, 40
load tmp1, tmpadr, 1
FLD_FLOAT tmp1

;fmul dword [ecx+0x24]
add tmpadr, ecx, 36
load tmp1, tmpadr, 1
FMUL_FLOAT tmp1

;mov esi, [eax+0x10]
add tmpadr, eax, 16
load esi, tmpadr, 1

;fadd dword [eax+0x1c]
add tmpadr, eax, 28
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;fadd dword [loc_42BA08]
load tmp1, loc_42BA08, 4
FADD_FLOAT tmp1

;fadd dword [ecx+0x30]
add tmpadr, ecx, 48
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;fadd dword [ecx+0x2c]
add tmpadr, ecx, 44
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;fstp dword [esi+0x40]
FSTP_FLOAT
add tmpadr, esi, 64
store tmp0, tmpadr, 1

;mov eax, [eax]
load eax, eax, 1

;cmp eax, edx
cmoveq eax, edx, tmpcnd, 0, 1

;jnz short loc_40647E
ctcallnz tmpcnd, loc_40647E

tcall loc_40649F
endp

proc loc_40649F
;mov eax, [ecx+0x10]
add tmpadr, ecx, 16
load eax, tmpadr, 1

;lea edx, [ecx+0x10]
add edx, ecx, 16

;cmp eax, edx
cmoveq eax, edx, tmpcnd, 0, 1

;jz short loc_4064CF
ctcallz tmpcnd, loc_4064CF

tcall loc_4064A9
endp

proc loc_4064A9
;fld dword [ecx+0x28]
add tmpadr, ecx, 40
load tmp1, tmpadr, 1
FLD_FLOAT tmp1

;fmul dword [ecx+0x24]
add tmpadr, ecx, 36
load tmp1, tmpadr, 1
FMUL_FLOAT tmp1

;mov esi, [eax+0x10]
add tmpadr, eax, 16
load esi, tmpadr, 1

;fadd dword [eax+0x1c]
add tmpadr, eax, 28
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;fadd dword [loc_42BA08]
load tmp1, loc_42BA08, 4
FADD_FLOAT tmp1

;fadd dword [ecx+0x30]
add tmpadr, ecx, 48
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;fadd dword [ecx+0x2c]
add tmpadr, ecx, 44
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;fstp dword [esi+0x40]
FSTP_FLOAT
add tmpadr, esi, 64
store tmp0, tmpadr, 1

;mov eax, [eax]
load eax, eax, 1

;cmp eax, edx
cmoveq eax, edx, tmpcnd, 0, 1

;jnz short loc_4064A9
ctcallnz tmpcnd, loc_4064A9

tcall loc_4064CA
endp

proc loc_4064CA
;pop esi
POP esi

;pop ecx
POP ecx

;ret
POP tmp1
tcall tmp1
endp

proc loc_4064CD
;fstp st0
FSTP_ST 0

tcall loc_4064CF
endp

proc loc_4064CF
;pop esi
POP esi

;pop ecx
POP ecx

;ret
POP tmp1
tcall tmp1
endp

proc loc_4064E0
;push ecx
PUSH ecx

;mov al, [ecx+0x5c]
add tmpadr, ecx, 92
load8z tmp0, tmpadr, 1
and eax, eax, 0xffffff00
or eax, eax, tmp0

;push esi
PUSH esi

;cmp dl, al
sub tmp1, edx, eax
and tmpcnd, tmp1, 0xff

;jz near loc_4065B4
ctcallz tmpcnd, loc_4065B4

tcall loc_4064ED
endp

proc loc_4064ED
;mov [ecx+0x5c], dl
add tmpadr, ecx, 92
store8 edx, tmpadr, 1

;and edx, 0xff
and edx, edx, 0xff

;mov [esp+0x4], edx
add tmpadr, esp, 4
store edx, tmpadr, 4

;mov edx, [ecx]
load edx, ecx, 1

;fild dword [esp+0x4]
add tmpadr, esp, 4
load tmp1, tmpadr, 4
FILD_INT32 tmp1

;cmp edx, ecx
and eflags, eflags, ~ZF
sub tmp1, edx, ecx
cmovz tmp1, tmp0, ZF, 0
or eflags, eflags, tmp0

;fmul dword [ecx+0x40]
add tmpadr, ecx, 64
load tmp1, tmpadr, 1
FMUL_FLOAT tmp1

;fmul dword [loc_4181E0]
load tmp1, loc_4181E0, 4
FMUL_FLOAT tmp1

;fstp dword [ecx+0x48]
FSTP_FLOAT
add tmpadr, ecx, 72
store tmp0, tmpadr, 1

;jz short loc_406540
and tmp1, eflags, ZF
ctcallnz tmp1, loc_406540

tcall loc_406510
endp

proc loc_406510
;fld dword [edx+0x24]
add tmpadr, edx, 36
load tmp1, tmpadr, 1
FLD_FLOAT tmp1

;fcomp dword [loc_4181E8]
load tmp1, loc_4181E8, 4
FCOMP_FLOAT tmp1

;fnstsw ax
FNSTSW_VOID
and eax, eax, 0xffff0000
or eax, eax, tmp0

;test ah, 0x1
and tmpcnd, eax, 0x100

;jnz short loc_40652B
ctcallnz tmpcnd, loc_40652B

tcall loc_406520
endp

proc loc_406520
;fld dword [ecx+0x44]
add tmpadr, ecx, 68
load tmp1, tmpadr, 1
FLD_FLOAT tmp1

;fadd dword [ecx+0x48]
add tmpadr, ecx, 72
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;fadd dword [edx+0x24]
add tmpadr, edx, 36
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;jmp short loc_406534
tcall loc_406534
endp

proc loc_40652B
;fld dword [edx+0x24]
add tmpadr, edx, 36
load tmp1, tmpadr, 1
FLD_FLOAT tmp1

;fsub dword [ecx+0x44]
add tmpadr, ecx, 68
load tmp1, tmpadr, 1
FSUB_FLOAT tmp1

;fsub dword [ecx+0x48]
add tmpadr, ecx, 72
load tmp1, tmpadr, 1
FSUB_FLOAT tmp1

tcall loc_406534
endp

proc loc_406534
;mov eax, [edx+0x10]
add tmpadr, edx, 16
load eax, tmpadr, 1

;fstp dword [eax+0x44]
FSTP_FLOAT
add tmpadr, eax, 68
store tmp0, tmpadr, 1

;mov edx, [edx]
load edx, edx, 1

;cmp edx, ecx
cmoveq edx, ecx, tmpcnd, 0, 1

;jnz short loc_406510
ctcallnz tmpcnd, loc_406510

tcall loc_406540
endp

proc loc_406540
;mov edx, [ecx+0x8]
add tmpadr, ecx, 8
load edx, tmpadr, 1

;lea esi, [ecx+0x8]
add esi, ecx, 8

;cmp edx, esi
cmoveq edx, esi, tmpcnd, 0, 1

;jz short loc_40657A
ctcallz tmpcnd, loc_40657A

tcall loc_40654A
endp

proc loc_40654A
;fld dword [edx+0x24]
add tmpadr, edx, 36
load tmp1, tmpadr, 1
FLD_FLOAT tmp1

;fcomp dword [loc_4181E8]
load tmp1, loc_4181E8, 4
FCOMP_FLOAT tmp1

;fnstsw ax
FNSTSW_VOID
and eax, eax, 0xffff0000
or eax, eax, tmp0

;test ah, 0x1
and tmpcnd, eax, 0x100

;jnz short loc_406565
ctcallnz tmpcnd, loc_406565

tcall loc_40655A
endp

proc loc_40655A
;fld dword [ecx+0x44]
add tmpadr, ecx, 68
load tmp1, tmpadr, 1
FLD_FLOAT tmp1

;fadd dword [ecx+0x48]
add tmpadr, ecx, 72
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;fadd dword [edx+0x24]
add tmpadr, edx, 36
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;jmp short loc_40656E
tcall loc_40656E
endp

proc loc_406565
;fld dword [edx+0x24]
add tmpadr, edx, 36
load tmp1, tmpadr, 1
FLD_FLOAT tmp1

;fsub dword [ecx+0x44]
add tmpadr, ecx, 68
load tmp1, tmpadr, 1
FSUB_FLOAT tmp1

;fsub dword [ecx+0x48]
add tmpadr, ecx, 72
load tmp1, tmpadr, 1
FSUB_FLOAT tmp1

tcall loc_40656E
endp

proc loc_40656E
;mov eax, [edx+0x10]
add tmpadr, edx, 16
load eax, tmpadr, 1

;fstp dword [eax+0x44]
FSTP_FLOAT
add tmpadr, eax, 68
store tmp0, tmpadr, 1

;mov edx, [edx]
load edx, edx, 1

;cmp edx, esi
cmoveq edx, esi, tmpcnd, 0, 1

;jnz short loc_40654A
ctcallnz tmpcnd, loc_40654A

tcall loc_40657A
endp

proc loc_40657A
;mov edx, [ecx+0x10]
add tmpadr, ecx, 16
load edx, tmpadr, 1

;lea esi, [ecx+0x10]
add esi, ecx, 16

;cmp edx, esi
cmoveq edx, esi, tmpcnd, 0, 1

;jz short loc_4065B4
ctcallz tmpcnd, loc_4065B4

tcall loc_406584
endp

proc loc_406584
;fld dword [edx+0x24]
add tmpadr, edx, 36
load tmp1, tmpadr, 1
FLD_FLOAT tmp1

;fcomp dword [loc_4181E8]
load tmp1, loc_4181E8, 4
FCOMP_FLOAT tmp1

;fnstsw ax
FNSTSW_VOID
and eax, eax, 0xffff0000
or eax, eax, tmp0

;test ah, 0x1
and tmpcnd, eax, 0x100

;jnz short loc_40659F
ctcallnz tmpcnd, loc_40659F

tcall loc_406594
endp

proc loc_406594
;fld dword [ecx+0x44]
add tmpadr, ecx, 68
load tmp1, tmpadr, 1
FLD_FLOAT tmp1

;fadd dword [ecx+0x48]
add tmpadr, ecx, 72
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;fadd dword [edx+0x24]
add tmpadr, edx, 36
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;jmp short loc_4065A8
tcall loc_4065A8
endp

proc loc_40659F
;fld dword [edx+0x24]
add tmpadr, edx, 36
load tmp1, tmpadr, 1
FLD_FLOAT tmp1

;fsub dword [ecx+0x44]
add tmpadr, ecx, 68
load tmp1, tmpadr, 1
FSUB_FLOAT tmp1

;fsub dword [ecx+0x48]
add tmpadr, ecx, 72
load tmp1, tmpadr, 1
FSUB_FLOAT tmp1

tcall loc_4065A8
endp

proc loc_4065A8
;mov eax, [edx+0x10]
add tmpadr, edx, 16
load eax, tmpadr, 1

;fstp dword [eax+0x44]
FSTP_FLOAT
add tmpadr, eax, 68
store tmp0, tmpadr, 1

;mov edx, [edx]
load edx, edx, 1

;cmp edx, esi
cmoveq edx, esi, tmpcnd, 0, 1

;jnz short loc_406584
ctcallnz tmpcnd, loc_406584

tcall loc_4065B4
endp

proc loc_4065B4
;pop esi
POP esi

;pop ecx
POP ecx

;ret
POP tmp1
tcall tmp1
endp

proc loc_4065C0
;fld dword [edx+0x24]
add tmpadr, edx, 36
load tmp1, tmpadr, 1
FLD_FLOAT tmp1

;fcomp dword [loc_4181E8]
load tmp1, loc_4181E8, 4
FCOMP_FLOAT tmp1

;fnstsw ax
FNSTSW_VOID
and eax, eax, 0xffff0000
or eax, eax, tmp0

;test ah, 0x1
and tmpcnd, eax, 0x100

;jnz short loc_4065E0
ctcallnz tmpcnd, loc_4065E0

tcall loc_4065D0
endp

proc loc_4065D0
;fld dword [ecx+0x48]
add tmpadr, ecx, 72
load tmp1, tmpadr, 1
FLD_FLOAT tmp1

;fadd dword [ecx+0x44]
add tmpadr, ecx, 68
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;mov eax, [edx+0x10]
add tmpadr, edx, 16
load eax, tmpadr, 1

;fadd dword [edx+0x24]
add tmpadr, edx, 36
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;fstp dword [eax+0x44]
FSTP_FLOAT
add tmpadr, eax, 68
store tmp0, tmpadr, 1

;ret
POP tmp1
tcall tmp1
endp

proc loc_4065E0
;fld dword [edx+0x24]
add tmpadr, edx, 36
load tmp1, tmpadr, 1
FLD_FLOAT tmp1

;fsub dword [ecx+0x44]
add tmpadr, ecx, 68
load tmp1, tmpadr, 1
FSUB_FLOAT tmp1

;fsub dword [ecx+0x48]
add tmpadr, ecx, 72
load tmp1, tmpadr, 1
FSUB_FLOAT tmp1

;mov ecx, [edx+0x10]
add tmpadr, edx, 16
load ecx, tmpadr, 1

;fstp dword [ecx+0x44]
FSTP_FLOAT
add tmpadr, ecx, 68
store tmp0, tmpadr, 1

;ret
POP tmp1
tcall tmp1
endp

proc loc_4065F0
;push ecx
PUSH ecx

;mov eax, ecx
mov eax, ecx

;push ebx
PUSH ebx

;mov ecx, [loc_42A4FC]
load ecx, loc_42A4FC, 4

;xor ebx, ebx
xor ebx, ebx, ebx

;push ebp
PUSH ebp

;push esi
PUSH esi

;cmp ecx, ebx
cmoveq ecx, ebx, tmpcnd, 0, 1

;push edi
PUSH edi

;jz short loc_406614
ctcallz tmpcnd, loc_406614

tcall loc_406603
endp

proc loc_406603
;mov ecx, 0x81
mov ecx, 0x81

;mov esi, loc_42A2F8
mov esi, loc_42A2F8

;mov edi, loc_42A4FC
mov edi, loc_42A4FC

;rep movsd
REP_MOVSD

tcall loc_406614
endp

proc loc_406614
;cmp [loc_42A700], ebx
load tmp1, loc_42A700, 4
cmoveq tmp1, ebx, tmpcnd, 0, 1

;jz short loc_40662D
ctcallz tmpcnd, loc_40662D

tcall loc_40661C
endp

proc loc_40661C
;mov ecx, 0x81
mov ecx, 0x81

;mov esi, loc_42A2F8
mov esi, loc_42A2F8

;mov edi, loc_42A700
mov edi, loc_42A700

;rep movsd
REP_MOVSD

tcall loc_40662D
endp

proc loc_40662D
;mov ecx, eax
mov ecx, eax

;call loc_40A680
PUSH loc_406634
tcall loc_40A680
endp

proc loc_406634
;mov ecx, 0x4
mov ecx, 0x4

;call loc_408840
PUSH loc_40663E
tcall loc_408840
endp

proc loc_40663E
;mov ecx, 0x2
mov ecx, 0x2

;call loc_408610
PUSH loc_406648
tcall loc_408610
endp

proc loc_406648
;mov dword [loc_42BA08], 0x0
store 0, loc_42BA08, 4

;mov ebp, loc_42A95F
mov ebp, loc_42A95F

tcall loc_406657
endp

proc loc_406657
;lea ecx, [ebp-0x57]
add ecx, ebp, -87

;call loc_401680
PUSH loc_40665F
tcall loc_401680
endp

proc loc_40665F
;mov eax, 0x43ec3871
mov eax, 0x43ec3871

;mov ecx, [loc_42A2EC]
load ecx, loc_42A2EC, 4

;mov [ebp-0x1b], eax
add tmpadr, ebp, -27
store eax, tmpadr, 1

;mov [ebp-0x17], eax
add tmpadr, ebp, -23
store eax, tmpadr, 1

;lea eax, [ebp+0xa]
add eax, ebp, 10

;mov edx, [loc_42A2F0]
load edx, loc_42A2F0, 4

;mov edi, eax
mov edi, eax

;mov eax, [loc_42A2E8]
load eax, loc_42A2E8, 4

;mov esi, [loc_42A2F4]
load esi, loc_42A2F4, 4

;cmp ebp, loc_42A95F
mov tmp1, loc_42A95F
cmoveq ebp, tmp1, tmpcnd, 0, 1

;mov [edi], eax
store eax, edi, 1

;mov [ebp+0x2], bl
add tmpadr, ebp, 2
store8 ebx, tmpadr, 1

;mov [ebp], bl
store8 ebx, ebp, 1

;mov dword [ebp-0x33], 0x44fa0000
add tmpadr, ebp, -51
mov tmp1, 0x44fa0000
store tmp1, tmpadr, 1

;mov [edi+0x4], ecx
add tmpadr, edi, 4
store ecx, tmpadr, 1

;mov [ebp-0x2f], ebx
add tmpadr, ebp, -47
store ebx, tmpadr, 1

;mov [ebp-0x2b], ebx
add tmpadr, ebp, -43
store ebx, tmpadr, 1

;mov [ebp-0x27], ebx
add tmpadr, ebp, -39
store ebx, tmpadr, 1

;mov [edi+0x8], edx
add tmpadr, edi, 8
store edx, tmpadr, 1

;mov dword [ebp-0x23], 0x3f800000
add tmpadr, ebp, -35
mov tmp1, 0x3f800000
store tmp1, tmpadr, 1

;mov dword [ebp-0x1f], 0x3f1eb867
add tmpadr, ebp, -31
mov tmp1, 0x3f1eb867
store tmp1, tmpadr, 1

;mov [ebp-0x3], bl
add tmpadr, ebp, -3
store8 ebx, tmpadr, 1

;mov [edi+0xc], esi
add tmpadr, edi, 12
store esi, tmpadr, 1

;lea edi, [ebp+0x1a]
add edi, ebp, 26

;mov [ebp-0xf], ebx
add tmpadr, ebp, -15
store ebx, tmpadr, 1

;mov [ebp-0x13], ebx
add tmpadr, ebp, -19
store ebx, tmpadr, 1

;mov [edi], eax
store eax, edi, 1

;mov [ebp+0x5], bl
add tmpadr, ebp, 5
store8 ebx, tmpadr, 1

;mov [ebp+0x4], bl
add tmpadr, ebp, 4
store8 ebx, tmpadr, 1

;mov [ebp-0x7], ebx
add tmpadr, ebp, -7
store ebx, tmpadr, 1

;mov [edi+0x4], ecx
add tmpadr, edi, 4
store ecx, tmpadr, 1

;mov [ebp-0x1], bl
add tmpadr, ebp, -1
store8 ebx, tmpadr, 1

;mov [ebp-0x2], bl
add tmpadr, ebp, -2
store8 ebx, tmpadr, 1

;mov [ebp+0x6], bl
add tmpadr, ebp, 6
store8 ebx, tmpadr, 1

;mov [edi+0x8], edx
add tmpadr, edi, 8
store edx, tmpadr, 1

;mov [ebp+0x9], bl
add tmpadr, ebp, 9
store8 ebx, tmpadr, 1

;mov [ebp+0x8], bl
add tmpadr, ebp, 8
store8 ebx, tmpadr, 1

;mov [edi+0xc], esi
add tmpadr, edi, 12
store esi, tmpadr, 1

;jz short loc_406701
ctcallz tmpcnd, loc_406701

tcall loc_4066EC
endp

proc loc_4066EC
;cmp ebp, loc_42B99F
mov tmp1, loc_42B99F
cmoveq ebp, tmp1, tmpcnd, 0, 1

;jz short loc_406701
ctcallz tmpcnd, loc_406701

tcall loc_4066F4
endp

proc loc_4066F4
;mov esi, loc_42A2F8
mov esi, loc_42A2F8

;mov [ebp+0x7], bl
add tmpadr, ebp, 7
store8 ebx, tmpadr, 1

;mov [ebp-0x37], esi
add tmpadr, ebp, -55
store esi, tmpadr, 1

;jmp short loc_406711
tcall loc_406711
endp

proc loc_406701
;mov dword [ebp-0x37], loc_42A4FC
add tmpadr, ebp, -55
mov tmp1, loc_42A4FC
store tmp1, tmpadr, 1

;mov byte [ebp+0x7], 0x1
add tmpadr, ebp, 7
mov tmp1, 0x1
store8 tmp1, tmpadr, 1

;mov esi, loc_42A2F8
mov esi, loc_42A2F8

tcall loc_406711
endp

proc loc_406711
;mov cl, [ebp+0x7]
add tmpadr, ebp, 7
load8z tmp0, tmpadr, 1
and ecx, ecx, 0xffffff00
or ecx, ecx, tmp0

;xor dl, dl
and edx, edx, 0xffffff00

;push ecx
PUSH ecx

;xor cl, cl
and ecx, ecx, 0xffffff00

;call loc_405910
PUSH loc_40671E
tcall loc_405910
endp

proc loc_40671E
;mov cl, [ebp+0x7]
add tmpadr, ebp, 7
load8z tmp0, tmpadr, 1
and ecx, ecx, 0xffffff00
or ecx, ecx, tmp0

;cmp cl, bl
and eflags, eflags, ~(CF|ZF)
and tmp3, ecx, 0xff
and tmp5, ebx, 0xff
cmovult tmp3, tmp5, tmp3, CF, 0
or eflags, eflags, tmp3
sub tmp1, ecx, ebx
and tmp0, tmp1, 0xff
cmovz tmp0, tmp0, ZF, 0
or eflags, eflags, tmp0

;jz short loc_40676E
and tmp1, eflags, ZF
ctcallnz tmp1, loc_40676E

tcall loc_406725
endp

proc loc_406725
;jbe short loc_406769
and tmp1, eflags, ZF | CF
ctcallnz tmp1, loc_406769

tcall loc_406727
endp

proc loc_406727
;cmp cl, 0x2
and eflags, eflags, ~(CF|ZF)
and tmp3, ecx, 0xff
cmovult tmp3, 0x2, tmp3, CF, 0
or eflags, eflags, tmp3
sub tmp1, ecx, 2
and tmp0, tmp1, 0xff
cmovz tmp0, tmp0, ZF, 0
or eflags, eflags, tmp0

;ja short loc_406769
and tmp1, eflags, ZF | CF
ctcallz tmp1, loc_406769

tcall loc_40672C
endp

proc loc_40672C
;mov [esp+0x10], cl
add tmpadr, esp, 16
store8 ecx, tmpadr, 4

;mov [ebp-0x3b], eax
add tmpadr, ebp, -59
store eax, tmpadr, 1

;mov eax, [esp+0x10]
add tmpadr, esp, 16
load eax, tmpadr, 4

;mov [ebp-0x3f], ebx
add tmpadr, ebp, -63
store ebx, tmpadr, 1

;and eax, 0xff
and eax, eax, 0xff

;mov edx, eax
mov edx, eax

;shl edx, 0x7
shl edx, edx, 7

;add edx, eax
add edx, edx, eax

;mov eax, [edx*4+loc_42A2F8]
mov tmpadr, loc_42A2F8
shl tmp0, edx, 2
add tmpadr, tmpadr, tmp0
load eax, tmpadr, 4

;cmp eax, ebx
cmoveq eax, ebx, tmpcnd, 0, 1

;lea edi, [edx*4+loc_42A2F8]
mov tmpadr, loc_42A2F8
shl tmp0, edx, 2
add edi, tmpadr, tmp0

;mov [ebp-0x37], edi
add tmpadr, ebp, -55
store edi, tmpadr, 1

;jz short loc_406777
ctcallz tmpcnd, loc_406777

tcall loc_40675B
endp

proc loc_40675B
;mov ecx, 0x81
mov ecx, 0x81

;mov esi, loc_42A2F8
mov esi, loc_42A2F8

;rep movsd
REP_MOVSD

;jmp short loc_406777
tcall loc_406777
endp

proc loc_406769
;mov [ebp-0x3f], ebx
add tmpadr, ebp, -63
store ebx, tmpadr, 1

;jmp short loc_406771
tcall loc_406771
endp

proc loc_40676E
;mov [ebp-0x3f], eax
add tmpadr, ebp, -63
store eax, tmpadr, 1

tcall loc_406771
endp

proc loc_406771
;mov [ebp-0x3b], ebx
add tmpadr, ebp, -59
store ebx, tmpadr, 1

;mov [ebp-0x37], esi
add tmpadr, ebp, -55
store esi, tmpadr, 1

tcall loc_406777
endp

proc loc_406777
;mov dword [ebp-0xb], 0x3da14285
add tmpadr, ebp, -11
mov tmp1, 0x3da14285
store tmp1, tmpadr, 1

;add ebp, 0x104
add ebp, ebp, 260

;cmp ebp, loc_42B99F
mov tmp1, loc_42B99F
cmovslt ebp, tmp1, tmpcnd, 0, 1

;jl near loc_406657
ctcallz tmpcnd, loc_406657

tcall loc_406790
endp

proc loc_406790
;fld dword [loc_41B6BC]
load tmp1, loc_41B6BC, 4
FLD_FLOAT tmp1

;fmul dword [loc_4181F4]
load tmp1, loc_4181F4, 4
FMUL_FLOAT tmp1

;pop edi
POP edi

;pop esi
POP esi

;pop ebp
POP ebp

;mov dword [loc_41B6B8], 0x3f4ccccd
mov tmp1, 0x3f4ccccd
store tmp1, loc_41B6B8, 4

;pop ebx
POP ebx

;fstp dword [loc_41B6FC]
FSTP_FLOAT
store tmp0, loc_41B6FC, 4

;pop ecx
POP ecx

;ret
POP tmp1
tcall tmp1
endp

proc loc_4067C0
;mov eax, [ecx+0x1c]
add tmpadr, ecx, 28
load eax, tmpadr, 1

;test eax, eax
mov tmpcnd, eax

;jz short loc_4067EA
ctcallz tmpcnd, loc_4067EA

tcall loc_4067C7
endp

proc loc_4067C7
;mov eax, [esp+0x4]
add tmpadr, esp, 4
load eax, tmpadr, 4

;push esi
PUSH esi

;mov esi, [ecx+0x20]
add tmpadr, ecx, 32
load esi, tmpadr, 1

;shr eax, 0x7
lshr eax, eax, 7

;and al, 0x7f
and eax, eax, 0xffffff7f

;sub al, 0x40
sub tmp3, eax, 64
ins8ll eax, eax, tmp3

;and edx, 0xff
and edx, edx, 0xff

;mov [edx+esi+0x4], al
add tmpadr, edx, esi
add tmpadr, tmpadr, 4
store8 eax, tmpadr, 1

;mov ecx, [ecx+0x20]
add tmpadr, ecx, 32
load ecx, tmpadr, 1

;pop esi
POP esi

;mov dword [ecx], 0x1
mov tmp1, 0x1
store tmp1, ecx, 1

tcall loc_4067EA
endp

proc loc_4067EA
;ret 0x4
POP tmp1
add esp, esp, 4
tcall tmp1
endp

proc loc_4067F0
;mov eax, [ecx+0x1c]
add tmpadr, ecx, 28
load eax, tmpadr, 1

;test eax, eax
mov tmpcnd, eax

;jz short loc_40681B
ctcallz tmpcnd, loc_40681B

tcall loc_4067F7
endp

proc loc_4067F7
;mov eax, [esp+0x4]
add tmpadr, esp, 4
load eax, tmpadr, 4

;push esi
PUSH esi

;mov esi, [ecx+0x20]
add tmpadr, ecx, 32
load esi, tmpadr, 1

;shr eax, 0x7
lshr eax, eax, 7

;and al, 0x7f
and eax, eax, 0xffffff7f

;and edx, 0xff
and edx, edx, 0xff

;mov [edx+esi+0x84], al
add tmpadr, edx, esi
add tmpadr, tmpadr, 132
store8 eax, tmpadr, 1

;mov ecx, [ecx+0x20]
add tmpadr, ecx, 32
load ecx, tmpadr, 1

;pop esi
POP esi

;mov dword [ecx], 0x1
mov tmp1, 0x1
store tmp1, ecx, 1

tcall loc_40681B
endp

proc loc_40681B
;ret 0x4
POP tmp1
add esp, esp, 4
tcall tmp1
endp

proc loc_406820
;mov eax, [ecx+0x1c]
add tmpadr, ecx, 28
load eax, tmpadr, 1

;test eax, eax
mov tmpcnd, eax

;jz short loc_40684D
ctcallz tmpcnd, loc_40684D

tcall loc_406827
endp

proc loc_406827
;mov eax, [esp+0x4]
add tmpadr, esp, 4
load eax, tmpadr, 4

;push esi
PUSH esi

;mov esi, [ecx+0x20]
add tmpadr, ecx, 32
load esi, tmpadr, 1

;shr eax, 0x7
lshr eax, eax, 7

;and al, 0x7f
and eax, eax, 0xffffff7f

;sub al, 0x40
sub tmp3, eax, 64
ins8ll eax, eax, tmp3

;and edx, 0xff
and edx, edx, 0xff

;mov [edx+esi+0x104], al
add tmpadr, edx, esi
add tmpadr, tmpadr, 260
store8 eax, tmpadr, 1

;mov ecx, [ecx+0x20]
add tmpadr, ecx, 32
load ecx, tmpadr, 1

;pop esi
POP esi

;mov dword [ecx], 0x1
mov tmp1, 0x1
store tmp1, ecx, 1

tcall loc_40684D
endp

proc loc_40684D
;ret 0x4
POP tmp1
add esp, esp, 4
tcall tmp1
endp

proc loc_406850
;mov eax, [ecx+0x1c]
add tmpadr, ecx, 28
load eax, tmpadr, 1

;test eax, eax
mov tmpcnd, eax

;jz short loc_40687B
ctcallz tmpcnd, loc_40687B

tcall loc_406857
endp

proc loc_406857
;mov eax, [esp+0x4]
add tmpadr, esp, 4
load eax, tmpadr, 4

;push esi
PUSH esi

;mov esi, [ecx+0x20]
add tmpadr, ecx, 32
load esi, tmpadr, 1

;shr eax, 0x7
lshr eax, eax, 7

;and al, 0x7f
and eax, eax, 0xffffff7f

;and edx, 0xff
and edx, edx, 0xff

;mov [edx+esi+0x184], al
add tmpadr, edx, esi
add tmpadr, tmpadr, 388
store8 eax, tmpadr, 1

;mov ecx, [ecx+0x20]
add tmpadr, ecx, 32
load ecx, tmpadr, 1

;pop esi
POP esi

;mov dword [ecx], 0x1
mov tmp1, 0x1
store tmp1, ecx, 1

tcall loc_40687B
endp

proc loc_40687B
;ret 0x4
POP tmp1
add esp, esp, 4
tcall tmp1
endp

proc loc_406880
;push ebx
PUSH ebx

;push esi
PUSH esi

;mov esi, ecx
mov esi, ecx

;push edi
PUSH edi

;shr edx, 0x7
lshr edx, edx, 7

;mov edi, [esi]
load edi, esi, 1

;sub dl, 0x40
sub tmp3, edx, 64
ins8ll edx, edx, tmp3

;cmp edi, esi
cmoveq edi, esi, tmpcnd, 0, 1

;mov [esi+0x56], dl
add tmpadr, esi, 86
store8 edx, tmpadr, 1

;jz short loc_4068A9
ctcallz tmpcnd, loc_4068A9

tcall loc_406894
endp

proc loc_406894
;mov edx, edi
mov edx, edi

;mov ecx, esi
mov ecx, esi

;call loc_409990
PUSH loc_40689D
tcall loc_409990
endp

proc loc_40689D
;mov eax, [edi+0x10]
add tmpadr, edi, 16
load eax, tmpadr, 1

;fstp dword [eax+0x70]
FSTP_FLOAT
add tmpadr, eax, 112
store tmp0, tmpadr, 1

;mov edi, [edi]
load edi, edi, 1

;cmp edi, esi
cmoveq edi, esi, tmpcnd, 0, 1

;jnz short loc_406894
ctcallnz tmpcnd, loc_406894

tcall loc_4068A9
endp

proc loc_4068A9
;mov edi, [esi+0x8]
add tmpadr, esi, 8
load edi, tmpadr, 1

;lea ebx, [esi+0x8]
add ebx, esi, 8

;cmp edi, ebx
cmoveq edi, ebx, tmpcnd, 0, 1

;jz short loc_4068C8
ctcallz tmpcnd, loc_4068C8

tcall loc_4068B3
endp

proc loc_4068B3
;mov edx, edi
mov edx, edi

;mov ecx, esi
mov ecx, esi

;call loc_409990
PUSH loc_4068BC
tcall loc_409990
endp

proc loc_4068BC
;mov ecx, [edi+0x10]
add tmpadr, edi, 16
load ecx, tmpadr, 1

;fstp dword [ecx+0x70]
FSTP_FLOAT
add tmpadr, ecx, 112
store tmp0, tmpadr, 1

;mov edi, [edi]
load edi, edi, 1

;cmp edi, ebx
cmoveq edi, ebx, tmpcnd, 0, 1

;jnz short loc_4068B3
ctcallnz tmpcnd, loc_4068B3

tcall loc_4068C8
endp

proc loc_4068C8
;mov edi, [esi+0x10]
add tmpadr, esi, 16
load edi, tmpadr, 1

;lea ebx, [esi+0x10]
add ebx, esi, 16

;cmp edi, ebx
cmoveq edi, ebx, tmpcnd, 0, 1

;jz short loc_4068E7
ctcallz tmpcnd, loc_4068E7

tcall loc_4068D2
endp

proc loc_4068D2
;mov edx, edi
mov edx, edi

;mov ecx, esi
mov ecx, esi

;call loc_409990
PUSH loc_4068DB
tcall loc_409990
endp

proc loc_4068DB
;mov edx, [edi+0x10]
add tmpadr, edi, 16
load edx, tmpadr, 1

;fstp dword [edx+0x70]
FSTP_FLOAT
add tmpadr, edx, 112
store tmp0, tmpadr, 1

;mov edi, [edi]
load edi, edi, 1

;cmp edi, ebx
cmoveq edi, ebx, tmpcnd, 0, 1

;jnz short loc_4068D2
ctcallnz tmpcnd, loc_4068D2

tcall loc_4068E7
endp

proc loc_4068E7
;pop edi
POP edi

;pop esi
POP esi

;pop ebx
POP ebx

;ret
POP tmp1
tcall tmp1
endp

proc loc_4068F0
;push ecx
PUSH ecx

;and edx, 0xffff
and edx, edx, 0xffff

;push esi
PUSH esi

;shr edx, 0x7
lshr edx, edx, 7

;sub edx, 0x40
sub edx, edx, 64

;mov esi, ecx
mov esi, ecx

;test edx, edx
cmovsgt edx, 0, tmpcnd, 0, 1

;mov [esp+0x4], edx
add tmpadr, esp, 4
store edx, tmpadr, 4

;jle short loc_40691D
ctcallnz tmpcnd, loc_40691D

tcall loc_406908
endp

proc loc_406908
;fild dword [esp+0x4]
add tmpadr, esp, 4
load tmp1, tmpadr, 4
FILD_INT32 tmp1

;fmul dword [loc_41B6C0]
load tmp1, loc_41B6C0, 4
FMUL_FLOAT tmp1

;call _ftol_asm
PUSH loc_406917
tcall _ftol_asm
endp

proc loc_406917
;mov [esi+0x55], al
add tmpadr, esi, 85
store8 eax, tmpadr, 1

;pop esi
POP esi

;pop ecx
POP ecx

;ret
POP tmp1
tcall tmp1
endp

proc loc_40691D
;mov [esi+0x55], dl
add tmpadr, esi, 85
store8 edx, tmpadr, 1

;pop esi
POP esi

;pop ecx
POP ecx

;ret
POP tmp1
tcall tmp1
endp

proc loc_406930
;push ecx
PUSH ecx

;push esi
PUSH esi

;mov esi, ecx
mov esi, ecx

;push edi
PUSH edi

;mov al, [esi+0x5e]
add tmpadr, esi, 94
load8z tmp0, tmpadr, 1
and eax, eax, 0xffffff00
or eax, eax, tmp0

;mov cl, [esi+0x5d]
add tmpadr, esi, 93
load8z tmp0, tmpadr, 1
and ecx, ecx, 0xffffff00
or ecx, ecx, tmp0

;push eax
PUSH eax

;call loc_405910
PUSH loc_406941
tcall loc_405910
endp

proc loc_406941
;mov cl, [esi+0x5e]
add tmpadr, esi, 94
load8z tmp0, tmpadr, 1
and ecx, ecx, 0xffffff00
or ecx, ecx, tmp0

;xor edx, edx
xor edx, edx, edx

;cmp cl, dl
and eflags, eflags, ~(CF|ZF)
and tmp3, ecx, 0xff
and tmp5, edx, 0xff
cmovult tmp3, tmp5, tmp3, CF, 0
or eflags, eflags, tmp3
sub tmp1, ecx, edx
and tmp0, tmp1, 0xff
cmovz tmp0, tmp0, ZF, 0
or eflags, eflags, tmp0

;jz short loc_40699A
and tmp1, eflags, ZF
ctcallnz tmp1, loc_40699A

tcall loc_40694A
endp

proc loc_40694A
;jbe short loc_406989
and tmp1, eflags, ZF | CF
ctcallnz tmp1, loc_406989

tcall loc_40694C
endp

proc loc_40694C
;cmp cl, 0x2
and eflags, eflags, ~(CF|ZF)
and tmp3, ecx, 0xff
cmovult tmp3, 0x2, tmp3, CF, 0
or eflags, eflags, tmp3
sub tmp1, ecx, 2
and tmp0, tmp1, 0xff
cmovz tmp0, tmp0, ZF, 0
or eflags, eflags, tmp0

;ja short loc_406989
and tmp1, eflags, ZF | CF
ctcallz tmp1, loc_406989

tcall loc_406951
endp

proc loc_406951
;mov [esp+0x8], cl
add tmpadr, esp, 8
store8 ecx, tmpadr, 4

;mov [esi+0x1c], eax
add tmpadr, esi, 28
store eax, tmpadr, 1

;mov eax, [esp+0x8]
add tmpadr, esp, 8
load eax, tmpadr, 4

;mov [esi+0x18], edx
add tmpadr, esi, 24
store edx, tmpadr, 1

;and eax, 0xff
and eax, eax, 0xff

;mov ecx, eax
mov ecx, eax

;shl ecx, 0x7
shl ecx, ecx, 7

;add ecx, eax
add ecx, ecx, eax

;lea edi, [ecx*4+loc_42A2F8]
mov tmpadr, loc_42A2F8
shl tmp0, ecx, 2
add edi, tmpadr, tmp0

;mov [esi+0x20], edi
add tmpadr, esi, 32
store edi, tmpadr, 1

;cmp [edi], edx
load tmp1, edi, 1
cmoveq tmp1, edx, tmpcnd, 0, 1

;jz short loc_4069A7
ctcallz tmpcnd, loc_4069A7

tcall loc_406979
endp

proc loc_406979
;mov ecx, 0x81
mov ecx, 0x81

;mov esi, loc_42A2F8
mov esi, loc_42A2F8

;rep movsd
REP_MOVSD

;pop edi
POP edi

;pop esi
POP esi

;pop ecx
POP ecx

;ret
POP tmp1
tcall tmp1
endp

proc loc_406989
;mov [esi+0x18], edx
add tmpadr, esi, 24
store edx, tmpadr, 1

;mov [esi+0x1c], edx
add tmpadr, esi, 28
store edx, tmpadr, 1

;mov dword [esi+0x20], loc_42A2F8
add tmpadr, esi, 32
mov tmp1, loc_42A2F8
store tmp1, tmpadr, 1

;pop edi
POP edi

;pop esi
POP esi

;pop ecx
POP ecx

;ret
POP tmp1
tcall tmp1
endp

proc loc_40699A
;mov [esi+0x18], eax
add tmpadr, esi, 24
store eax, tmpadr, 1

;mov [esi+0x1c], edx
add tmpadr, esi, 28
store edx, tmpadr, 1

;mov dword [esi+0x20], loc_42A2F8
add tmpadr, esi, 32
mov tmp1, loc_42A2F8
store tmp1, tmpadr, 1

tcall loc_4069A7
endp

proc loc_4069A7
;pop edi
POP edi

;pop esi
POP esi

;pop ecx
POP ecx

;ret
POP tmp1
tcall tmp1
endp

proc loc_4069B0
;sub esp, 0x8
sub esp, esp, 8

;push ebx
PUSH ebx

;push ebp
PUSH ebp

;push esi
PUSH esi

;push edi
PUSH edi

;mov esi, loc_42A967
mov esi, loc_42A967

;mov ebp, 0x10
mov ebp, 0x10

tcall loc_4069C1
endp

proc loc_4069C1
;cmp byte [esi], 0x0
load8z tmp1, esi, 1
and tmpcnd, tmp1, 0xff

;jz short loc_406A3F
ctcallz tmpcnd, loc_406A3F

tcall loc_4069C6
endp

proc loc_4069C6
;mov ecx, [loc_42A2E8]
load ecx, loc_42A2E8, 4

;mov edx, [loc_42A2EC]
load edx, loc_42A2EC, 4

;lea eax, [esi+0x2]
add eax, esi, 2

;mov byte [esi], 0x0
store8 0, esi, 1

;mov [eax], ecx
store ecx, eax, 1

;mov ecx, [loc_42A2F0]
load ecx, loc_42A2F0, 4

;mov [eax+0x4], edx
add tmpadr, eax, 4
store edx, tmpadr, 1

;mov edx, [loc_42A2F4]
load edx, loc_42A2F4, 4

;mov [eax+0x8], ecx
add tmpadr, eax, 8
store ecx, tmpadr, 1

;mov [eax+0xc], edx
add tmpadr, eax, 12
store edx, tmpadr, 1

;mov al, [esi+0x1]
add tmpadr, esi, 1
load8z tmp0, tmpadr, 1
and eax, eax, 0xffffff00
or eax, eax, tmp0

;test al, al
and tmpcnd, eax, 0xff

;jz short loc_406A3F
ctcallz tmpcnd, loc_406A3F

tcall loc_4069F6
endp

proc loc_4069F6
;xor edx, edx
xor edx, edx, edx

;mov byte [esi+0x1], 0x0
add tmpadr, esi, 1
store8 0, tmpadr, 1

;lea edi, [esi+0x12]
add edi, esi, 18

;mov [esp+0x14], edx
add tmpadr, esp, 20
store edx, tmpadr, 4

tcall loc_406A03
endp

proc loc_406A03
;mov al, [edi]
load8z tmp0, edi, 1
and eax, eax, 0xffffff00
or eax, eax, tmp0

;mov byte [edi], 0x0
store8 0, edi, 1

;inc edi
add edi, edi, 1

;xor ebx, ebx
xor ebx, ebx, ebx

;test al, al
and tmpcnd, eax, 0xff

;mov [esp+0x13], al
add tmpadr, esp, 19
store8 eax, tmpadr, 1

;jz short loc_406A35
ctcallz tmpcnd, loc_406A35

tcall loc_406A13
endp

proc loc_406A13
;test al, 0x1
and tmpcnd, eax, 0x1

;jz short loc_406A2C
ctcallz tmpcnd, loc_406A2C

tcall loc_406A17
endp

proc loc_406A17
;shl dl, 0x3
shl tmp4, edx, 3
ins8ll edx, edx, tmp4

;or dl, bl
and tmp4, ebx, 0xff
or edx, edx, tmp4

;lea ecx, [esi-0x5f]
add ecx, esi, -95

;call loc_401440
PUSH loc_406A24
tcall loc_401440
endp

proc loc_406A24
;mov al, [esp+0x13]
add tmpadr, esp, 19
load8z tmp0, tmpadr, 1
and eax, eax, 0xffffff00
or eax, eax, tmp0

;mov edx, [esp+0x14]
add tmpadr, esp, 20
load edx, tmpadr, 4

tcall loc_406A2C
endp

proc loc_406A2C
;inc ebx
add ebx, ebx, 1

;shr al, 1
and eflags, eflags, ~ZF
and tmp4, eax, 0xff
lshr tmp4, tmp4, 1
and eax, eax, 0xffffff00
or eax, eax, tmp4
and tmp0, eax, 0xff
cmovz tmp0, tmp0, ZF, 0
or eflags, eflags, tmp0

;mov [esp+0x13], al
add tmpadr, esp, 19
store8 eax, tmpadr, 1

;jnz short loc_406A13
and tmp1, eflags, ZF
ctcallz tmp1, loc_406A13

tcall loc_406A35
endp

proc loc_406A35
;inc edx
add edx, edx, 1

;cmp edx, 0x10
cmovslt edx, 16, tmpcnd, 0, 1

;mov [esp+0x14], edx
add tmpadr, esp, 20
store edx, tmpadr, 4

;jl short loc_406A03
ctcallz tmpcnd, loc_406A03

tcall loc_406A3F
endp

proc loc_406A3F
;add esi, 0x104
add esi, esi, 260

;dec ebp
sub ebp, ebp, 1
mov tmpcnd, ebp

;jnz near loc_4069C1
ctcallnz tmpcnd, loc_4069C1

tcall loc_406A4C
endp

proc loc_406A4C
;pop edi
POP edi

;pop esi
POP esi

;pop ebp
POP ebp

;pop ebx
POP ebx

;add esp, 0x8
add esp, esp, 8

;ret
POP tmp1
tcall tmp1
endp

proc loc_406A60
;push ebp
PUSH ebp

;mov ebp, esp
mov ebp, esp

;sub esp, 0x30
sub esp, esp, 48

;mov [ebp-0x1c], ecx
add tmpadr, ebp, -28
store ecx, tmpadr, 4

tcall loc_406A69
endp

proc loc_406A69
;call timeGetTime
mov eax, 0 ; the result isn't used for anything
;mov edx, [loc_441848]
load edx, loc_441848, 4

;mov ecx, loc_441048
mov ecx, loc_441048

;mov [ebp-0x20], eax
add tmpadr, ebp, -32
store eax, tmpadr, 4

;call loc_40DA90
PUSH loc_406A82
tcall loc_40DA90
endp

proc loc_406A82
;mov edx, [loc_441848]
load edx, loc_441848, 4

;mov ecx, loc_441448
mov ecx, loc_441448

;call loc_40DA90
PUSH loc_406A92
tcall loc_40DA90
endp

proc loc_406A92
;mov eax, [loc_455D10]
load eax, loc_455D10, 4

;test eax, eax
mov tmpcnd, eax

;jz short loc_406AAC
ctcallz tmpcnd, loc_406AAC

tcall loc_406A9B
endp

proc loc_406A9B
;mov edx, [loc_44184C]
load edx, loc_44184C, 4

;mov ecx, [loc_455888]
load ecx, loc_455888, 4

;call loc_40DA90
PUSH loc_406AAC
tcall loc_40DA90
endp

proc loc_406AAC
;mov eax, [loc_455D14]
load eax, loc_455D14, 4

;test eax, eax
mov tmpcnd, eax

;jz short loc_406AC6
ctcallz tmpcnd, loc_406AC6

tcall loc_406AB5
endp

proc loc_406AB5
;mov edx, [loc_441848]
load edx, loc_441848, 4

;mov ecx, [loc_44586C]
load ecx, loc_44586C, 4

;call loc_40DA90
PUSH loc_406AC6
tcall loc_40DA90
endp

proc loc_406AC6
;push ebx
PUSH ebx

;push esi
PUSH esi

;push edi
PUSH edi

;fnstcw word [loc_441024]
FNSTCW_VOID
store16 tmp0, loc_441024, 4

;fldcw word [loc_41B708]
load16z tmp1, loc_41B708, 4
FLDCW_UINT16 tmp1

;mov dword [ebp-0x4], 0x0
add tmpadr, ebp, -4
store 0, tmpadr, 4

tcall loc_406ADC
endp

proc loc_406ADC
;mov edi, [ebp-0x4]
add tmpadr, ebp, -4
load edi, tmpadr, 4

;xor eax, eax
xor eax, eax, eax

;mov ebx, 0x3
mov ebx, 0x3

;mov al, [edi+loc_455F68]
mov tmpadr, loc_455F68
add tmpadr, tmpadr, edi
load8z tmp0, tmpadr, 1
and eax, eax, 0xffffff00
or eax, eax, tmp0

;cmp eax, ebx
cmovugt eax, ebx, tmpcnd, 0, 1

;ja near loc_407315
ctcallz tmpcnd, loc_407315

tcall loc_406AF4
endp

proc loc_406AF4
;jmp dword [eax*4+loc_407AF4]
mov tmpadr, loc_407AF4
shl tmp0, eax, 2
add tmpadr, tmpadr, tmp0
load tmp1, tmpadr, 4
tcall tmp1
endp

proc loc_406AFB
;mov al, [edi+loc_440D88]
mov tmpadr, loc_440D88
add tmpadr, tmpadr, edi
load8z tmp0, tmpadr, 1
and eax, eax, 0xffffff00
or eax, eax, tmp0

;test al, al
and tmpcnd, eax, 0xff

;jz near loc_406C6B
ctcallz tmpcnd, loc_406C6B

tcall loc_406B09
endp

proc loc_406B09
;mov al, [edi+loc_440E08]
mov tmpadr, loc_440E08
add tmpadr, tmpadr, edi
load8z tmp0, tmpadr, 1
and eax, eax, 0xffffff00
or eax, eax, tmp0

;test al, al
and tmpcnd, eax, 0xff

;jnz near loc_40731C
ctcallnz tmpcnd, loc_40731C

tcall loc_406B17
endp

proc loc_406B17
;lea ecx, [edi+edi*8]
shl tmpadr, edi, 3
add ecx, tmpadr, edi

;xor esi, esi
xor esi, esi, esi

;shl ecx, 0x5
shl ecx, ecx, 5

;add ecx, loc_42BD88
mov tmp1, loc_42BD88
add ecx, ecx, tmp1

;fld dword [ecx+0xf4]
add tmpadr, ecx, 244
load tmp1, tmpadr, 1
FLD_FLOAT tmp1

;fmul dword [ecx+0xec]
add tmpadr, ecx, 236
load tmp1, tmpadr, 1
FMUL_FLOAT tmp1

;mov edx, [ecx]
load edx, ecx, 1

;fadd dword [ecx+0xf8]
add tmpadr, ecx, 248
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;fstp dword [ecx+0xf8]
FSTP_FLOAT
add tmpadr, ecx, 248
store tmp0, tmpadr, 1

;mov word [edx+0xaa], 0x1
add tmpadr, edx, 170
mov tmp1, 0x1
store16 tmp1, tmpadr, 1

;mov [ecx+0xfe], bx
add tmpadr, ecx, 254
store16 ebx, tmpadr, 1

;movsx eax, word [ecx+0xfe]
add tmpadr, ecx, 254
load16s eax, tmpadr, 1

;mov [ecx+0xec], esi
add tmpadr, ecx, 236
store esi, tmpadr, 1

;mov ax, [edx+eax*2+0xa4]
shl tmpadr, eax, 1
add tmpadr, tmpadr, edx
add tmpadr, tmpadr, 164
load16z tmp0, tmpadr, 1
and eax, eax, 0xffff0000
or eax, eax, tmp0

;cmp ax, si
sub tmp1, eax, esi
and tmpcnd, tmp1, 0xffff

;mov [ecx+0xfc], ax
add tmpadr, ecx, 252
store16 eax, tmpadr, 1

;jnz short loc_406BB2
ctcallnz tmpcnd, loc_406BB2

tcall loc_406B70
endp

proc loc_406B70
;mov ax, [ecx+0xfe]
add tmpadr, ecx, 254
load16z tmp0, tmpadr, 1
and eax, eax, 0xffff0000
or eax, eax, tmp0

;movsx ebx, ax
ext16s ebx, eax

;inc eax
add eax, eax, 1

;mov ebx, [edx+ebx*4+0x94]
shl tmpadr, ebx, 2
add tmpadr, tmpadr, edx
add tmpadr, tmpadr, 148
load ebx, tmpadr, 1

;cmp ax, 0x3
and eflags, eflags, ~(SF|OF)
ext16s tmp3, eax
cmovslt tmp3, -32765, tmp3, OF, 0
or eflags, eflags, tmp3
sub tmp1, eax, 3
and tmp0, tmp1, 0x8000
cmovz tmp0, tmp0, 0, SF
or eflags, eflags, tmp0

;mov [ecx+0xf8], ebx
add tmpadr, ecx, 248
store ebx, tmpadr, 1

;mov [ecx+0xf0], esi
add tmpadr, ecx, 240
store esi, tmpadr, 1

;mov [ecx+0xfe], ax
add tmpadr, ecx, 254
store16 eax, tmpadr, 1

;jge short loc_406BE7
lshr tmp1, eflags, OF_SHIFT - SF_SHIFT
xor tmp1, tmp1, eflags
and tmp1, tmp1, SF
ctcallz tmp1, loc_406BE7

tcall loc_406B9B
endp

proc loc_406B9B
;movsx eax, ax
ext16s eax, eax

;mov ax, [edx+eax*2+0xa4]
shl tmpadr, eax, 1
add tmpadr, tmpadr, edx
add tmpadr, tmpadr, 164
load16z tmp0, tmpadr, 1
and eax, eax, 0xffff0000
or eax, eax, tmp0

;cmp ax, si
sub tmp1, eax, esi
and tmpcnd, tmp1, 0xffff

;mov [ecx+0xfc], ax
add tmpadr, ecx, 252
store16 eax, tmpadr, 1

;jz short loc_406B70
ctcallz tmpcnd, loc_406B70

tcall loc_406BB2
endp

proc loc_406BB2
;movsx eax, word [ecx+0xfe]
add tmpadr, ecx, 254
load16s eax, tmpadr, 1

;fld dword [edx+eax*4+0x94]
shl tmpadr, eax, 2
add tmpadr, tmpadr, edx
add tmpadr, tmpadr, 148
load tmp1, tmpadr, 1
FLD_FLOAT tmp1

;fsub dword [ecx+0xf8]
add tmpadr, ecx, 248
load tmp1, tmpadr, 1
FSUB_FLOAT tmp1

;xor eax, eax
xor eax, eax, eax

;mov ax, [ecx+0xfc]
add tmpadr, ecx, 252
load16z tmp0, tmpadr, 1
and eax, eax, 0xffff0000
or eax, eax, tmp0

;mov [ebp-0x18], eax
add tmpadr, ebp, -24
store eax, tmpadr, 4

;fstp dword [ecx+0xf4]
FSTP_FLOAT
add tmpadr, ecx, 244
store tmp0, tmpadr, 1

;fild dword [ebp-0x18]
add tmpadr, ebp, -24
load tmp1, tmpadr, 4
FILD_INT32 tmp1

;fdivr dword [loc_4189F4]
load tmp1, loc_4189F4, 4
FDIVR_FLOAT tmp1

;fstp dword [ecx+0xf0]
FSTP_FLOAT
add tmpadr, ecx, 240
store tmp0, tmpadr, 1

tcall loc_406BE7
endp

proc loc_406BE7
;fld dword [edx+0xb0]
add tmpadr, edx, 176
load tmp1, tmpadr, 1
FLD_FLOAT tmp1

;fcomp dword [loc_4189F0]
load tmp1, loc_4189F0, 4
FCOMP_FLOAT tmp1

;fnstsw ax
FNSTSW_VOID
and eax, eax, 0xffff0000
or eax, eax, tmp0

;test ah, 0x1
and tmpcnd, eax, 0x100

;jz short loc_406C19
ctcallz tmpcnd, loc_406C19

tcall loc_406BFA
endp

proc loc_406BFA
;fld dword [edx+0xb4]
add tmpadr, edx, 180
load tmp1, tmpadr, 1
FLD_FLOAT tmp1

;fcomp dword [loc_4189F0]
load tmp1, loc_4189F0, 4
FCOMP_FLOAT tmp1

;fnstsw ax
FNSTSW_VOID
and eax, eax, 0xffff0000
or eax, eax, tmp0

;test ah, 0x1
and tmpcnd, eax, 0x100

;mov eax, loc_40E270
mov eax, loc_40E270

;jnz short loc_406C4F
ctcallnz tmpcnd, loc_406C4F

tcall loc_406C12
endp

proc loc_406C12
;mov eax, loc_40E390
mov eax, loc_40E390

;jmp short loc_406C4F
tcall loc_406C4F
endp

proc loc_406C19
;fld dword [edx+0xb4]
add tmpadr, edx, 180
load tmp1, tmpadr, 1
FLD_FLOAT tmp1

;fcomp dword [loc_4189F0]
load tmp1, loc_4189F0, 4
FCOMP_FLOAT tmp1

;cmp [loc_41B6F4], esi
load tmp1, loc_41B6F4, 4
and eflags, eflags, ~ZF
sub tmp1, tmp1, esi
cmovz tmp1, tmp0, ZF, 0
or eflags, eflags, tmp0

;fnstsw ax
FNSTSW_VOID
and eax, eax, 0xffff0000
or eax, eax, tmp0

;jz short loc_406C40
and tmp1, eflags, ZF
ctcallnz tmp1, loc_406C40

tcall loc_406C2F
endp

proc loc_406C2F
;test ah, 0x1
and tmpcnd, eax, 0x100

;mov eax, loc_40E520
mov eax, loc_40E520

;jnz short loc_406C4F
ctcallnz tmpcnd, loc_406C4F

tcall loc_406C39
endp

proc loc_406C39
;mov eax, loc_40E680
mov eax, loc_40E680

;jmp short loc_406C4F
tcall loc_406C4F
endp

proc loc_406C40
;test ah, 0x1
and tmpcnd, eax, 0x100

;mov eax, loc_40E840
mov eax, loc_40E840

;jnz short loc_406C4F
ctcallnz tmpcnd, loc_406C4F

tcall loc_406C4A
endp

proc loc_406C4A
;mov eax, loc_40E9D0
mov eax, loc_40E9D0

tcall loc_406C4F
endp

proc loc_406C4F
;mov [ecx+0xe0], eax
add tmpadr, ecx, 224
store eax, tmpadr, 1

;mov dword [ecx+0xe8], loc_407FE0
add tmpadr, ecx, 232
mov tmp1, loc_407FE0
store tmp1, tmpadr, 1

;mov byte [edi+loc_440E08], 0x1
mov tmpadr, loc_440E08
add tmpadr, tmpadr, edi
mov tmp1, 0x1
store8 tmp1, tmpadr, 1

;jmp loc_40731C
tcall loc_40731C
endp

proc loc_406C6B
;mov ecx, [edi*4+loc_455D68]
mov tmpadr, loc_455D68
shl tmp0, edi, 2
add tmpadr, tmpadr, tmp0
load ecx, tmpadr, 4

;lea esi, [edi+edi*8]
shl tmpadr, edi, 3
add esi, tmpadr, edi

;lea eax, [edi+edi*2]
shl tmpadr, edi, 1
add eax, tmpadr, edi

;mov [ebp-0x8], ecx
add tmpadr, ebp, -8
store ecx, tmpadr, 4

;shl esi, 0x5
shl esi, esi, 5

;shl eax, 0x6
shl eax, eax, 6

;add esi, loc_42BD88
mov tmp1, loc_42BD88
add esi, esi, tmp1

;lea edx, [eax+loc_434D88]
mov tmpadr, loc_434D88
add edx, tmpadr, eax

;mov [esi], ecx
store ecx, esi, 1

;cmp edx, ecx
cmoveq edx, ecx, tmpcnd, 0, 1

;lea ecx, [eax+loc_43AD88]
mov tmpadr, loc_43AD88
add ecx, tmpadr, eax

;jz short loc_406C9B
ctcallz tmpcnd, loc_406C9B

tcall loc_406C99
endp

proc loc_406C99
;mov ecx, edx
mov ecx, edx

tcall loc_406C9B
endp

proc loc_406C9B
;mov eax, [ebp-0x4]
add tmpadr, ebp, -4
load eax, tmpadr, 4

;mov ebx, [ebp-0x8]
add tmpadr, ebp, -8
load ebx, tmpadr, 4

;xor edx, edx
xor edx, edx, edx

;add ebx, 0x32
add ebx, ebx, 50

;mov [eax*4+loc_455D68], ecx
mov tmpadr, loc_455D68
shl tmp0, eax, 2
add tmpadr, tmpadr, tmp0
store ecx, tmpadr, 4

;mov ecx, loc_407F10
mov ecx, loc_407F10

;mov byte [eax+loc_440D88], 0x0
mov tmpadr, loc_440D88
add tmpadr, tmpadr, eax
store8 0, tmpadr, 1

;mov [esi+0xc4], ecx
add tmpadr, esi, 196
store ecx, tmpadr, 1

;mov [esi+0xe8], ecx
add tmpadr, esi, 232
store ecx, tmpadr, 1

;mov [esi+0x8], edx
add tmpadr, esi, 8
store edx, tmpadr, 1

;mov [esi+0x4], edx
add tmpadr, esi, 4
store edx, tmpadr, 1

;mov ecx, [ebx+0xe]
add tmpadr, ebx, 14
load ecx, tmpadr, 1

;mov [esi+0xc], ecx
add tmpadr, esi, 12
store ecx, tmpadr, 1

;lea edi, [esi+0x6c]
add edi, esi, 108

;mov dword [ebp-0xc], 0x2
add tmpadr, ebp, -12
mov tmp1, 0x2
store tmp1, tmpadr, 4

tcall loc_406CDB
endp

proc loc_406CDB
;cmp [ebx-0x12], edx
add tmpadr, ebx, -18
load tmp1, tmpadr, 1
cmoveq tmp1, edx, tmpcnd, 0, 1

;jz near loc_406E28
ctcallz tmpcnd, loc_406E28

tcall loc_406CE4
endp

proc loc_406CE4
;mov cl, [eax+loc_440D88]
mov tmpadr, loc_440D88
add tmpadr, tmpadr, eax
load8z tmp0, tmpadr, 1
and ecx, ecx, 0xffffff00
or ecx, ecx, tmp0

;inc cl
add tmp3, ecx, 1
ins8ll ecx, ecx, tmp3

;mov [eax+loc_440D88], cl
mov tmpadr, loc_440D88
add tmpadr, tmpadr, eax
store8 ecx, tmpadr, 1

;cmp [ebx-0x2], dx
add tmpadr, ebx, -2
load16z tmp1, tmpadr, 1
sub tmp1, tmp1, edx
and tmpcnd, tmp1, 0xffff

;mov al, cl
ins8ll eax, eax, ecx

;jz short loc_406D0A
ctcallz tmpcnd, loc_406D0A

tcall loc_406CFA
endp

proc loc_406CFA
;cmp al, 0x2
sub tmp1, eax, 2
and tmpcnd, tmp1, 0xff

;mov eax, loc_40DFF0
mov eax, loc_40DFF0

;jz short loc_406D18
ctcallz tmpcnd, loc_406D18

tcall loc_406D03
endp

proc loc_406D03
;mov eax, loc_40DD90
mov eax, loc_40DD90

;jmp short loc_406D18
tcall loc_406D18
endp

proc loc_406D0A
;cmp al, 0x2
sub tmp1, eax, 2
and tmpcnd, tmp1, 0xff

;mov eax, loc_40D8B0
mov eax, loc_40D8B0

;jz short loc_406D18
ctcallz tmpcnd, loc_406D18

tcall loc_406D13
endp

proc loc_406D13
;mov eax, loc_40D6F0
mov eax, loc_40D6F0

tcall loc_406D18
endp

proc loc_406D18
;mov [edi-0x28], eax
add tmpadr, edi, -40
store eax, tmpadr, 1

;xor eax, eax
xor eax, eax, eax

;mov [edi-0x18], edx
add tmpadr, edi, -24
store edx, tmpadr, 1

;mov ax, [ebx]
load16z tmp0, ebx, 1
and eax, eax, 0xffff0000
or eax, eax, tmp0

;sub eax, 0x7d00
sub eax, eax, 32000
mov tmpcnd, eax

;jz short loc_406D6E
ctcallz tmpcnd, loc_406D6E

tcall loc_406D2A
endp

proc loc_406D2A
;sub eax, 0x2eea
sub eax, eax, 12010
mov tmpcnd, eax

;jz short loc_406D52
ctcallz tmpcnd, loc_406D52

tcall loc_406D31
endp

proc loc_406D31
;sub eax, 0x5a
sub eax, eax, 90
mov tmpcnd, eax

;jz short loc_406D52
ctcallz tmpcnd, loc_406D52

tcall loc_406D36
endp

proc loc_406D36
;cmp dword [loc_441044], 0x5622
load tmp1, loc_441044, 4
cmoveq tmp1, 22050, tmpcnd, 0, 1

;jnz short loc_406D4A
ctcallnz tmpcnd, loc_406D4A

tcall loc_406D42
endp

proc loc_406D42
;fld dword [loc_4181E8]
load tmp1, loc_4181E8, 4
FLD_FLOAT tmp1

;jmp short loc_406D88
tcall loc_406D88
endp

proc loc_406D4A
;fld dword [loc_4189EC]
load tmp1, loc_4189EC, 4
FLD_FLOAT tmp1

;jmp short loc_406D88
tcall loc_406D88
endp

proc loc_406D52
;cmp dword [loc_441044], 0xac44
load tmp1, loc_441044, 4
cmoveq tmp1, 44100, tmpcnd, 0, 1

;jnz short loc_406D66
ctcallnz tmpcnd, loc_406D66

tcall loc_406D5E
endp

proc loc_406D5E
;fld dword [loc_4181E8]
load tmp1, loc_4181E8, 4
FLD_FLOAT tmp1

;jmp short loc_406D88
tcall loc_406D88
endp

proc loc_406D66
;fld dword [loc_4189E8]
load tmp1, loc_4189E8, 4
FLD_FLOAT tmp1

;jmp short loc_406D88
tcall loc_406D88
endp

proc loc_406D6E
;cmp dword [loc_441044], 0xac44
load tmp1, loc_441044, 4
cmoveq tmp1, 44100, tmpcnd, 0, 1

;jnz short loc_406D82
ctcallnz tmpcnd, loc_406D82

tcall loc_406D7A
endp

proc loc_406D7A
;fld dword [loc_4189E4]
load tmp1, loc_4189E4, 4
FLD_FLOAT tmp1

;jmp short loc_406D88
tcall loc_406D88
endp

proc loc_406D82
;fld dword [loc_4189E0]
load tmp1, loc_4189E0, 4
FLD_FLOAT tmp1

tcall loc_406D88
endp

proc loc_406D88
;fstp dword [edi]
FSTP_FLOAT
store tmp0, edi, 1

;mov eax, [ebx-0xe]
add tmpadr, ebx, -14
load eax, tmpadr, 1

;mov [ebp-0x24], edx
add tmpadr, ebp, -36
store edx, tmpadr, 4

;mov [edi-0x20], eax
add tmpadr, edi, -32
store eax, tmpadr, 1

;mov ecx, [ebx-0xa]
add tmpadr, ebx, -10
load ecx, tmpadr, 1

;mov [ebp-0x28], ecx
add tmpadr, ebp, -40
store ecx, tmpadr, 4

;mov [ebp-0x2c], edx
add tmpadr, ebp, -44
store edx, tmpadr, 4

;fild qword [ebp-0x28]
add tmpadr, ebp, -40
load tmp1, tmpadr, 4
add tmp3, tmpadr, 4
load tmp2, tmp3, 4
FILD_INT64 tmp1, tmp2

;mov ecx, [ebp-0x8]
add tmpadr, ebp, -8
load ecx, tmpadr, 4

;fmul dword [loc_4189DC]
load tmp1, loc_4189DC, 4
FMUL_FLOAT tmp1

;fstp dword [edi-0x14]
FSTP_FLOAT
add tmpadr, edi, -20
store tmp0, tmpadr, 1

;mov eax, [ebx-0x6]
add tmpadr, ebx, -6
load eax, tmpadr, 1

;mov [ebp-0x30], eax
add tmpadr, ebp, -48
store eax, tmpadr, 4

;fild qword [ebp-0x30]
add tmpadr, ebp, -48
load tmp1, tmpadr, 4
add tmp3, tmpadr, 4
load tmp2, tmp3, 4
FILD_INT64 tmp1, tmp2

;fmul dword [loc_4189DC]
load tmp1, loc_4189DC, 4
FMUL_FLOAT tmp1

;fst dword [edi-0xc]
FST_FLOAT
add tmpadr, edi, -12
store tmp0, tmpadr, 1

;fsub dword [edi-0x14]
add tmpadr, edi, -20
load tmp1, tmpadr, 1
FSUB_FLOAT tmp1

;fstp dword [edi-0x10]
FSTP_FLOAT
add tmpadr, edi, -16
store tmp0, tmpadr, 1

;fld dword [ebx+0x2]
add tmpadr, ebx, 2
load tmp1, tmpadr, 1
FLD_FLOAT tmp1

;fadd dword [ecx+0x40]
add tmpadr, ecx, 64
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;mov [edi+0x4], edx
add tmpadr, edi, 4
store edx, tmpadr, 1

;fstp dword [edi-0x4]
FSTP_FLOAT
add tmpadr, edi, -4
store tmp0, tmpadr, 1

;mov eax, [ebx+0xa]
add tmpadr, ebx, 10
load eax, tmpadr, 1

;mov [edi-0x24], edx
add tmpadr, edi, -36
store edx, tmpadr, 1

;mov [edi-0x8], eax
add tmpadr, edi, -8
store eax, tmpadr, 1

;mov eax, [ebx-0xa]
add tmpadr, ebx, -10
load eax, tmpadr, 1

;shr eax, 0x8
and eflags, eflags, ~ZF
lshr eax, eax, 8
cmovz eax, tmp0, ZF, 0
or eflags, eflags, tmp0

;mov dword [edi+0x8], 0xc63b8000
add tmpadr, edi, 8
mov tmp1, 0xc63b8000
store tmp1, tmpadr, 1

;jz short loc_406DF7
and tmp1, eflags, ZF
ctcallnz tmp1, loc_406DF7

tcall loc_406DE7
endp

proc loc_406DE7
;fld dword [edi+0x8]
add tmpadr, edi, 8
load tmp1, tmpadr, 1
FLD_FLOAT tmp1

;fadd dword [loc_4189E8]
load tmp1, loc_4189E8, 4
FADD_FLOAT tmp1

;sar eax, 1
and eflags, eflags, ~ZF
ashr eax, eax, 1
cmovz eax, tmp0, ZF, 0
or eflags, eflags, tmp0

;fstp dword [edi+0x8]
FSTP_FLOAT
add tmpadr, edi, 8
store tmp0, tmpadr, 1

;jnz short loc_406DE7
and tmp1, eflags, ZF
ctcallz tmp1, loc_406DE7

tcall loc_406DF7
endp

proc loc_406DF7
;fld dword [esi+0x8]
add tmpadr, esi, 8
load tmp1, tmpadr, 1
FLD_FLOAT tmp1

;fadd dword [edi]
load tmp1, edi, 1
FADD_FLOAT tmp1

;fadd dword [edi-0x4]
add tmpadr, edi, -4
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;fadd dword [esi+0x4]
add tmpadr, esi, 4
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;fst dword [ebp-0x10]
FST_FLOAT
add tmpadr, ebp, -16
store tmp0, tmpadr, 4

;fcomp dword [edi+0x8]
add tmpadr, edi, 8
load tmp1, tmpadr, 1
FCOMP_FLOAT tmp1

;fnstsw ax
FNSTSW_VOID
and eax, eax, 0xffff0000
or eax, eax, tmp0

;test ah, 0x41
and tmpcnd, eax, 0x4100

;jnz short loc_406E15
ctcallnz tmpcnd, loc_406E15

tcall loc_406E0F
endp

proc loc_406E0F
;mov ecx, [edi+0x8]
add tmpadr, edi, 8
load ecx, tmpadr, 1

;mov [ebp-0x10], ecx
add tmpadr, ebp, -16
store ecx, tmpadr, 4

tcall loc_406E15
endp

proc loc_406E15
;mov edx, [ebp-0x10]
add tmpadr, ebp, -16
load edx, tmpadr, 4

;push edx
PUSH edx

;call loc_40DB20
PUSH loc_406E1E
tcall loc_40DB20
endp

proc loc_406E1E
;fstp dword [edi-0x1c]
FSTP_FLOAT
add tmpadr, edi, -28
store tmp0, tmpadr, 1

;mov eax, [ebp-0x4]
add tmpadr, ebp, -4
load eax, tmpadr, 4

;xor edx, edx
xor edx, edx, edx

;jmp short loc_406E2B
tcall loc_406E2B
endp

proc loc_406E28
;mov [edi-0x28], edx
add tmpadr, edi, -40
store edx, tmpadr, 1

tcall loc_406E2B
endp

proc loc_406E2B
;mov ecx, [ebp-0xc]
add tmpadr, ebp, -12
load ecx, tmpadr, 4

;sub edi, 0x34
sub edi, edi, 52

;dec ecx
sub ecx, ecx, 1

;sub ebx, 0x20
sub ebx, ebx, 32

;cmp ecx, edx
cmovugt ecx, edx, tmpcnd, 0, 1

;mov [ebp-0xc], ecx
add tmpadr, ebp, -12
store ecx, tmpadr, 4

;ja near loc_406CDB
ctcallz tmpcnd, loc_406CDB

tcall loc_406E40
endp

proc loc_406E40
;mov eax, [ebp-0x8]
add tmpadr, ebp, -8
load eax, tmpadr, 4

;mov ecx, [eax+0x74]
add tmpadr, eax, 116
load ecx, tmpadr, 1

;mov [esi+0xb8], edx
add tmpadr, esi, 184
store edx, tmpadr, 1

;mov [esi+0x94], ecx
add tmpadr, esi, 148
store ecx, tmpadr, 1

;lea ecx, [esi+0xc8]
add ecx, esi, 200

;mov [esi+0xbc], edx
add tmpadr, esi, 188
store edx, tmpadr, 1

;mov [esi+0xd8], dx
add tmpadr, esi, 216
store16 edx, tmpadr, 1

;mov [ecx], edx
store edx, ecx, 1

;mov [esi+0xda], dx
add tmpadr, esi, 218
store16 edx, tmpadr, 1

;mov byte [esi+0xdc], 0x0
add tmpadr, esi, 220
store8 0, tmpadr, 1

;mov edi, [eax+0x70]
add tmpadr, eax, 112
load edi, tmpadr, 1

;mov [esi+0x88], edi
add tmpadr, esi, 136
store edi, tmpadr, 1

;mov [esi+0x90], edx
add tmpadr, esi, 144
store edx, tmpadr, 1

;mov edi, [eax+0x58]
add tmpadr, eax, 88
load edi, tmpadr, 1

;mov [esi+0xd0], edx
add tmpadr, esi, 208
store edx, tmpadr, 1

;mov [esi+0xd4], edi
add tmpadr, esi, 212
store edi, tmpadr, 1

;mov [esi+0x84], edx
add tmpadr, esi, 132
store edx, tmpadr, 1

;mov dword [esi+0x98], 0xc2c80000
add tmpadr, esi, 152
mov tmp1, 0xc2c80000
store tmp1, tmpadr, 1

;mov edx, [eax+0x78]
add tmpadr, eax, 120
load edx, tmpadr, 1

;dec edx
sub edx, edx, 1
mov tmpcnd, edx

;jz short loc_406F03
ctcallz tmpcnd, loc_406F03

tcall loc_406EA9
endp

proc loc_406EA9
;dec edx
sub edx, edx, 1
mov tmpcnd, edx

;jz short loc_406EE7
ctcallz tmpcnd, loc_406EE7

tcall loc_406EAC
endp

proc loc_406EAC
;dec edx
sub edx, edx, 1
mov tmpcnd, edx

;jz short loc_406ECB
ctcallz tmpcnd, loc_406ECB

tcall loc_406EAF
endp

proc loc_406EAF
;mov dword [eax+0x6c], 0x3f800000
add tmpadr, eax, 108
mov tmp1, 0x3f800000
store tmp1, tmpadr, 1

;lea ebx, [esi+0x78]
add ebx, esi, 120

;mov eax, loc_407B10
mov eax, loc_407B10

;mov [ebx], eax
store eax, ebx, 1

;mov [esi+0x7c], eax
add tmpadr, esi, 124
store eax, tmpadr, 1

;mov [esi+0x80], eax
add tmpadr, esi, 128
store eax, tmpadr, 1

;jmp short loc_406F1D
tcall loc_406F1D
endp

proc loc_406ECB
;lea ebx, [esi+0x78]
add ebx, esi, 120

;mov dword [esi+0x7c], loc_40AEB0
add tmpadr, esi, 124
mov tmp1, loc_40AEB0
store tmp1, tmpadr, 1

;mov dword [esi+0x80], loc_40B280
add tmpadr, esi, 128
mov tmp1, loc_40B280
store tmp1, tmpadr, 1

;mov dword [ebx], loc_408110
mov tmp1, loc_408110
store tmp1, ebx, 1

;jmp short loc_406F1D
tcall loc_406F1D
endp

proc loc_406EE7
;lea ebx, [esi+0x78]
add ebx, esi, 120

;mov dword [esi+0x7c], loc_40B000
add tmpadr, esi, 124
mov tmp1, loc_40B000
store tmp1, tmpadr, 1

;mov dword [esi+0x80], loc_40B3C0
add tmpadr, esi, 128
mov tmp1, loc_40B3C0
store tmp1, tmpadr, 1

;mov dword [ebx], loc_408180
mov tmp1, loc_408180
store tmp1, ebx, 1

;jmp short loc_406F1D
tcall loc_406F1D
endp

proc loc_406F03
;lea ebx, [esi+0x78]
add ebx, esi, 120

;mov dword [esi+0x7c], loc_40AEB0
add tmpadr, esi, 124
mov tmp1, loc_40AEB0
store tmp1, tmpadr, 1

;mov dword [esi+0x80], loc_40B140
add tmpadr, esi, 128
mov tmp1, loc_40B140
store tmp1, tmpadr, 1

;mov dword [ebx], loc_408090
mov tmp1, loc_408090
store tmp1, ebx, 1

tcall loc_406F1D
endp

proc loc_406F1D
;mov edi, [ebp-0x8]
add tmpadr, ebp, -8
load edi, tmpadr, 4

;fld dword [loc_4189D8]
load tmp1, loc_4189D8, 4
FLD_FLOAT tmp1

;fdiv dword [edi+0x6c]
add tmpadr, edi, 108
load tmp1, tmpadr, 1
FDIV_FLOAT tmp1

;lea edx, [edi+0x4c]
add edx, edi, 76

;fstp dword [esi+0xc0]
FSTP_FLOAT
add tmpadr, esi, 192
store tmp0, tmpadr, 1

;call loc_408010
PUSH loc_406F37
tcall loc_408010
endp

proc loc_406F37
;fld dword [edi+0x68]
add tmpadr, edi, 104
load tmp1, tmpadr, 1
FLD_FLOAT tmp1

;fmul dword [esi+0xd4]
add tmpadr, esi, 212
load tmp1, tmpadr, 1
FMUL_FLOAT tmp1

;mov ecx, ebx
mov ecx, ebx

;mov dword [esi+0xa0], 0xc47a0000
add tmpadr, esi, 160
mov tmp1, 0xc47a0000
store tmp1, tmpadr, 1

;fstp dword [esi+0x8c]
FSTP_FLOAT
add tmpadr, esi, 140
store tmp0, tmpadr, 1

;call loc_4081E0
PUSH loc_406F57
tcall loc_4081E0
endp

proc loc_406F57
;mov ecx, ebx
mov ecx, ebx

;call dword [ebx]
load tmp2, ebx, 1
PUSH loc_406F5B
tcall tmp2
endp

proc loc_406F5B
;mov edx, [esi+0x9c]
add tmpadr, esi, 156
load edx, tmpadr, 1

;lea ecx, [esi+0xec]
add ecx, esi, 236

;mov [esi+0xa0], edx
add tmpadr, esi, 160
store edx, tmpadr, 1

;xor eax, eax
xor eax, eax, eax

;lea edx, [edi+0x94]
add edx, edi, 148

;mov [esi+0x84], eax
add tmpadr, esi, 132
store eax, tmpadr, 1

;mov [esi+0xfc], ax
add tmpadr, esi, 252
store16 eax, tmpadr, 1

;mov [ecx], eax
store eax, ecx, 1

;mov [esi+0xf8], eax
add tmpadr, esi, 248
store eax, tmpadr, 1

;mov [esi+0xf4], eax
add tmpadr, esi, 244
store eax, tmpadr, 1

;mov [esi+0x100], al
add tmpadr, esi, 256
store8 eax, tmpadr, 1

;mov [esi+0xfe], ax
add tmpadr, esi, 254
store16 eax, tmpadr, 1

;call loc_408010
PUSH loc_406FA2
tcall loc_408010
endp

proc loc_406FA2
;lea edx, [edi+0x7c]
add edx, edi, 124

;lea ecx, [esi+0xe0]
add ecx, esi, 224

;call loc_407EA0
PUSH loc_406FB0
tcall loc_407EA0
endp

proc loc_406FB0
;fld dword [edi+0x90]
add tmpadr, edi, 144
load tmp1, tmpadr, 1
FLD_FLOAT tmp1

;fmul dword [esi+0xf8]
add tmpadr, esi, 248
load tmp1, tmpadr, 1
FMUL_FLOAT tmp1

;lea edx, [edi+0xb8]
add edx, edi, 184

;lea ecx, [esi+0x104]
add ecx, esi, 260

;fstp dword [esi+0xe4]
FSTP_FLOAT
add tmpadr, esi, 228
store tmp0, tmpadr, 1

;call loc_4082D0
PUSH loc_406FD3
tcall loc_4082D0
endp

proc loc_406FD3
;mov eax, [ebp-0x4]
add tmpadr, ebp, -4
load eax, tmpadr, 4

;mov edi, eax
mov edi, eax

;mov byte [eax+loc_440E08], 0x0
mov tmpadr, loc_440E08
add tmpadr, tmpadr, eax
store8 0, tmpadr, 1

;mov byte [eax+loc_455F68], 0x0
mov tmpadr, loc_455F68
add tmpadr, tmpadr, eax
store8 0, tmpadr, 1

;jmp loc_40731C
tcall loc_40731C
endp

proc loc_406FEB
;mov al, [edi+loc_440D88]
mov tmpadr, loc_440D88
add tmpadr, tmpadr, edi
load8z tmp0, tmpadr, 1
and eax, eax, 0xffffff00
or eax, eax, tmp0

;test al, al
and tmpcnd, eax, 0xff

;jz near loc_407315
ctcallz tmpcnd, loc_407315

tcall loc_406FF9
endp

proc loc_406FF9
;mov al, [edi+loc_440E08]
mov tmpadr, loc_440E08
add tmpadr, tmpadr, edi
load8z tmp0, tmpadr, 1
and eax, eax, 0xffffff00
or eax, eax, tmp0

;test al, al
and tmpcnd, eax, 0xff

;jnz near loc_407315
ctcallnz tmpcnd, loc_407315

tcall loc_407007
endp

proc loc_407007
;lea ecx, [edi+edi*8]
shl tmpadr, edi, 3
add ecx, tmpadr, edi

;xor esi, esi
xor esi, esi, esi

;shl ecx, 0x5
shl ecx, ecx, 5

;add ecx, loc_42BD88
mov tmp1, loc_42BD88
add ecx, ecx, tmp1

;fld dword [ecx+0xf4]
add tmpadr, ecx, 244
load tmp1, tmpadr, 1
FLD_FLOAT tmp1

;fmul dword [ecx+0xec]
add tmpadr, ecx, 236
load tmp1, tmpadr, 1
FMUL_FLOAT tmp1

;mov eax, [ecx]
load eax, ecx, 1

;mov [ecx+0xfe], bx
add tmpadr, ecx, 254
store16 ebx, tmpadr, 1

;add eax, 0x94
add eax, eax, 148

;fadd dword [ecx+0xf8]
add tmpadr, ecx, 248
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;fstp dword [ecx+0xf8]
FSTP_FLOAT
add tmpadr, ecx, 248
store tmp0, tmpadr, 1

;movsx edx, word [ecx+0xfe]
add tmpadr, ecx, 254
load16s edx, tmpadr, 1

;mov [ecx+0xec], esi
add tmpadr, ecx, 236
store esi, tmpadr, 1

;mov dx, [eax+edx*2+0x10]
shl tmpadr, edx, 1
add tmpadr, tmpadr, eax
add tmpadr, tmpadr, 16
load16z tmp0, tmpadr, 1
and edx, edx, 0xffff0000
or edx, edx, tmp0

;cmp dx, si
sub tmp1, edx, esi
and tmpcnd, tmp1, 0xffff

;mov [ecx+0xfc], dx
add tmpadr, ecx, 252
store16 edx, tmpadr, 1

;jnz short loc_407098
ctcallnz tmpcnd, loc_407098

tcall loc_407059
endp

proc loc_407059
;mov dx, [ecx+0xfe]
add tmpadr, ecx, 254
load16z tmp0, tmpadr, 1
and edx, edx, 0xffff0000
or edx, edx, tmp0

;movsx ebx, dx
ext16s ebx, edx

;inc edx
add edx, edx, 1

;mov ebx, [eax+ebx*4]
shl tmpadr, ebx, 2
add tmpadr, tmpadr, eax
load ebx, tmpadr, 1

;mov [ecx+0xf0], esi
add tmpadr, ecx, 240
store esi, tmpadr, 1

;mov [ecx+0xf8], ebx
add tmpadr, ecx, 248
store ebx, tmpadr, 1

;mov ebx, 0x3
mov ebx, 0x3

;cmp dx, bx
and eflags, eflags, ~(SF|OF)
xor tmp4, edx, ebx
sub tmp1, edx, ebx
xor tmp3, tmp1, edx
and tmp3, tmp3, tmp4
and tmp3, tmp3, 0x8000
lshr tmp3, tmp3, 15 - OF_SHIFT
or eflags, eflags, tmp3
and tmp0, tmp1, 0x8000
cmovz tmp0, tmp0, 0, SF
or eflags, eflags, tmp0

;mov [ecx+0xfe], dx
add tmpadr, ecx, 254
store16 edx, tmpadr, 1

;jge short loc_4070C9
lshr tmp1, eflags, OF_SHIFT - SF_SHIFT
xor tmp1, tmp1, eflags
and tmp1, tmp1, SF
ctcallz tmp1, loc_4070C9

tcall loc_407084
endp

proc loc_407084
;movsx edx, dx
ext16s edx, edx

;mov dx, [eax+edx*2+0x10]
shl tmpadr, edx, 1
add tmpadr, tmpadr, eax
add tmpadr, tmpadr, 16
load16z tmp0, tmpadr, 1
and edx, edx, 0xffff0000
or edx, edx, tmp0

;cmp dx, si
sub tmp1, edx, esi
and tmpcnd, tmp1, 0xffff

;mov [ecx+0xfc], dx
add tmpadr, ecx, 252
store16 edx, tmpadr, 1

;jz short loc_407059
ctcallz tmpcnd, loc_407059

tcall loc_407098
endp

proc loc_407098
;movsx edx, word [ecx+0xfe]
add tmpadr, ecx, 254
load16s edx, tmpadr, 1

;fld dword [eax+edx*4]
shl tmpadr, edx, 2
add tmpadr, tmpadr, eax
load tmp1, tmpadr, 1
FLD_FLOAT tmp1

;fsub dword [ecx+0xf8]
add tmpadr, ecx, 248
load tmp1, tmpadr, 1
FSUB_FLOAT tmp1

;xor eax, eax
xor eax, eax, eax

;mov ax, [ecx+0xfc]
add tmpadr, ecx, 252
load16z tmp0, tmpadr, 1
and eax, eax, 0xffff0000
or eax, eax, tmp0

;mov [ebp-0x18], eax
add tmpadr, ebp, -24
store eax, tmpadr, 4

;fstp dword [ecx+0xf4]
FSTP_FLOAT
add tmpadr, ecx, 244
store tmp0, tmpadr, 1

;fild dword [ebp-0x18]
add tmpadr, ebp, -24
load tmp1, tmpadr, 4
FILD_INT32 tmp1

;fdivr dword [loc_4189F4]
load tmp1, loc_4189F4, 4
FDIVR_FLOAT tmp1

;fstp dword [ecx+0xf0]
FSTP_FLOAT
add tmpadr, ecx, 240
store tmp0, tmpadr, 1

tcall loc_4070C9
endp

proc loc_4070C9
;mov edx, [ecx]
load edx, ecx, 1

;add edx, 0x7c
add edx, edx, 124

;fld dword [edx+0x34]
add tmpadr, edx, 52
load tmp1, tmpadr, 1
FLD_FLOAT tmp1

;fcomp dword [loc_4189F0]
load tmp1, loc_4189F0, 4
FCOMP_FLOAT tmp1

;fnstsw ax
FNSTSW_VOID
and eax, eax, 0xffff0000
or eax, eax, tmp0

;test ah, 0x1
and tmpcnd, eax, 0x100

;jz short loc_4070FA
ctcallz tmpcnd, loc_4070FA

tcall loc_4070DE
endp

proc loc_4070DE
;fld dword [edx+0x38]
add tmpadr, edx, 56
load tmp1, tmpadr, 1
FLD_FLOAT tmp1

;fcomp dword [loc_4189F0]
load tmp1, loc_4189F0, 4
FCOMP_FLOAT tmp1

;fnstsw ax
FNSTSW_VOID
and eax, eax, 0xffff0000
or eax, eax, tmp0

;test ah, 0x1
and tmpcnd, eax, 0x100

;mov eax, loc_40E270
mov eax, loc_40E270

;jnz short loc_40712D
ctcallnz tmpcnd, loc_40712D

tcall loc_4070F3
endp

proc loc_4070F3
;mov eax, loc_40E390
mov eax, loc_40E390

;jmp short loc_40712D
tcall loc_40712D
endp

proc loc_4070FA
;fld dword [edx+0x38]
add tmpadr, edx, 56
load tmp1, tmpadr, 1
FLD_FLOAT tmp1

;fcomp dword [loc_4189F0]
load tmp1, loc_4189F0, 4
FCOMP_FLOAT tmp1

;cmp [loc_41B6F4], esi
load tmp1, loc_41B6F4, 4
and eflags, eflags, ~ZF
sub tmp1, tmp1, esi
cmovz tmp1, tmp0, ZF, 0
or eflags, eflags, tmp0

;fnstsw ax
FNSTSW_VOID
and eax, eax, 0xffff0000
or eax, eax, tmp0

;jz short loc_40711E
and tmp1, eflags, ZF
ctcallnz tmp1, loc_40711E

tcall loc_40710D
endp

proc loc_40710D
;test ah, 0x1
and tmpcnd, eax, 0x100

;mov eax, loc_40E520
mov eax, loc_40E520

;jnz short loc_40712D
ctcallnz tmpcnd, loc_40712D

tcall loc_407117
endp

proc loc_407117
;mov eax, loc_40E680
mov eax, loc_40E680

;jmp short loc_40712D
tcall loc_40712D
endp

proc loc_40711E
;test ah, 0x1
and tmpcnd, eax, 0x100

;mov eax, loc_40E840
mov eax, loc_40E840

;jnz short loc_40712D
ctcallnz tmpcnd, loc_40712D

tcall loc_407128
endp

proc loc_407128
;mov eax, loc_40E9D0
mov eax, loc_40E9D0

tcall loc_40712D
endp

proc loc_40712D
;mov [ecx+0xe0], eax
add tmpadr, ecx, 224
store eax, tmpadr, 1

;cmp [ecx+0xfc], si
add tmpadr, ecx, 252
load16z tmp1, tmpadr, 1
sub tmp1, tmp1, esi
and tmpcnd, tmp1, 0xffff

;jnz short loc_407143
ctcallnz tmpcnd, loc_407143

tcall loc_40713C
endp

proc loc_40713C
;mov byte [ecx+0x100], 0x1
add tmpadr, ecx, 256
mov tmp1, 0x1
store8 tmp1, tmpadr, 1

tcall loc_407143
endp

proc loc_407143
;fld dword [ecx+0xd0]
add tmpadr, ecx, 208
load tmp1, tmpadr, 1
FLD_FLOAT tmp1

;fmul dword [ecx+0xc8]
add tmpadr, ecx, 200
load tmp1, tmpadr, 1
FMUL_FLOAT tmp1

;mov eax, [ecx]
load eax, ecx, 1

;mov dword [ecx+0xe8], loc_407FE0
add tmpadr, ecx, 232
mov tmp1, loc_407FE0
store tmp1, tmpadr, 1

;mov [ecx+0xda], bx
add tmpadr, ecx, 218
store16 ebx, tmpadr, 1

;add eax, 0x4c
add eax, eax, 76

;fadd dword [ecx+0xd4]
add tmpadr, ecx, 212
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;fstp dword [ecx+0xd4]
FSTP_FLOAT
add tmpadr, ecx, 212
store tmp0, tmpadr, 1

;movsx edx, word [ecx+0xda]
add tmpadr, ecx, 218
load16s edx, tmpadr, 1

;mov [ecx+0xc8], esi
add tmpadr, ecx, 200
store esi, tmpadr, 1

;mov dx, [eax+edx*2+0x10]
shl tmpadr, edx, 1
add tmpadr, tmpadr, eax
add tmpadr, tmpadr, 16
load16z tmp0, tmpadr, 1
and edx, edx, 0xffff0000
or edx, edx, tmp0

;cmp dx, si
sub tmp1, edx, esi
and tmpcnd, tmp1, 0xffff

;mov [ecx+0xd8], dx
add tmpadr, ecx, 216
store16 edx, tmpadr, 1

;jnz short loc_4071CA
ctcallnz tmpcnd, loc_4071CA

tcall loc_40718F
endp

proc loc_40718F
;mov dx, [ecx+0xda]
add tmpadr, ecx, 218
load16z tmp0, tmpadr, 1
and edx, edx, 0xffff0000
or edx, edx, tmp0

;movsx ebx, dx
ext16s ebx, edx

;inc edx
add edx, edx, 1

;mov ebx, [eax+ebx*4]
shl tmpadr, ebx, 2
add tmpadr, tmpadr, eax
load ebx, tmpadr, 1

;cmp dx, 0x3
and eflags, eflags, ~(SF|OF)
ext16s tmp3, edx
cmovslt tmp3, -32765, tmp3, OF, 0
or eflags, eflags, tmp3
sub tmp1, edx, 3
and tmp0, tmp1, 0x8000
cmovz tmp0, tmp0, 0, SF
or eflags, eflags, tmp0

;mov [ecx+0xd4], ebx
add tmpadr, ecx, 212
store ebx, tmpadr, 1

;mov [ecx+0xcc], esi
add tmpadr, ecx, 204
store esi, tmpadr, 1

;mov [ecx+0xda], dx
add tmpadr, ecx, 218
store16 edx, tmpadr, 1

;jge short loc_4071FB
lshr tmp1, eflags, OF_SHIFT - SF_SHIFT
xor tmp1, tmp1, eflags
and tmp1, tmp1, SF
ctcallz tmp1, loc_4071FB

tcall loc_4071B6
endp

proc loc_4071B6
;movsx edx, dx
ext16s edx, edx

;mov dx, [eax+edx*2+0x10]
shl tmpadr, edx, 1
add tmpadr, tmpadr, eax
add tmpadr, tmpadr, 16
load16z tmp0, tmpadr, 1
and edx, edx, 0xffff0000
or edx, edx, tmp0

;cmp dx, si
sub tmp1, edx, esi
and tmpcnd, tmp1, 0xffff

;mov [ecx+0xd8], dx
add tmpadr, ecx, 216
store16 edx, tmpadr, 1

;jz short loc_40718F
ctcallz tmpcnd, loc_40718F

tcall loc_4071CA
endp

proc loc_4071CA
;movsx edx, word [ecx+0xda]
add tmpadr, ecx, 218
load16s edx, tmpadr, 1

;fld dword [eax+edx*4]
shl tmpadr, edx, 2
add tmpadr, tmpadr, eax
load tmp1, tmpadr, 1
FLD_FLOAT tmp1

;fsub dword [ecx+0xd4]
add tmpadr, ecx, 212
load tmp1, tmpadr, 1
FSUB_FLOAT tmp1

;xor eax, eax
xor eax, eax, eax

;mov ax, [ecx+0xd8]
add tmpadr, ecx, 216
load16z tmp0, tmpadr, 1
and eax, eax, 0xffff0000
or eax, eax, tmp0

;mov [ebp-0x18], eax
add tmpadr, ebp, -24
store eax, tmpadr, 4

;fstp dword [ecx+0xd0]
FSTP_FLOAT
add tmpadr, ecx, 208
store tmp0, tmpadr, 1

;fild dword [ebp-0x18]
add tmpadr, ebp, -24
load tmp1, tmpadr, 4
FILD_INT32 tmp1

;fdivr dword [loc_4189F4]
load tmp1, loc_4189F4, 4
FDIVR_FLOAT tmp1

;fstp dword [ecx+0xcc]
FSTP_FLOAT
add tmpadr, ecx, 204
store tmp0, tmpadr, 1

tcall loc_4071FB
endp

proc loc_4071FB
;mov dword [ecx+0xc4], loc_407FE0
add tmpadr, ecx, 196
mov tmp1, loc_407FE0
store tmp1, tmpadr, 1

;jmp loc_407315
tcall loc_407315
endp

proc loc_40720A
;mov al, [edi+loc_440D88]
mov tmpadr, loc_440D88
add tmpadr, tmpadr, edi
load8z tmp0, tmpadr, 1
and eax, eax, 0xffffff00
or eax, eax, tmp0

;test al, al
and tmpcnd, eax, 0xff

;jz near loc_407315
ctcallz tmpcnd, loc_407315

tcall loc_407218
endp

proc loc_407218
;mov al, [edi+loc_440E08]
mov tmpadr, loc_440E08
add tmpadr, tmpadr, edi
load8z tmp0, tmpadr, 1
and eax, eax, 0xffffff00
or eax, eax, tmp0

;test al, al
and tmpcnd, eax, 0xff

;jnz near loc_407315
ctcallnz tmpcnd, loc_407315

tcall loc_407226
endp

proc loc_407226
;lea esi, [edi+edi*8]
shl tmpadr, edi, 3
add esi, tmpadr, edi

;xor edx, edx
xor edx, edx, edx

;shl esi, 0x5
shl esi, esi, 5

;add esi, loc_42BD88
mov tmp1, loc_42BD88
add esi, esi, tmp1

;fld dword [esi+0xf4]
add tmpadr, esi, 244
load tmp1, tmpadr, 1
FLD_FLOAT tmp1

;fmul dword [esi+0xec]
add tmpadr, esi, 236
load tmp1, tmpadr, 1
FMUL_FLOAT tmp1

;mov eax, [esi]
load eax, esi, 1

;fadd dword [esi+0xf8]
add tmpadr, esi, 248
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;fstp dword [esi+0xf8]
FSTP_FLOAT
add tmpadr, esi, 248
store tmp0, tmpadr, 1

;mov word [eax+0xaa], 0x1
add tmpadr, eax, 170
mov tmp1, 0x1
store16 tmp1, tmpadr, 1

;mov [esi+0xfe], bx
add tmpadr, esi, 254
store16 ebx, tmpadr, 1

;movsx ecx, word [esi+0xfe]
add tmpadr, esi, 254
load16s ecx, tmpadr, 1

;mov [esi+0xec], edx
add tmpadr, esi, 236
store edx, tmpadr, 1

;mov cx, [eax+ecx*2+0xa4]
shl tmpadr, ecx, 1
add tmpadr, tmpadr, eax
add tmpadr, tmpadr, 164
load16z tmp0, tmpadr, 1
and ecx, ecx, 0xffff0000
or ecx, ecx, tmp0

;cmp cx, dx
sub tmp1, ecx, edx
and tmpcnd, tmp1, 0xffff

;mov [esi+0xfc], cx
add tmpadr, esi, 252
store16 ecx, tmpadr, 1

;jnz short loc_4072C1
ctcallnz tmpcnd, loc_4072C1

tcall loc_40727F
endp

proc loc_40727F
;mov cx, [esi+0xfe]
add tmpadr, esi, 254
load16z tmp0, tmpadr, 1
and ecx, ecx, 0xffff0000
or ecx, ecx, tmp0

;movsx ebx, cx
ext16s ebx, ecx

;inc ecx
add ecx, ecx, 1

;mov ebx, [eax+ebx*4+0x94]
shl tmpadr, ebx, 2
add tmpadr, tmpadr, eax
add tmpadr, tmpadr, 148
load ebx, tmpadr, 1

;cmp cx, 0x3
and eflags, eflags, ~(SF|OF)
ext16s tmp3, ecx
cmovslt tmp3, -32765, tmp3, OF, 0
or eflags, eflags, tmp3
sub tmp1, ecx, 3
and tmp0, tmp1, 0x8000
cmovz tmp0, tmp0, 0, SF
or eflags, eflags, tmp0

;mov [esi+0xf8], ebx
add tmpadr, esi, 248
store ebx, tmpadr, 1

;mov [esi+0xf0], edx
add tmpadr, esi, 240
store edx, tmpadr, 1

;mov [esi+0xfe], cx
add tmpadr, esi, 254
store16 ecx, tmpadr, 1

;jge short loc_4072F6
lshr tmp1, eflags, OF_SHIFT - SF_SHIFT
xor tmp1, tmp1, eflags
and tmp1, tmp1, SF
ctcallz tmp1, loc_4072F6

tcall loc_4072AA
endp

proc loc_4072AA
;movsx ecx, cx
ext16s ecx, ecx

;mov cx, [eax+ecx*2+0xa4]
shl tmpadr, ecx, 1
add tmpadr, tmpadr, eax
add tmpadr, tmpadr, 164
load16z tmp0, tmpadr, 1
and ecx, ecx, 0xffff0000
or ecx, ecx, tmp0

;cmp cx, dx
sub tmp1, ecx, edx
and tmpcnd, tmp1, 0xffff

;mov [esi+0xfc], cx
add tmpadr, esi, 252
store16 ecx, tmpadr, 1

;jz short loc_40727F
ctcallz tmpcnd, loc_40727F

tcall loc_4072C1
endp

proc loc_4072C1
;movsx edx, word [esi+0xfe]
add tmpadr, esi, 254
load16s edx, tmpadr, 1

;xor ecx, ecx
xor ecx, ecx, ecx

;fld dword [eax+edx*4+0x94]
shl tmpadr, edx, 2
add tmpadr, tmpadr, eax
add tmpadr, tmpadr, 148
load tmp1, tmpadr, 1
FLD_FLOAT tmp1

;fsub dword [esi+0xf8]
add tmpadr, esi, 248
load tmp1, tmpadr, 1
FSUB_FLOAT tmp1

;mov cx, [esi+0xfc]
add tmpadr, esi, 252
load16z tmp0, tmpadr, 1
and ecx, ecx, 0xffff0000
or ecx, ecx, tmp0

;mov [ebp-0x18], ecx
add tmpadr, ebp, -24
store ecx, tmpadr, 4

;fstp dword [esi+0xf4]
FSTP_FLOAT
add tmpadr, esi, 244
store tmp0, tmpadr, 1

;fild dword [ebp-0x18]
add tmpadr, ebp, -24
load tmp1, tmpadr, 4
FILD_INT32 tmp1

;fdivr dword [loc_4189F4]
load tmp1, loc_4189F4, 4
FDIVR_FLOAT tmp1

;fstp dword [esi+0xf0]
FSTP_FLOAT
add tmpadr, esi, 240
store tmp0, tmpadr, 1

tcall loc_4072F6
endp

proc loc_4072F6
;lea edx, [eax+0x7c]
add edx, eax, 124

;lea ecx, [esi+0xe0]
add ecx, esi, 224

;call loc_407EA0
PUSH loc_407304
tcall loc_407EA0
endp

proc loc_407304
;mov dword [esi+0xe8], loc_407FE0
add tmpadr, esi, 232
mov tmp1, loc_407FE0
store tmp1, tmpadr, 1

;mov byte [edi+loc_440E08], 0x1
mov tmpadr, loc_440E08
add tmpadr, tmpadr, edi
mov tmp1, 0x1
store8 tmp1, tmpadr, 1

tcall loc_407315
endp

proc loc_407315
;mov byte [edi+loc_455F68], 0x0
mov tmpadr, loc_455F68
add tmpadr, tmpadr, edi
store8 0, tmpadr, 1

tcall loc_40731C
endp

proc loc_40731C
;mov al, [edi+loc_440D88]
mov tmpadr, loc_440D88
add tmpadr, tmpadr, edi
load8z tmp0, tmpadr, 1
and eax, eax, 0xffffff00
or eax, eax, tmp0

;mov esi, [ebp-0x4]
add tmpadr, ebp, -4
load esi, tmpadr, 4

;test al, al
and tmpcnd, eax, 0xff

;jz near loc_4076D5
ctcallz tmpcnd, loc_4076D5

tcall loc_40732D
endp

proc loc_40732D
;lea esi, [esi+esi*8]
shl tmpadr, esi, 3
add esi, tmpadr, esi

;mov dword [ebp-0x8], 0x0
add tmpadr, ebp, -8
store 0, tmpadr, 4

;shl esi, 0x5
shl esi, esi, 5

;add esi, loc_42BD88
mov tmp1, loc_42BD88
add esi, esi, tmp1

;mov ebx, [esi]
load ebx, esi, 1

;lea edi, [esi+0xc8]
add edi, esi, 200

;mov ecx, edi
mov ecx, edi

;lea edx, [ebx+0x4c]
add edx, ebx, 76

;call dword [esi+0xc4]
add tmpadr, esi, 196
load tmp2, tmpadr, 1
PUSH loc_407353
tcall tmp2
endp

proc loc_407353
;fld dword [esi+0xd0]
add tmpadr, esi, 208
load tmp1, tmpadr, 1
FLD_FLOAT tmp1

;fmul dword [edi]
load tmp1, edi, 1
FMUL_FLOAT tmp1

;mov ax, [esi+0x108]
add tmpadr, esi, 264
load16z tmp0, tmpadr, 1
and eax, eax, 0xffff0000
or eax, eax, tmp0

;lea edi, [esi+0x104]
add edi, esi, 260

;test ax, ax
and tmp1, eax, eax
and eflags, eflags, ~ZF
and tmp0, tmp1, 0xffff
cmovz tmp0, tmp0, ZF, 0
or eflags, eflags, tmp0

;fadd dword [esi+0xd4]
add tmpadr, esi, 212
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;fstp dword [ebp-0x10]
FSTP_FLOAT
add tmpadr, ebp, -16
store tmp0, tmpadr, 4

;jz short loc_40737D
and tmp1, eflags, ZF
ctcallnz tmp1, loc_40737D

tcall loc_407376
endp

proc loc_407376
;dec eax
sub eax, eax, 1

;mov [edi+0x4], ax
add tmpadr, edi, 4
store16 eax, tmpadr, 1

;jmp short loc_407394
tcall loc_407394
endp

proc loc_40737D
;mov ax, [edi+0x6]
add tmpadr, edi, 6
load16z tmp0, tmpadr, 1
and eax, eax, 0xffff0000
or eax, eax, tmp0

;test ax, ax
and tmpcnd, eax, 0xffff

;jz short loc_407394
ctcallz tmpcnd, loc_407394

tcall loc_407386
endp

proc loc_407386
;fld dword [edi+0xc]
add tmpadr, edi, 12
load tmp1, tmpadr, 1
FLD_FLOAT tmp1

;fadd dword [edi+0x8]
add tmpadr, edi, 8
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;dec eax
sub eax, eax, 1

;mov [edi+0x6], ax
add tmpadr, edi, 6
store16 eax, tmpadr, 1

;fstp dword [edi+0x8]
FSTP_FLOAT
add tmpadr, edi, 8
store tmp0, tmpadr, 1

tcall loc_407394
endp

proc loc_407394
;mov ecx, edi
mov ecx, edi

;call dword [edi]
load tmp2, edi, 1
PUSH loc_407398
tcall tmp2
endp

proc loc_407398
;fmul dword [edi+0x8]
add tmpadr, edi, 8
load tmp1, tmpadr, 1
FMUL_FLOAT tmp1

;fstp dword [edi+0x10]
FSTP_FLOAT
add tmpadr, edi, 16
store tmp0, tmpadr, 1

;fld dword [ebx+0x44]
add tmpadr, ebx, 68
load tmp1, tmpadr, 1
FLD_FLOAT tmp1

;fmul dword [esi+0x114]
add tmpadr, esi, 276
load tmp1, tmpadr, 1
FMUL_FLOAT tmp1

;fcom dword [esi+0x8]
add tmpadr, esi, 8
load tmp1, tmpadr, 1
FCOM_FLOAT tmp1

;fnstsw ax
FNSTSW_VOID
and eax, eax, 0xffff0000
or eax, eax, tmp0

;test ah, 0x40
and tmpcnd, eax, 0x4000

;jnz short loc_4073BD
ctcallnz tmpcnd, loc_4073BD

tcall loc_4073B1
endp

proc loc_4073B1
;fstp dword [esi+0x8]
FSTP_FLOAT
add tmpadr, esi, 8
store tmp0, tmpadr, 1

;mov dword [ebp-0x8], 0x1
add tmpadr, ebp, -8
mov tmp1, 0x1
store tmp1, tmpadr, 4

;jmp short loc_4073BF
tcall loc_4073BF
endp

proc loc_4073BD
;fstp st0
FSTP_ST 0

tcall loc_4073BF
endp

proc loc_4073BF
;fld dword [ebp-0x10]
add tmpadr, ebp, -16
load tmp1, tmpadr, 4
FLD_FLOAT tmp1

;fmul dword [ebx+0x48]
add tmpadr, ebx, 72
load tmp1, tmpadr, 1
FMUL_FLOAT tmp1

;fcom dword [esi+0x4]
add tmpadr, esi, 4
load tmp1, tmpadr, 1
FCOM_FLOAT tmp1

;fnstsw ax
FNSTSW_VOID
and eax, eax, 0xffff0000
or eax, eax, tmp0

;test ah, 0x40
and tmpcnd, eax, 0x4000

;jnz short loc_4073DB
ctcallnz tmpcnd, loc_4073DB

tcall loc_4073CF
endp

proc loc_4073CF
;fstp dword [esi+0x4]
FSTP_FLOAT
add tmpadr, esi, 4
store tmp0, tmpadr, 1

;mov dword [ebp-0x8], 0x1
add tmpadr, ebp, -8
mov tmp1, 0x1
store tmp1, tmpadr, 4

;jmp short loc_4073DD
tcall loc_4073DD
endp

proc loc_4073DB
;fstp st0
FSTP_ST 0

tcall loc_4073DD
endp

proc loc_4073DD
;fld dword [esi+0xc]
add tmpadr, esi, 12
load tmp1, tmpadr, 1
FLD_FLOAT tmp1

;fcomp dword [ebx+0x40]
add tmpadr, ebx, 64
load tmp1, tmpadr, 1
FCOMP_FLOAT tmp1

;fnstsw ax
FNSTSW_VOID
and eax, eax, 0xffff0000
or eax, eax, tmp0

;test ah, 0x40
and tmpcnd, eax, 0x4000

;jnz short loc_407406
ctcallnz tmpcnd, loc_407406

tcall loc_4073EA
endp

proc loc_4073EA
;fld dword [ebx+0x40]
add tmpadr, ebx, 64
load tmp1, tmpadr, 1
FLD_FLOAT tmp1

;mov dword [ebp-0x8], 0x1
add tmpadr, ebp, -8
mov tmp1, 0x1
store tmp1, tmpadr, 4

;fst dword [esi+0xc]
FST_FLOAT
add tmpadr, esi, 12
store tmp0, tmpadr, 1

;fadd dword [ebx+0x14]
add tmpadr, ebx, 20
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;fstp dword [esi+0x34]
FSTP_FLOAT
add tmpadr, esi, 52
store tmp0, tmpadr, 1

;fld dword [ebx+0x34]
add tmpadr, ebx, 52
load tmp1, tmpadr, 1
FLD_FLOAT tmp1

;fadd dword [esi+0xc]
add tmpadr, esi, 12
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;fstp dword [esi+0x68]
FSTP_FLOAT
add tmpadr, esi, 104
store tmp0, tmpadr, 1

tcall loc_407406
endp

proc loc_407406
;lea ecx, [ebx+0x20]
add ecx, ebx, 32

;mov dword [ebp-0xc], 0x1
add tmpadr, ebp, -12
mov tmp1, 0x1
store tmp1, tmpadr, 4

;mov [ebp-0x18], ecx
add tmpadr, ebp, -24
store ecx, tmpadr, 4

;lea edi, [esi+0x48]
add edi, esi, 72

tcall loc_407416
endp

proc loc_407416
;mov eax, [edi-0x4]
add tmpadr, edi, -4
load eax, tmpadr, 1

;test eax, eax
mov tmpcnd, eax

;jz near loc_4074D5
ctcallz tmpcnd, loc_4074D5

tcall loc_407421
endp

proc loc_407421
;cmp dword [edi], 0x0
load tmp1, edi, 1
cmoveq tmp1, 0, tmpcnd, 0, 1

;jnz short loc_407496
ctcallnz tmpcnd, loc_407496

tcall loc_407426
endp

proc loc_407426
;fld dword [edi+0xc]
add tmpadr, edi, 12
load tmp1, tmpadr, 1
FLD_FLOAT tmp1

;fcomp dword [edi+0x14]
add tmpadr, edi, 20
load tmp1, tmpadr, 1
FCOMP_FLOAT tmp1

;fnstsw ax
FNSTSW_VOID
and eax, eax, 0xffff0000
or eax, eax, tmp0

;test ah, 0x1
and tmpcnd, eax, 0x100

;jnz short loc_407496
ctcallnz tmpcnd, loc_407496

tcall loc_407433
endp

proc loc_407433
;cmp dword [ecx], 0x1
load tmp1, ecx, 1
cmoveq tmp1, 1, tmpcnd, 0, 1

;jnz short loc_407481
ctcallnz tmpcnd, loc_407481

tcall loc_407438
endp

proc loc_407438
;mov eax, [ebp-0x4]
add tmpadr, ebp, -4
load eax, tmpadr, 4

;mov dword [edi-0x4], 0x0
add tmpadr, edi, -4
store 0, tmpadr, 1

;mov cl, [eax+loc_440D88]
mov tmpadr, loc_440D88
add tmpadr, tmpadr, eax
load8z tmp0, tmpadr, 1
and ecx, ecx, 0xffffff00
or ecx, ecx, tmp0

;dec cl
sub tmp3, ecx, 1
ins8ll ecx, ecx, tmp3
and tmpcnd, ecx, 0xff

;mov [eax+loc_440D88], cl
mov tmpadr, loc_440D88
add tmpadr, tmpadr, eax
store8 ecx, tmpadr, 1

;jz near loc_4076B6
ctcallz tmpcnd, loc_4076B6

tcall loc_407456
endp

proc loc_407456
;mov eax, [ebp-0xc]
add tmpadr, ebp, -12
load eax, tmpadr, 4

;test eax, eax
mov tmpcnd, eax

;jz short loc_407471
ctcallz tmpcnd, loc_407471

tcall loc_40745D
endp

proc loc_40745D
;cmp word [ebx+0x10], 0x0
add tmpadr, ebx, 16
load16z tmp1, tmpadr, 1
and tmpcnd, tmp1, 0xffff

;mov eax, loc_40DD90
mov eax, loc_40DD90

;jnz short loc_40746E
ctcallnz tmpcnd, loc_40746E

tcall loc_407469
endp

proc loc_407469
;mov eax, loc_40D6F0
mov eax, loc_40D6F0

tcall loc_40746E
endp

proc loc_40746E
;mov [esi+0x10], eax
add tmpadr, esi, 16
store eax, tmpadr, 1

tcall loc_407471
endp

proc loc_407471
;mov edx, [ebp-0xc]
add tmpadr, ebp, -12
load edx, tmpadr, 4

;mov ecx, [ebp-0x4]
add tmpadr, ebp, -4
load ecx, tmpadr, 4

;push edx
PUSH edx

;mov edx, ebx
mov edx, ebx

;call loc_40A670
PUSH loc_40747F
tcall loc_40A670
endp

proc loc_40747F
;jmp short loc_4074D5
tcall loc_4074D5
endp

proc loc_407481
;mov dword [edi], 0x1
mov tmp1, 0x1
store tmp1, edi, 1

;mov eax, [ecx+0x18]
add tmpadr, ecx, 24
load eax, tmpadr, 1

;mov [edi+0x28], eax
add tmpadr, edi, 40
store eax, tmpadr, 1

;mov dword [ebp-0x8], 0x1
add tmpadr, ebp, -8
mov tmp1, 0x1
store tmp1, tmpadr, 4

;jmp short loc_40749D
tcall loc_40749D
endp

proc loc_407496
;mov eax, [ebp-0x8]
add tmpadr, ebp, -8
load eax, tmpadr, 4

;test eax, eax
mov tmpcnd, eax

;jz short loc_4074CB
ctcallz tmpcnd, loc_4074CB

tcall loc_40749D
endp

proc loc_40749D
;fld dword [edi+0x28]
add tmpadr, edi, 40
load tmp1, tmpadr, 1
FLD_FLOAT tmp1

;fadd dword [edi+0x24]
add tmpadr, edi, 36
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;fadd dword [edi+0x20]
add tmpadr, edi, 32
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;fadd dword [esi+0x8]
add tmpadr, esi, 8
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;fadd dword [esi+0x4]
add tmpadr, esi, 4
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;fst dword [ebp-0x14]
FST_FLOAT
add tmpadr, ebp, -20
store tmp0, tmpadr, 4

;fcomp dword [edi+0x2c]
add tmpadr, edi, 44
load tmp1, tmpadr, 1
FCOMP_FLOAT tmp1

;fnstsw ax
FNSTSW_VOID
and eax, eax, 0xffff0000
or eax, eax, tmp0

;test ah, 0x41
and tmpcnd, eax, 0x4100

;jnz short loc_4074BF
ctcallnz tmpcnd, loc_4074BF

tcall loc_4074B9
endp

proc loc_4074B9
;mov ecx, [edi+0x2c]
add tmpadr, edi, 44
load ecx, tmpadr, 1

;mov [ebp-0x14], ecx
add tmpadr, ebp, -20
store ecx, tmpadr, 4

tcall loc_4074BF
endp

proc loc_4074BF
;mov edx, [ebp-0x14]
add tmpadr, ebp, -20
load edx, tmpadr, 4

;push edx
PUSH edx

;call loc_40DB20
PUSH loc_4074C8
tcall loc_40DB20
endp

proc loc_4074C8
;fstp dword [edi+0x8]
FSTP_FLOAT
add tmpadr, edi, 8
store tmp0, tmpadr, 1

tcall loc_4074CB
endp

proc loc_4074CB
;lea ecx, [edi-0x4]
add ecx, edi, -4

;mov edx, loc_455904
mov edx, loc_455904

;call dword [ecx]
load tmp2, ecx, 1
PUSH loc_4074D5
tcall tmp2
endp

proc loc_4074D5
;mov eax, [ebp-0xc]
add tmpadr, ebp, -12
load eax, tmpadr, 4

;mov ecx, [ebp-0x18]
add tmpadr, ebp, -24
load ecx, tmpadr, 4

;mov edx, eax
mov edx, eax

;dec eax
sub eax, eax, 1

;sub edi, 0x34
sub edi, edi, 52

;sub ecx, 0x20
sub ecx, ecx, 32

;test edx, edx
mov tmpcnd, edx

;mov [ebp-0xc], eax
add tmpadr, ebp, -12
store eax, tmpadr, 4

;mov [ebp-0x18], ecx
add tmpadr, ebp, -24
store ecx, tmpadr, 4

;jnz near loc_407416
ctcallnz tmpcnd, loc_407416

tcall loc_4074F2
endp

proc loc_4074F2
;mov eax, [ebx+0x78]
add tmpadr, ebx, 120
load eax, tmpadr, 1

;test eax, eax
mov tmpcnd, eax

;jz near loc_407591
ctcallz tmpcnd, loc_407591

tcall loc_4074FD
endp

proc loc_4074FD
;fld dword [esi+0x88]
add tmpadr, esi, 136
load tmp1, tmpadr, 1
FLD_FLOAT tmp1

;fcomp dword [ebx+0x70]
add tmpadr, ebx, 112
load tmp1, tmpadr, 1
FCOMP_FLOAT tmp1

;xor ecx, ecx
xor ecx, ecx, ecx

;fnstsw ax
FNSTSW_VOID
and eax, eax, 0xffff0000
or eax, eax, tmp0

;test ah, 0x40
and tmpcnd, eax, 0x4000

;jnz short loc_40751D
ctcallnz tmpcnd, loc_40751D

tcall loc_40750F
endp

proc loc_40750F
;mov eax, [ebx+0x70]
add tmpadr, ebx, 112
load eax, tmpadr, 1

;mov ecx, 0x1
mov ecx, 0x1

;mov [esi+0x88], eax
add tmpadr, esi, 136
store eax, tmpadr, 1

tcall loc_40751D
endp

proc loc_40751D
;fld dword [ebp-0x10]
add tmpadr, ebp, -16
load tmp1, tmpadr, 4
FLD_FLOAT tmp1

;fmul dword [ebx+0x68]
add tmpadr, ebx, 104
load tmp1, tmpadr, 1
FMUL_FLOAT tmp1

;fcom dword [esi+0x8c]
add tmpadr, esi, 140
load tmp1, tmpadr, 1
FCOM_FLOAT tmp1

;fnstsw ax
FNSTSW_VOID
and eax, eax, 0xffff0000
or eax, eax, tmp0

;test ah, 0x40
and tmpcnd, eax, 0x4000

;jnz short loc_40753D
ctcallnz tmpcnd, loc_40753D

tcall loc_407530
endp

proc loc_407530
;fstp dword [esi+0x8c]
FSTP_FLOAT
add tmpadr, esi, 140
store tmp0, tmpadr, 1

;mov ecx, 0x1
mov ecx, 0x1

;jmp short loc_40753F
tcall loc_40753F
endp

proc loc_40753D
;fstp st0
FSTP_ST 0

tcall loc_40753F
endp

proc loc_40753F
;fld dword [ebx+0x64]
add tmpadr, ebx, 100
load tmp1, tmpadr, 1
FLD_FLOAT tmp1

;fmul dword [esi+0x114]
add tmpadr, esi, 276
load tmp1, tmpadr, 1
FMUL_FLOAT tmp1

;fcom dword [esi+0x90]
add tmpadr, esi, 144
load tmp1, tmpadr, 1
FCOM_FLOAT tmp1

;fnstsw ax
FNSTSW_VOID
and eax, eax, 0xffff0000
or eax, eax, tmp0

;test ah, 0x40
and tmpcnd, eax, 0x4000

;jnz short loc_40755D
ctcallnz tmpcnd, loc_40755D

tcall loc_407555
endp

proc loc_407555
;fstp dword [esi+0x90]
FSTP_FLOAT
add tmpadr, esi, 144
store tmp0, tmpadr, 1

;jmp short loc_407563
tcall loc_407563
endp

proc loc_40755D
;test ecx, ecx
and eflags, eflags, ~ZF
cmovz ecx, tmp0, ZF, 0
or eflags, eflags, tmp0

;fstp st0
FSTP_ST 0

;jz short loc_40758B
and tmp1, eflags, ZF
ctcallnz tmp1, loc_40758B

tcall loc_407563
endp

proc loc_407563
;lea edi, [esi+0x78]
add edi, esi, 120

;mov ecx, edi
mov ecx, edi

;call loc_4081E0
PUSH loc_40756D
tcall loc_4081E0
endp

proc loc_40756D
;test eax, eax
mov tmpcnd, eax

;jz short loc_40757F
ctcallz tmpcnd, loc_40757F

tcall loc_407571
endp

proc loc_407571
;mov eax, [esi+0x84]
add tmpadr, esi, 132
load eax, tmpadr, 1

;mov ecx, edi
mov ecx, edi

;test eax, eax
mov tmpcnd, eax

;jnz short loc_407583
ctcallnz tmpcnd, loc_407583

tcall loc_40757D
endp

proc loc_40757D
;call dword [edi]
load tmp2, edi, 1
PUSH loc_40757F
tcall tmp2
endp

proc loc_40757F
;mov ecx, edi
mov ecx, edi

;jmp short loc_40758E
tcall loc_40758E
endp

proc loc_407583
;call dword [esi+0x80]
add tmpadr, esi, 128
load tmp2, tmpadr, 1
PUSH loc_407589
tcall tmp2
endp

proc loc_407589
;jmp short loc_407591
tcall loc_407591
endp

proc loc_40758B
;lea ecx, [esi+0x78]
add ecx, esi, 120

tcall loc_40758E
endp

proc loc_40758E
;call dword [esi+0x7c]
add tmpadr, esi, 124
load tmp2, tmpadr, 1
PUSH loc_407591
tcall tmp2
endp

proc loc_407591
;lea edi, [esi+0xec]
add edi, esi, 236

;lea edx, [ebx+0x94]
add edx, ebx, 148

;mov ecx, edi
mov ecx, edi

;call dword [esi+0xe8]
add tmpadr, esi, 232
load tmp2, tmpadr, 1
PUSH loc_4075A5
tcall tmp2
endp

proc loc_4075A5
;test eax, eax
mov tmpcnd, eax

;jz short loc_407618
ctcallz tmpcnd, loc_407618

tcall loc_4075A9
endp

proc loc_4075A9
;fld dword [ebx+0xb0]
add tmpadr, ebx, 176
load tmp1, tmpadr, 1
FLD_FLOAT tmp1

;fcomp dword [loc_4189F0]
load tmp1, loc_4189F0, 4
FCOMP_FLOAT tmp1

;fnstsw ax
FNSTSW_VOID
and eax, eax, 0xffff0000
or eax, eax, tmp0

;test ah, 0x1
and tmpcnd, eax, 0x100

;jz short loc_4075DB
ctcallz tmpcnd, loc_4075DB

tcall loc_4075BC
endp

proc loc_4075BC
;fld dword [ebx+0xb4]
add tmpadr, ebx, 180
load tmp1, tmpadr, 1
FLD_FLOAT tmp1

;fcomp dword [loc_4189F0]
load tmp1, loc_4189F0, 4
FCOMP_FLOAT tmp1

;fnstsw ax
FNSTSW_VOID
and eax, eax, 0xffff0000
or eax, eax, tmp0

;test ah, 0x1
and tmpcnd, eax, 0x100

;mov eax, loc_40E270
mov eax, loc_40E270

;jnz short loc_407612
ctcallnz tmpcnd, loc_407612

tcall loc_4075D4
endp

proc loc_4075D4
;mov eax, loc_40E390
mov eax, loc_40E390

;jmp short loc_407612
tcall loc_407612
endp

proc loc_4075DB
;fld dword [ebx+0xb4]
add tmpadr, ebx, 180
load tmp1, tmpadr, 1
FLD_FLOAT tmp1

;fcomp dword [loc_4189F0]
load tmp1, loc_4189F0, 4
FCOMP_FLOAT tmp1

;mov eax, [loc_41B6F4]
load eax, loc_41B6F4, 4

;test eax, eax
and eflags, eflags, ~ZF
cmovz eax, tmp0, ZF, 0
or eflags, eflags, tmp0

;fnstsw ax
FNSTSW_VOID
and eax, eax, 0xffff0000
or eax, eax, tmp0

;jz short loc_407603
and tmp1, eflags, ZF
ctcallnz tmp1, loc_407603

tcall loc_4075F2
endp

proc loc_4075F2
;test ah, 0x1
and tmpcnd, eax, 0x100

;mov eax, loc_40E520
mov eax, loc_40E520

;jnz short loc_407612
ctcallnz tmpcnd, loc_407612

tcall loc_4075FC
endp

proc loc_4075FC
;mov eax, loc_40E680
mov eax, loc_40E680

;jmp short loc_407612
tcall loc_407612
endp

proc loc_407603
;test ah, 0x1
and tmpcnd, eax, 0x100

;mov eax, loc_40E840
mov eax, loc_40E840

;jnz short loc_407612
ctcallnz tmpcnd, loc_407612

tcall loc_40760D
endp

proc loc_40760D
;mov eax, loc_40E9D0
mov eax, loc_40E9D0

tcall loc_407612
endp

proc loc_407612
;mov [esi+0xe0], eax
add tmpadr, esi, 224
store eax, tmpadr, 1

tcall loc_407618
endp

proc loc_407618
;cmp word [esi+0xfe], 0x2
add tmpadr, esi, 254
load16z tmp1, tmpadr, 1
and eflags, eflags, ~(ZF|SF|OF)
ext16s tmp3, tmp1
cmovslt tmp3, -32766, tmp3, OF, 0
or eflags, eflags, tmp3
sub tmp1, tmp1, 2
and tmp0, tmp1, 0xffff
cmovz tmp0, tmp0, ZF, 0
or eflags, eflags, tmp0
and tmp0, tmp1, 0x8000
cmovz tmp0, tmp0, 0, SF
or eflags, eflags, tmp0

;jg short loc_40762C
lshr tmp1, eflags, SF_SHIFT - ZF_SHIFT
lshr tmp2, eflags, OF_SHIFT - ZF_SHIFT
xor tmp1, tmp1, tmp2
or tmp1, tmp1, eflags
and tmp1, tmp1, ZF
ctcallz tmp1, loc_40762C

tcall loc_407622
endp

proc loc_407622
;fld dword [esi+0xf4]
add tmpadr, esi, 244
load tmp1, tmpadr, 1
FLD_FLOAT tmp1

;fmul dword [edi]
load tmp1, edi, 1
FMUL_FLOAT tmp1

;jmp short loc_407644
tcall loc_407644
endp

proc loc_40762C
;fld dword [loc_4189F4]
load tmp1, loc_4189F4, 4
FLD_FLOAT tmp1

;fsub dword [edi]
load tmp1, edi, 1
FSUB_FLOAT tmp1

;fld st0
FLD_ST 0

;fmulp st1, st0
FMULP_ST 1

;fsubr dword [loc_4189F4]
load tmp1, loc_4189F4, 4
FSUBR_FLOAT tmp1

;fmul dword [esi+0xf4]
add tmpadr, esi, 244
load tmp1, tmpadr, 1
FMUL_FLOAT tmp1

tcall loc_407644
endp

proc loc_407644
;fadd dword [esi+0xf8]
add tmpadr, esi, 248
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;fld dword [esi+0x114]
add tmpadr, esi, 276
load tmp1, tmpadr, 1
FLD_FLOAT tmp1

;fsub dword [loc_4189F4]
load tmp1, loc_4189F4, 4
FSUB_FLOAT tmp1

;mov eax, [ebx+0x7c]
add tmpadr, ebx, 124
load eax, tmpadr, 1

;lea edx, [ebx+0x7c]
add edx, ebx, 124

;test eax, eax
and eflags, eflags, ~ZF
cmovz eax, tmp0, ZF, 0
or eflags, eflags, tmp0

;fmul dword [ebx+0xac]
add tmpadr, ebx, 172
load tmp1, tmpadr, 1
FMUL_FLOAT tmp1

;fmul dword [loc_4189D4]
load tmp1, loc_4189D4, 4
FMUL_FLOAT tmp1

;fadd dword [loc_4189F4]
load tmp1, loc_4189F4, 4
FADD_FLOAT tmp1

;fmul st0, st1
FMUL_ST 1

;fstp dword [ebp-0x10]
FSTP_FLOAT
add tmpadr, ebp, -16
store tmp0, tmpadr, 4

;fstp st0
FSTP_ST 0

;jz short loc_4076A0
and tmp1, eflags, ZF
ctcallnz tmp1, loc_4076A0

tcall loc_407679
endp

proc loc_407679
;fld dword [ebx+0x80]
add tmpadr, ebx, 128
load tmp1, tmpadr, 1
FLD_FLOAT tmp1

;fadd dword [ebx+0x88]
add tmpadr, ebx, 136
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;dec eax
sub eax, eax, 1

;mov [edx], eax
store eax, edx, 1

;fstp dword [ebx+0x88]
FSTP_FLOAT
add tmpadr, ebx, 136
store tmp0, tmpadr, 1

;fld dword [ebx+0x84]
add tmpadr, ebx, 132
load tmp1, tmpadr, 1
FLD_FLOAT tmp1

;fadd dword [ebx+0x8c]
add tmpadr, ebx, 140
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;fstp dword [ebx+0x8c]
FSTP_FLOAT
add tmpadr, ebx, 140
store tmp0, tmpadr, 1

tcall loc_4076A0
endp

proc loc_4076A0
;mov eax, [ebp-0x10]
add tmpadr, ebp, -16
load eax, tmpadr, 4

;lea ecx, [esi+0xe0]
add ecx, esi, 224

;push eax
PUSH eax

;call dword [ecx]
load tmp2, ecx, 1
PUSH loc_4076AC
tcall tmp2
endp

proc loc_4076AC
;mov al, [esi+0x100]
add tmpadr, esi, 256
load8z tmp0, tmpadr, 1
and eax, eax, 0xffffff00
or eax, eax, tmp0

;test al, al
and tmpcnd, eax, 0xff

;jz short loc_4076D2
ctcallz tmpcnd, loc_4076D2

tcall loc_4076B6
endp

proc loc_4076B6
;mov esi, [ebp-0x4]
add tmpadr, ebp, -4
load esi, tmpadr, 4

;mov edx, ebx
mov edx, ebx

;mov ecx, esi
mov ecx, esi

;mov byte [esi+loc_440D88], 0x0
mov tmpadr, loc_440D88
add tmpadr, tmpadr, esi
store8 0, tmpadr, 1

;mov byte [esi+loc_440E08], 0x0
mov tmpadr, loc_440E08
add tmpadr, tmpadr, esi
store8 0, tmpadr, 1

;call loc_40A660
PUSH loc_4076D0
tcall loc_40A660
endp

proc loc_4076D0
;jmp short loc_4076D5
tcall loc_4076D5
endp

proc loc_4076D2
;mov esi, [ebp-0x4]
add tmpadr, ebp, -4
load esi, tmpadr, 4

tcall loc_4076D5
endp

proc loc_4076D5
;inc esi
add esi, esi, 1

;cmp esi, 0x80
cmovslt esi, 128, tmpcnd, 0, 1

;mov [ebp-0x4], esi
add tmpadr, ebp, -4
store esi, tmpadr, 4

;jl near loc_406ADC
ctcallz tmpcnd, loc_406ADC

tcall loc_4076E5
endp

proc loc_4076E5
;mov eax, [loc_455D14]
load eax, loc_455D14, 4

;test eax, eax
mov tmpcnd, eax

;jz near loc_407885
ctcallz tmpcnd, loc_407885

tcall loc_4076F2
endp

proc loc_4076F2
;mov al, [loc_455D60]
load8z tmp0, loc_455D60, 4
and eax, eax, 0xffffff00
or eax, eax, tmp0

;test al, al
and tmpcnd, eax, 0xff

;jz near loc_40782F
ctcallz tmpcnd, loc_40782F

tcall loc_4076FF
endp

proc loc_4076FF
;xor ecx, ecx
xor ecx, ecx, ecx

;mov byte [loc_455D60], 0x0
store8 0, loc_455D60, 4

;mov cl, [loc_455D63]
load8z tmp0, loc_455D63, 1
and ecx, ecx, 0xffffff00
or ecx, ecx, tmp0

;mov [ebp-0x18], ecx
add tmpadr, ebp, -24
store ecx, tmpadr, 4

;fild dword [ebp-0x18]
add tmpadr, ebp, -24
load tmp1, tmpadr, 4
FILD_INT32 tmp1

;fmul dword [loc_41B6CC]
load tmp1, loc_41B6CC, 4
FMUL_FLOAT tmp1

;fmul dword [loc_4189D0]
load tmp1, loc_4189D0, 4
FMUL_FLOAT tmp1

;fstp dword [ebp-0x18]
FSTP_FLOAT
add tmpadr, ebp, -24
store tmp0, tmpadr, 4

;fld dword [ebp-0x18]
add tmpadr, ebp, -24
load tmp1, tmpadr, 4
FLD_FLOAT tmp1

;fistp dword [ebp-0x14]
FISTP_INT32
add tmpadr, ebp, -20
store tmp0, tmpadr, 4

;xor eax, eax
xor eax, eax, eax

;mov ecx, [loc_455D64]
load ecx, loc_455D64, 4

;mov al, [loc_455D65]
load8z tmp0, loc_455D65, 1
and eax, eax, 0xffffff00
or eax, eax, tmp0

;mov edx, [ebp-0x14]
add tmpadr, ebp, -20
load edx, tmpadr, 4

;mov [ebp-0x18], eax
add tmpadr, ebp, -24
store eax, tmpadr, 4

;and ecx, 0xff
and ecx, ecx, 0xff

;fild dword [ebp-0x18]
add tmpadr, ebp, -24
load tmp1, tmpadr, 4
FILD_INT32 tmp1

;mov [ebp-0x18], ecx
add tmpadr, ebp, -24
store ecx, tmpadr, 4

;inc edx
add edx, edx, 1

;mov [loc_445860], edx
store edx, loc_445860, 4

;xor edx, edx
xor edx, edx, edx

;fmul dword [loc_41B6CC]
load tmp1, loc_41B6CC, 4
FMUL_FLOAT tmp1

;mov dl, [loc_455D62]
load8z tmp0, loc_455D62, 2
and edx, edx, 0xffffff00
or edx, edx, tmp0

;xor eax, eax
xor eax, eax, eax

;mov al, [loc_455D66]
load8z tmp0, loc_455D66, 2
and eax, eax, 0xffffff00
or eax, eax, tmp0

;xor ecx, ecx
xor ecx, ecx, ecx

;fmul dword [loc_4189CC]
load tmp1, loc_4189CC, 4
FMUL_FLOAT tmp1

;mov cl, [loc_455D61]
load8z tmp0, loc_455D61, 1
and ecx, ecx, 0xffffff00
or ecx, ecx, tmp0

;fadd dword [loc_4189C8]
load tmp1, loc_4189C8, 4
FADD_FLOAT tmp1

;fst dword [loc_445878]
FST_FLOAT
store tmp0, loc_445878, 4

;fmul dword [loc_4189D4]
load tmp1, loc_4189D4, 4
FMUL_FLOAT tmp1

;fstp dword [loc_445870]
FSTP_FLOAT
store tmp0, loc_445870, 4

;fld dword [loc_41B6CC]
load tmp1, loc_41B6CC, 4
FLD_FLOAT tmp1

;fmul dword [loc_4189C4]
load tmp1, loc_4189C4, 4
FMUL_FLOAT tmp1

;fdivr dword [loc_4189C0]
load tmp1, loc_4189C0, 4
FDIVR_FLOAT tmp1

;fimul dword [ebp-0x18]
add tmpadr, ebp, -24
load tmp1, tmpadr, 4
FIMUL_INT32 tmp1

;mov [ebp-0x18], edx
add tmpadr, ebp, -24
store edx, tmpadr, 4

;fmul dword [loc_445878]
load tmp1, loc_445878, 4
FMUL_FLOAT tmp1

;fstp dword [loc_445874]
FSTP_FLOAT
store tmp0, loc_445874, 4

;fild dword [ebp-0x18]
add tmpadr, ebp, -24
load tmp1, tmpadr, 4
FILD_INT32 tmp1

;mov [ebp-0x18], eax
add tmpadr, ebp, -24
store eax, tmpadr, 4

;fmul dword [loc_4189BC]
load tmp1, loc_4189BC, 4
FMUL_FLOAT tmp1

;fstp dword [loc_445880]
FSTP_FLOAT
store tmp0, loc_445880, 4

;fild dword [ebp-0x18]
add tmpadr, ebp, -24
load tmp1, tmpadr, 4
FILD_INT32 tmp1

;mov [ebp-0x18], ecx
add tmpadr, ebp, -24
store ecx, tmpadr, 4

;fmul dword [loc_4189B8]
load tmp1, loc_4189B8, 4
FMUL_FLOAT tmp1

;fstp dword [loc_445884]
FSTP_FLOAT
store tmp0, loc_445884, 4

;fild dword [ebp-0x18]
add tmpadr, ebp, -24
load tmp1, tmpadr, 4
FILD_INT32 tmp1

;fmul dword [loc_4181E0]
load tmp1, loc_4181E0, 4
FMUL_FLOAT tmp1

;fstp dword [loc_44587C]
FSTP_FLOAT
store tmp0, loc_44587C, 4

;fld dword [loc_445878]
load tmp1, loc_445878, 4
FLD_FLOAT tmp1

;fistp dword [ebp-0x18]
FISTP_INT32
add tmpadr, ebp, -24
store tmp0, tmpadr, 4

;mov edx, [ebp-0x18]
add tmpadr, ebp, -24
load edx, tmpadr, 4

;mov eax, [loc_445860]
load eax, loc_445860, 4

;lea ecx, [eax+edx+0x1]
add tmpadr, eax, edx
add ecx, tmpadr, 1

;mov al, [loc_455D62]
load8z tmp0, loc_455D62, 2
and eax, eax, 0xffffff00
or eax, eax, tmp0

;test al, al
and tmpcnd, eax, 0xff

;mov [loc_445858], ecx
store ecx, loc_445858, 4

;jz short loc_40781B
ctcallz tmpcnd, loc_40781B

tcall loc_407805
endp

proc loc_407805
;mov dword [loc_445864], loc_40B5F0
mov tmp1, loc_40B5F0
store tmp1, loc_445864, 4

;mov dword [loc_445868], loc_40B4F0
mov tmp1, loc_40B4F0
store tmp1, loc_445868, 4

;jmp short loc_40782F
tcall loc_40782F
endp

proc loc_40781B
;mov dword [loc_445864], loc_40B790
mov tmp1, loc_40B790
store tmp1, loc_445864, 4

;mov dword [loc_445868], loc_40B6C0
mov tmp1, loc_40B6C0
store tmp1, loc_445868, 4

tcall loc_40782F
endp

proc loc_40782F
;mov edx, [loc_445858]
load edx, loc_445858, 4

;mov eax, [loc_44585C]
load eax, loc_44585C, 4

;cmp edx, eax
cmovult edx, eax, tmpcnd, 0, 1

;mov dword [loc_41B704], 0x1
mov tmp1, 0x1
store tmp1, loc_41B704, 4

;jae short loc_407850
ctcallnz tmpcnd, loc_407850

tcall loc_407848
endp

proc loc_407848
;call dword [loc_445864]
load tmp2, loc_445864, 4
PUSH loc_40784E
tcall tmp2
endp

proc loc_40784E
;jmp short loc_407860
tcall loc_407860
endp

proc loc_407850
;mov eax, [loc_441850]
load eax, loc_441850, 4

;mov [loc_445850], eax
store eax, loc_445850, 4

;call dword [loc_445868]
load tmp2, loc_445868, 4
PUSH loc_407860
tcall tmp2
endp

proc loc_407860
;mov ecx, [loc_441848]
load ecx, loc_441848, 4

;mov edx, [loc_44585C]
load edx, loc_44585C, 4

;lea eax, [edx+ecx]
add eax, edx, ecx

;and eax, 0xfff
and eax, eax, 0xfff

;mov [loc_44585C], eax
store eax, loc_44585C, 4

;lea eax, [eax*4+loc_441850]
mov tmpadr, loc_441850
shl tmp0, eax, 2
add eax, tmpadr, tmp0

;mov [loc_44586C], eax
store eax, loc_44586C, 4

tcall loc_407885
endp

proc loc_407885
;mov eax, [loc_455D10]
load eax, loc_455D10, 4

;test eax, eax
mov tmpcnd, eax

;jz near loc_407965
ctcallz tmpcnd, loc_407965

tcall loc_407892
endp

proc loc_407892
;mov eax, [loc_455D18]
load eax, loc_455D18, 4

;test eax, eax
mov tmpcnd, eax

;jz short loc_4078A0
ctcallz tmpcnd, loc_4078A0

tcall loc_40789B
endp

proc loc_40789B
;call loc_408A20
PUSH loc_4078A0
tcall loc_408A20
endp

proc loc_4078A0
;mov esi, [loc_455888]
load esi, loc_455888, 4

;mov ecx, [loc_45589C]
load ecx, loc_45589C, 4

;mov edx, [loc_4558A0]
load edx, loc_4558A0, 4

;sub esi, loc_445888
mov tmp1, loc_445888
sub esi, esi, tmp1

;mov eax, [loc_455898]
load eax, loc_455898, 4

;mov dword [loc_41B700], 0x1
mov tmp1, 0x1
store tmp1, loc_41B700, 4

;sar esi, 0x2
ashr esi, esi, 2

;add eax, esi
add eax, eax, esi

;lea edi, [ecx+esi]
add edi, ecx, esi

;mov ecx, esi
mov ecx, esi

;and edi, 0x3fff
and edi, edi, 0x3fff

;lea ebx, [edx+edi]
add ebx, edx, edi

;and ebx, 0x3fff
and ebx, ebx, 0x3fff

;test eax, 0xffffc000
and tmp1, eax, 0xffffc000
mov tmpcnd, tmp1

;jz short loc_4078F9
ctcallz tmpcnd, loc_4078F9

tcall loc_4078E7
endp

proc loc_4078E7
;call loc_40B850
PUSH loc_4078EC
tcall loc_40B850
endp

proc loc_4078EC
;mov edx, edi
mov edx, edi

;mov ecx, esi
mov ecx, esi

;push ebx
PUSH ebx

;call dword [loc_44102C]
load tmp2, loc_44102C, 4
PUSH loc_4078F7
tcall tmp2
endp

proc loc_4078F7
;jmp short loc_40794B
tcall loc_40794B
endp

proc loc_4078F9
;call loc_40BA10
PUSH loc_4078FE
tcall loc_40BA10
endp

proc loc_4078FE
;mov eax, [loc_44184C]
load eax, loc_44184C, 4

;mov edx, [loc_4558CC]
load edx, loc_4558CC, 4

;add edx, edi
add edx, edx, edi

;lea ecx, [edi+eax]
add ecx, edi, eax

;or ecx, edx
or ecx, ecx, edx

;test ecx, 0xffffc000
and tmp1, ecx, 0xffffc000
mov tmpcnd, tmp1

;jz short loc_407925
ctcallz tmpcnd, loc_407925

tcall loc_407918
endp

proc loc_407918
;push ebx
PUSH ebx

;mov edx, edi
mov edx, edi

;mov ecx, esi
mov ecx, esi

;call dword [loc_441030]
load tmp2, loc_441030, 4
PUSH loc_407923
tcall tmp2
endp

proc loc_407923
;jmp short loc_40794B
tcall loc_40794B
endp

proc loc_407925
;mov ecx, [loc_4558B4]
load ecx, loc_4558B4, 4

;add eax, ebx
add eax, eax, ebx

;add ecx, ebx
add ecx, ecx, ebx

;push ebx
PUSH ebx

;or eax, ecx
or eax, eax, ecx

;mov edx, edi
mov edx, edi

;test eax, 0xffffc000
and tmp1, eax, 0xffffc000
mov tmpcnd, tmp1

;mov ecx, esi
mov ecx, esi

;jz short loc_407945
ctcallz tmpcnd, loc_407945

tcall loc_40793D
endp

proc loc_40793D
;call dword [loc_441034]
load tmp2, loc_441034, 4
PUSH loc_407943
tcall tmp2
endp

proc loc_407943
;jmp short loc_40794B
tcall loc_40794B
endp

proc loc_407945
;call dword [loc_441038]
load tmp2, loc_441038, 4
PUSH loc_40794B
tcall tmp2
endp

proc loc_40794B
;mov edx, [loc_44184C]
load edx, loc_44184C, 4

;add esi, edx
add esi, esi, edx

;and esi, 0x3fff
and esi, esi, 0x3fff

;lea eax, [esi*4+loc_445888]
mov tmpadr, loc_445888
shl tmp0, esi, 2
add eax, tmpadr, tmp0

;mov [loc_455888], eax
store eax, loc_455888, 4

tcall loc_407965
endp

proc loc_407965
;mov ecx, [ebp-0x1c]
add tmpadr, ebp, -28
load ecx, tmpadr, 4

;call loc_40D600
PUSH loc_40796D
tcall loc_40D600
endp

proc loc_40796D
;call timeGetTime
mov eax, 0 ; the result isn't used for anything
;mov edi, [ebp-0x20]
add tmpadr, ebp, -32
load edi, tmpadr, 4

;mov esi, [loc_44101C]
load esi, loc_44101C, 4

;sub eax, edi
sub eax, eax, edi

;add esi, eax
add esi, esi, eax

;mov eax, [loc_441020]
load eax, loc_441020, 4

;mov ecx, eax
mov ecx, eax

;dec eax
sub eax, eax, 1

;test ecx, ecx
mov tmpcnd, ecx

;mov [loc_44101C], esi
store esi, loc_44101C, 4

;mov [loc_441020], eax
store eax, loc_441020, 4

;jnz near loc_407AEA
ctcallnz tmpcnd, loc_407AEA

tcall loc_40799B
endp

proc loc_40799B
;mov edx, esi
mov edx, esi

;xor eax, eax
xor eax, eax, eax

;mov [ebp-0x30], edx
add tmpadr, ebp, -48
store edx, tmpadr, 4

;mov [ebp-0x2c], eax
add tmpadr, ebp, -44
store eax, tmpadr, 4

;fild qword [ebp-0x30]
add tmpadr, ebp, -48
load tmp1, tmpadr, 4
add tmp3, tmpadr, 4
load tmp2, tmp3, 4
FILD_INT64 tmp1, tmp2

;mov [loc_44101C], eax
store eax, loc_44101C, 4

;mov dword [loc_441020], 0xf
mov tmp1, 0xf
store tmp1, loc_441020, 4

;fmul dword [loc_4189B4]
load tmp1, loc_4189B4, 4
FMUL_FLOAT tmp1

;fstp dword [loc_441028]
FSTP_FLOAT
store tmp0, loc_441028, 4

;fld dword [loc_441028]
load tmp1, loc_441028, 4
FLD_FLOAT tmp1

;fcomp dword [loc_441040]
load tmp1, loc_441040, 4
FCOMP_FLOAT tmp1

;fnstsw ax
FNSTSW_VOID
and eax, eax, 0xffff0000
or eax, eax, tmp0

;test ah, 0x1
and tmpcnd, eax, 0x100

;jnz near loc_407A99
ctcallnz tmpcnd, loc_407A99

tcall loc_4079DA
endp

proc loc_4079DA
;mov eax, [loc_41B6D4]
load eax, loc_41B6D4, 4

;dec eax
sub eax, eax, 1
mov tmpcnd, eax

;mov [loc_41B6D4], eax
store eax, loc_41B6D4, 4

;jnz near loc_407AEA
ctcallnz tmpcnd, loc_407AEA

tcall loc_4079EB
endp

proc loc_4079EB
;fld dword [loc_441028]
load tmp1, loc_441028, 4
FLD_FLOAT tmp1

;fcomp dword [loc_4189F4]
load tmp1, loc_4189F4, 4
FCOMP_FLOAT tmp1

;fnstsw ax
FNSTSW_VOID
and eax, eax, 0xffff0000
or eax, eax, tmp0

;test ah, 0x1
and tmpcnd, eax, 0x100

;jz short loc_407A26
ctcallz tmpcnd, loc_407A26

tcall loc_4079FE
endp

proc loc_4079FE
;fld dword [loc_441028]
load tmp1, loc_441028, 4
FLD_FLOAT tmp1

;fsub dword [loc_441040]
load tmp1, loc_441040, 4
FSUB_FLOAT tmp1

;fmul dword [loc_4189C8]
load tmp1, loc_4189C8, 4
FMUL_FLOAT tmp1

;fstp dword [ebp-0x20]
FSTP_FLOAT
add tmpadr, ebp, -32
store tmp0, tmpadr, 4

;fld dword [ebp-0x20]
add tmpadr, ebp, -32
load tmp1, tmpadr, 4
FLD_FLOAT tmp1

;fistp dword [ebp-0x1c]
FISTP_INT32
add tmpadr, ebp, -28
store tmp0, tmpadr, 4

;mov eax, [ebp-0x1c]
add tmpadr, ebp, -28
load eax, tmpadr, 4

;lea ecx, [eax+0x1]
add ecx, eax, 1

;call loc_402240
PUSH loc_407A24
tcall loc_402240
endp

proc loc_407A24
;jmp short loc_407A74
tcall loc_407A74
endp

proc loc_407A26
;mov eax, [loc_41B6D8]
load eax, loc_41B6D8, 4

;dec eax
sub eax, eax, 1
mov tmpcnd, eax

;mov [loc_41B6D8], eax
store eax, loc_41B6D8, 4

;jz short loc_407A59
ctcallz tmpcnd, loc_407A59

tcall loc_407A33
endp

proc loc_407A33
;fld dword [loc_441028]
load tmp1, loc_441028, 4
FLD_FLOAT tmp1

;fsub dword [loc_441040]
load tmp1, loc_441040, 4
FSUB_FLOAT tmp1

;fmul dword [loc_4189C8]
load tmp1, loc_4189C8, 4
FMUL_FLOAT tmp1

;fstp dword [ebp-0x20]
FSTP_FLOAT
add tmpadr, ebp, -32
store tmp0, tmpadr, 4

;fld dword [ebp-0x20]
add tmpadr, ebp, -32
load tmp1, tmpadr, 4
FLD_FLOAT tmp1

;fistp dword [ebp-0x1c]
FISTP_INT32
add tmpadr, ebp, -28
store tmp0, tmpadr, 4

;mov ecx, [ebp-0x1c]
add tmpadr, ebp, -28
load ecx, tmpadr, 4

;inc ecx
add ecx, ecx, 1

;call loc_402240
PUSH loc_407A57
tcall loc_402240
endp

proc loc_407A57
;jmp short loc_407A7E
tcall loc_407A7E
endp

proc loc_407A59
;fld dword [loc_4189F4]
load tmp1, loc_4189F4, 4
FLD_FLOAT tmp1

;fdiv dword [loc_441028]
load tmp1, loc_441028, 4
FDIV_FLOAT tmp1

;push ecx
PUSH ecx

;fsubr dword [loc_4189F4]
load tmp1, loc_4189F4, 4
FSUBR_FLOAT tmp1

;fstp dword [esp]
FSTP_FLOAT
store tmp0, esp, 4

;call loc_402410
PUSH loc_407A74
tcall loc_402410
endp

proc loc_407A74
;mov dword [loc_41B6D8], 0x3
mov tmp1, 0x3
store tmp1, loc_41B6D8, 4

tcall loc_407A7E
endp

proc loc_407A7E
;pop edi
POP edi

;pop esi
POP esi

;mov dword [loc_41B6DC], 0x6
mov tmp1, 0x6
store tmp1, loc_41B6DC, 4

;mov dword [loc_41B6D4], 0x4
mov tmp1, 0x4
store tmp1, loc_41B6D4, 4

;pop ebx
POP ebx

;mov esp, ebp
mov esp, ebp

;pop ebp
POP ebp

;ret
POP tmp1
tcall tmp1
endp

proc loc_407A99
;fld dword [loc_441028]
load tmp1, loc_441028, 4
FLD_FLOAT tmp1

;fcomp dword [loc_44103C]
load tmp1, loc_44103C, 4
FCOMP_FLOAT tmp1

;fnstsw ax
FNSTSW_VOID
and eax, eax, 0xffff0000
or eax, eax, tmp0

;test ah, 0x1
and tmpcnd, eax, 0x100

;jnz short loc_407AB5
ctcallnz tmpcnd, loc_407AB5

tcall loc_407AAC
endp

proc loc_407AAC
;xor ecx, ecx
xor ecx, ecx, ecx

;call loc_402240
PUSH loc_407AB3
tcall loc_402240
endp

proc loc_407AB3
;jmp short loc_407ACC
tcall loc_407ACC
endp

proc loc_407AB5
;mov eax, [loc_41B6DC]
load eax, loc_41B6DC, 4

;dec eax
sub eax, eax, 1
mov tmpcnd, eax

;mov [loc_41B6DC], eax
store eax, loc_41B6DC, 4

;jnz short loc_407AD6
ctcallnz tmpcnd, loc_407AD6

tcall loc_407AC2
endp

proc loc_407AC2
;mov ecx, 0x1
mov ecx, 0x1

;call loc_4021B0
PUSH loc_407ACC
tcall loc_4021B0
endp

proc loc_407ACC
;mov dword [loc_41B6DC], 0x6
mov tmp1, 0x6
store tmp1, loc_41B6DC, 4

tcall loc_407AD6
endp

proc loc_407AD6
;mov dword [loc_41B6D4], 0x4
mov tmp1, 0x4
store tmp1, loc_41B6D4, 4

;mov dword [loc_41B6D8], 0x3
mov tmp1, 0x3
store tmp1, loc_41B6D8, 4

tcall loc_407AEA
endp

proc loc_407AEA
;pop edi
POP edi

;pop esi
POP esi

;pop ebx
POP ebx

;mov esp, ebp
mov esp, ebp

;pop ebp
POP ebp

;ret
POP tmp1
tcall tmp1
endp

;
proc loc_407B10
;ret
POP tmp1
tcall tmp1
endp

proc loc_407B20
;push ebx
PUSH ebx

;push ebp
PUSH ebp

;push esi
PUSH esi

;mov esi, [esp+0x14]
add tmpadr, esp, 20
load esi, tmpadr, 4

;mov [loc_44103C], esi
store esi, loc_44103C, 4

;mov esi, [esp+0x10]
add tmpadr, esp, 16
load esi, tmpadr, 4

;mov eax, 0x1
mov eax, 0x1

;xor ebp, ebp
xor ebp, ebp, ebp

;mov [loc_41B6E0], edx
store edx, loc_41B6E0, 4

;cmp ecx, 0xac44
cmoveq ecx, 44100, tmpcnd, 0, 1

;push edi
PUSH edi

;mov [loc_41B6F8], eax
store eax, loc_41B6F8, 4

;mov dword [loc_41B6D8], 0x3
mov tmp1, 0x3
store tmp1, loc_41B6D8, 4

;mov dword [loc_41B6D4], 0x4
mov tmp1, 0x4
store tmp1, loc_41B6D4, 4

;mov dword [loc_441020], 0xf
mov tmp1, 0xf
store tmp1, loc_441020, 4

;mov dword [loc_41B6DC], 0x6
mov tmp1, 0x6
store tmp1, loc_41B6DC, 4

;mov [loc_441040], esi
store esi, loc_441040, 4

;mov edx, 0x80
mov edx, 0x80

;jz short loc_407BB5
ctcallz tmpcnd, loc_407BB5

tcall loc_407B7F
endp

proc loc_407B7F
;mov [loc_41B6F4], ebp
store ebp, loc_41B6F4, 4

;mov dword [loc_41B6CC], 0x46ac4400
mov tmp1, 0x46ac4400
store tmp1, loc_41B6CC, 4

;mov [loc_441848], edx
store edx, loc_441848, 4

;mov dword [loc_455D04], 0x3c800000
mov tmp1, 0x3c800000
store tmp1, loc_455D04, 4

;mov dword [loc_455D0C], 0x10
mov tmp1, 0x10
store tmp1, loc_455D0C, 4

;mov dword [loc_441044], 0x5622
mov tmp1, 0x5622
store tmp1, loc_441044, 4

;jmp short loc_407BEC
tcall loc_407BEC
endp

proc loc_407BB5
;mov [loc_41B6F4], eax
store eax, loc_41B6F4, 4

;mov dword [loc_41B6CC], 0x472c4400
mov tmp1, 0x472c4400
store tmp1, loc_41B6CC, 4

;mov dword [loc_441848], 0x100
mov tmp1, 0x100
store tmp1, loc_441848, 4

;mov dword [loc_455D04], 0x3c000000
mov tmp1, 0x3c000000
store tmp1, loc_455D04, 4

;mov dword [loc_455D0C], 0x20
mov tmp1, 0x20
store tmp1, loc_455D0C, 4

;mov dword [loc_441044], 0xac44
mov tmp1, 0xac44
store tmp1, loc_441044, 4

tcall loc_407BEC
endp

proc loc_407BEC
;fld dword [loc_41B6CC]
load tmp1, loc_41B6CC, 4
FLD_FLOAT tmp1

;fmul dword [loc_4189D4]
load tmp1, loc_4189D4, 4
FMUL_FLOAT tmp1

;mov [loc_41B6EC], eax
store eax, loc_41B6EC, 4

;mov eax, [loc_41B700]
load eax, loc_41B700, 4

;cmp eax, ebp
and eflags, eflags, ~ZF
sub tmp1, eax, ebp
cmovz tmp1, tmp0, ZF, 0
or eflags, eflags, tmp0

;mov dword [loc_455D08], 0x3e000000
mov tmp1, 0x3e000000
store tmp1, loc_455D08, 4

;fsub dword [loc_418A00]
load tmp1, loc_418A00, 4
FSUB_FLOAT tmp1

;mov [loc_44184C], edx
store edx, loc_44184C, 4

;mov [loc_44101C], ebp
store ebp, loc_44101C, 4

;mov dword [loc_441028], 0x0
store 0, loc_441028, 4

;mov byte [loc_41B6E8], 0x4
mov tmp1, 0x4
store8 tmp1, loc_41B6E8, 4

;fstp dword [loc_41B6D0]
FSTP_FLOAT
store tmp0, loc_41B6D0, 4

;jz short loc_407C4E
and tmp1, eflags, ZF
ctcallnz tmp1, loc_407C4E

tcall loc_407C39
endp

proc loc_407C39
;mov edx, 0x4000
mov edx, 0x4000

;mov ecx, loc_445888
mov ecx, loc_445888

;call loc_40DA90
PUSH loc_407C48
tcall loc_40DA90
endp

proc loc_407C48
;mov [loc_41B700], ebp
store ebp, loc_41B700, 4

tcall loc_407C4E
endp

proc loc_407C4E
;mov eax, [loc_41B6F4]
load eax, loc_41B6F4, 4

;mov ecx, 0x12
mov ecx, 0x12

;mov esi, loc_4188D8
mov esi, loc_4188D8

;mov edi, loc_455D18
mov edi, loc_455D18

;cmp eax, ebp
and eflags, eflags, ~ZF
sub tmp1, eax, ebp
cmovz tmp1, tmp0, ZF, 0
or eflags, eflags, tmp0

;mov [loc_41B6EC], ebp
store ebp, loc_41B6EC, 4

;rep movsd
REP_MOVSD

;jz short loc_407C98
and tmp1, eflags, ZF
ctcallnz tmp1, loc_407C98

tcall loc_407C6E
endp

proc loc_407C6E
;mov dword [loc_44102C], loc_40BB60
mov tmp1, loc_40BB60
store tmp1, loc_44102C, 4

;mov dword [loc_441030], loc_40BD10
mov tmp1, loc_40BD10
store tmp1, loc_441030, 4

;mov dword [loc_441034], loc_40BF20
mov tmp1, loc_40BF20
store tmp1, loc_441034, 4

;mov dword [loc_441038], loc_40C130
mov tmp1, loc_40C130
store tmp1, loc_441038, 4

;jmp short loc_407CC0
tcall loc_407CC0
endp

proc loc_407C98
;mov dword [loc_44102C], loc_40C950
mov tmp1, loc_40C950
store tmp1, loc_44102C, 4

;mov dword [loc_441030], loc_40CAE0
mov tmp1, loc_40CAE0
store tmp1, loc_441030, 4

;mov dword [loc_441034], loc_40CCC0
mov tmp1, loc_40CCC0
store tmp1, loc_441034, 4

;mov dword [loc_441038], loc_40CEA0
mov tmp1, loc_40CEA0
store tmp1, loc_441038, 4

tcall loc_407CC0
endp

proc loc_407CC0
;call loc_408A20
PUSH loc_407CC5
tcall loc_408A20
endp

proc loc_407CC5
;mov [esp+0x18], ebp
add tmpadr, esp, 24
store ebp, tmpadr, 4

;mov eax, loc_440E88
mov eax, loc_440E88

tcall loc_407CCE
endp

proc loc_407CCE
;fild dword [esp+0x18]
add tmpadr, esp, 24
load tmp1, tmpadr, 4
FILD_INT32 tmp1

;mov esi, [esp+0x18]
add tmpadr, esp, 24
load esi, tmpadr, 4

;add eax, 0x4
add eax, eax, 4

;inc esi
add esi, esi, 1

;cmp eax, loc_441018
mov tmp1, loc_441018
and eflags, eflags, ~(SF|OF)
xor tmp4, eax, tmp1
sub tmp2, eax, tmp1
xor tmp3, tmp2, eax
and tmp3, tmp3, tmp4
and tmp3, tmp3, 0x80000000
lshr tmp3, tmp3, 31 - OF_SHIFT
or eflags, eflags, tmp3
and tmp0, tmp2, 0x80000000
cmovz tmp0, tmp0, 0, SF
or eflags, eflags, tmp0

;fmul dword [loc_4189FC]
load tmp1, loc_4189FC, 4
FMUL_FLOAT tmp1

;mov [esp+0x18], esi
add tmpadr, esp, 24
store esi, tmpadr, 4

;fmul dword [loc_4189F8]
load tmp1, loc_4189F8, 4
FMUL_FLOAT tmp1

;fsin
FSIN_VOID

;fstp dword [eax-0x4]
FSTP_FLOAT
add tmpadr, eax, -4
store tmp0, tmpadr, 1

;jl short loc_407CCE
lshr tmp1, eflags, OF_SHIFT - SF_SHIFT
xor tmp1, tmp1, eflags
and tmp1, tmp1, SF
ctcallnz tmp1, loc_407CCE

tcall loc_407CF6
endp

proc loc_407CF6
;mov eax, [loc_440E88]
load eax, loc_440E88, 4

;push ebp
PUSH ebp

;mov [loc_441018], eax
store eax, loc_441018, 4

tcall loc_407D01
endp

proc loc_407D01
;call time
mov eax, 0 ; the result isn't used for anything
;xor ebx, ebx
xor ebx, ebx, ebx

;add esp, 0x4
add esp, esp, 4

;mov bl, [loc_4189AE]
load8z tmp0, loc_4189AE, 2
and ebx, ebx, 0xffffff00
or ebx, ebx, tmp0

;mov ecx, loc_441850
mov ecx, loc_441850

;cmp ebx, 0x6
cmovult ebx, 6, tmpcnd, 0, 1

;mov [loc_44586C], ecx
store ecx, loc_44586C, 4

;mov [loc_44585C], ebp
store ebp, loc_44585C, 4

;mov byte [loc_41B6F0], 0xff
mov tmp1, 0xff
store8 tmp1, loc_41B6F0, 4

;jae short loc_407D93
ctcallnz tmpcnd, loc_407D93

tcall loc_407D2E
endp

proc loc_407D2E
;cmp ebx, 0xff
cmoveq ebx, 255, tmpcnd, 0, 1

;jz short loc_407D7F
ctcallz tmpcnd, loc_407D7F

tcall loc_407D36
endp

proc loc_407D36
;mov eax, [loc_41B704]
load eax, loc_41B704, 4

;mov [loc_41B6F0], bl
store8 ebx, loc_41B6F0, 4

;cmp eax, ebp
cmoveq eax, ebp, tmpcnd, 0, 1

;jz short loc_407D55
ctcallz tmpcnd, loc_407D55

tcall loc_407D45
endp

proc loc_407D45
;mov edx, 0x1000
mov edx, 0x1000

;call loc_40DA90
PUSH loc_407D4F
tcall loc_40DA90
endp

proc loc_407D4F
;mov [loc_41B704], ebp
store ebp, loc_41B704, 4

tcall loc_407D55
endp

proc loc_407D55
;lea ecx, [ebx*8]
shl ecx, ebx, 3

;sub ecx, ebx
sub ecx, ecx, ebx

;add ecx, loc_418980
mov tmp1, loc_418980
add ecx, ecx, tmp1

;mov edx, [ecx]
load edx, ecx, 1

;mov [loc_455D60], edx
store edx, loc_455D60, 4

;mov ax, [ecx+0x4]
add tmpadr, ecx, 4
load16z tmp0, tmpadr, 1
and eax, eax, 0xffff0000
or eax, eax, tmp0

;mov [loc_455D64], ax
store16 eax, loc_455D64, 4

;mov cl, [ecx+0x6]
add tmpadr, ecx, 6
load8z tmp0, tmpadr, 1
and ecx, ecx, 0xffffff00
or ecx, ecx, tmp0

;mov [loc_455D66], cl
store8 ecx, loc_455D66, 2

tcall loc_407D7F
endp

proc loc_407D7F
;lea edx, [ebx*8]
shl edx, ebx, 3

;sub edx, ebx
sub edx, edx, ebx

;mov al, [edx+loc_418981]
mov tmpadr, loc_418981
add tmpadr, tmpadr, edx
load8z tmp0, tmpadr, 1
and eax, eax, 0xffffff00
or eax, eax, tmp0

;mov [loc_455D61], al
store8 eax, loc_455D61, 1

tcall loc_407D93
endp

proc loc_407D93
;fld dword [loc_4181E8]
load tmp1, loc_4181E8, 4
FLD_FLOAT tmp1

;mov eax, loc_42BA10
mov eax, loc_42BA10

tcall loc_407D9E
endp

proc loc_407D9E
;fld st0
FLD_ST 0

;fmul dword [loc_4189F8]
load tmp1, loc_4189F8, 4
FMUL_FLOAT tmp1

;add eax, 0x4
add eax, eax, 4

;cmp eax, loc_42BD88
mov tmp1, loc_42BD88
and eflags, eflags, ~(SF|OF)
xor tmp4, eax, tmp1
sub tmp2, eax, tmp1
xor tmp3, tmp2, eax
and tmp3, tmp3, tmp4
and tmp3, tmp3, 0x80000000
lshr tmp3, tmp3, 31 - OF_SHIFT
or eflags, eflags, tmp3
and tmp0, tmp2, 0x80000000
cmovz tmp0, tmp0, 0, SF
or eflags, eflags, tmp0

;fdiv dword [loc_41B6CC]
load tmp1, loc_41B6CC, 4
FDIV_FLOAT tmp1

;fptan
FPTAN_VOID

;fstp st0
FSTP_ST 0

;fstp dword [eax-0x4]
FSTP_FLOAT
add tmpadr, eax, -4
store tmp0, tmpadr, 1

;fadd dword [loc_418A00]
load tmp1, loc_418A00, 4
FADD_FLOAT tmp1

;jl short loc_407D9E
lshr tmp1, eflags, OF_SHIFT - SF_SHIFT
xor tmp1, tmp1, eflags
and tmp1, tmp1, SF
ctcallnz tmp1, loc_407D9E

tcall loc_407DC3
endp

proc loc_407DC3
;mov ecx, 0x20
mov ecx, 0x20

;xor eax, eax
xor eax, eax, eax

;mov edi, loc_440E08
mov edi, loc_440E08

;mov esi, loc_455D68
mov esi, loc_455D68

;rep stosd
REP_STOSD

;fstp st0
FSTP_ST 0

;mov ecx, 0x20
mov ecx, 0x20

;mov edi, loc_440D88
mov edi, loc_440D88

;rep stosd
REP_STOSD

;mov ecx, 0x20
mov ecx, 0x20

;mov edi, loc_455F68
mov edi, loc_455F68

;mov edx, loc_434D88
mov edx, loc_434D88

;rep stosd
REP_STOSD

tcall loc_407DF5
endp

proc loc_407DF5
;mov [esi], edx
store edx, esi, 1

;add edx, 0xc0
add edx, edx, 192

;add esi, 0x4
add esi, esi, 4

;cmp edx, loc_43AD88
mov tmp1, loc_43AD88
cmovslt edx, tmp1, tmpcnd, 0, 1

;jl short loc_407DF5
ctcallz tmpcnd, loc_407DF5

tcall loc_407E08
endp

proc loc_407E08
;pop edi
POP edi

;pop esi
POP esi

;pop ebp
POP ebp

;pop ebx
POP ebx

;ret 0x8
POP tmp1
add esp, esp, 8
tcall tmp1
endp

proc loc_407E60
;fld dword [esp+0x8]
add tmpadr, esp, 8
load tmp1, tmpadr, 4
FLD_FLOAT tmp1

;fcomp dword [loc_4189F4]
load tmp1, loc_4189F4, 4
FCOMP_FLOAT tmp1

;fnstsw ax
FNSTSW_VOID
and eax, eax, 0xffff0000
or eax, eax, tmp0

;test ah, 0x41
and tmpcnd, eax, 0x4100

;jnz short loc_407E79
ctcallnz tmpcnd, loc_407E79

tcall loc_407E71
endp

proc loc_407E71
;mov dword [esp+0x8], 0x3f800000
add tmpadr, esp, 8
mov tmp1, 0x3f800000
store tmp1, tmpadr, 4

tcall loc_407E79
endp

proc loc_407E79
;fld dword [esp+0x4]
add tmpadr, esp, 4
load tmp1, tmpadr, 4
FLD_FLOAT tmp1

;fcom dword [esp+0x8]
add tmpadr, esp, 8
load tmp1, tmpadr, 4
FCOM_FLOAT tmp1

;fnstsw ax
FNSTSW_VOID
and eax, eax, 0xffff0000
or eax, eax, tmp0

;test ah, 0x41
and tmpcnd, eax, 0x4100

;jnz short loc_407E8E
ctcallnz tmpcnd, loc_407E8E

tcall loc_407E88
endp

proc loc_407E88
;fstp st0
FSTP_ST 0

;fld dword [esp+0x8]
add tmpadr, esp, 8
load tmp1, tmpadr, 4
FLD_FLOAT tmp1

tcall loc_407E8E
endp

proc loc_407E8E
;mov eax, [esp+0x8]
add tmpadr, esp, 8
load eax, tmpadr, 4

;fstp dword [loc_44103C]
FSTP_FLOAT
store tmp0, loc_44103C, 4

;mov [loc_441040], eax
store eax, loc_441040, 4

;ret 0x8
POP tmp1
add esp, esp, 8
tcall tmp1
endp

proc loc_407EA0
;fld dword [edx+0x34]
add tmpadr, edx, 52
load tmp1, tmpadr, 1
FLD_FLOAT tmp1

;fcomp dword [loc_4189F0]
load tmp1, loc_4189F0, 4
FCOMP_FLOAT tmp1

;fnstsw ax
FNSTSW_VOID
and eax, eax, 0xffff0000
or eax, eax, tmp0

;test ah, 0x1
and tmpcnd, eax, 0x100

;jz short loc_407ECD
ctcallz tmpcnd, loc_407ECD

tcall loc_407EB0
endp

proc loc_407EB0
;fld dword [edx+0x38]
add tmpadr, edx, 56
load tmp1, tmpadr, 1
FLD_FLOAT tmp1

;fcomp dword [loc_4189F0]
load tmp1, loc_4189F0, 4
FCOMP_FLOAT tmp1

;fnstsw ax
FNSTSW_VOID
and eax, eax, 0xffff0000
or eax, eax, tmp0

;test ah, 0x1
and tmpcnd, eax, 0x100

;mov eax, loc_40E270
mov eax, loc_40E270

;jnz short loc_407F02
ctcallnz tmpcnd, loc_407F02

tcall loc_407EC5
endp

proc loc_407EC5
;mov eax, loc_40E390
mov eax, loc_40E390

;mov [ecx], eax
store eax, ecx, 1

;ret
POP tmp1
tcall tmp1
endp

proc loc_407ECD
;fld dword [edx+0x38]
add tmpadr, edx, 56
load tmp1, tmpadr, 1
FLD_FLOAT tmp1

;fcomp dword [loc_4189F0]
load tmp1, loc_4189F0, 4
FCOMP_FLOAT tmp1

;mov eax, [loc_41B6F4]
load eax, loc_41B6F4, 4

;test eax, eax
and eflags, eflags, ~ZF
cmovz eax, tmp0, ZF, 0
or eflags, eflags, tmp0

;fnstsw ax
FNSTSW_VOID
and eax, eax, 0xffff0000
or eax, eax, tmp0

;jz short loc_407EF3
and tmp1, eflags, ZF
ctcallnz tmp1, loc_407EF3

tcall loc_407EE1
endp

proc loc_407EE1
;test ah, 0x1
and tmpcnd, eax, 0x100

;mov eax, loc_40E520
mov eax, loc_40E520

;jnz short loc_407F02
ctcallnz tmpcnd, loc_407F02

tcall loc_407EEB
endp

proc loc_407EEB
;mov eax, loc_40E680
mov eax, loc_40E680

;mov [ecx], eax
store eax, ecx, 1

;ret
POP tmp1
tcall tmp1
endp

proc loc_407EF3
;test ah, 0x1
and tmpcnd, eax, 0x100

;mov eax, loc_40E840
mov eax, loc_40E840

;jnz short loc_407F02
ctcallnz tmpcnd, loc_407F02

tcall loc_407EFD
endp

proc loc_407EFD
;mov eax, loc_40E9D0
mov eax, loc_40E9D0

tcall loc_407F02
endp

proc loc_407F02
;mov [ecx], eax
store eax, ecx, 1

;ret
POP tmp1
tcall tmp1
endp

proc loc_407F10
;push ecx
PUSH ecx

;mov ax, [ecx+0x12]
add tmpadr, ecx, 18
load16z tmp0, tmpadr, 1
and eax, eax, 0xffff0000
or eax, eax, tmp0

;push esi
PUSH esi

;cmp ax, 0x3
and eflags, eflags, ~(SF|OF)
ext16s tmp3, eax
cmovslt tmp3, -32765, tmp3, OF, 0
or eflags, eflags, tmp3
sub tmp1, eax, 3
and tmp0, tmp1, 0x8000
cmovz tmp0, tmp0, 0, SF
or eflags, eflags, tmp0

;jge near loc_407FCD
lshr tmp1, eflags, OF_SHIFT - SF_SHIFT
xor tmp1, tmp1, eflags
and tmp1, tmp1, SF
ctcallz tmp1, loc_407FCD

tcall loc_407F20
endp

proc loc_407F20
;fld dword [ecx]
load tmp1, ecx, 1
FLD_FLOAT tmp1

;fadd dword [ecx+0x4]
add tmpadr, ecx, 4
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;dec word [ecx+0x10]
add tmpadr, ecx, 16
load16z tmp1, tmpadr, 1
sub tmp1, tmp1, 1
store16 tmp1, tmpadr, 1

;mov si, [ecx+0x10]
add tmpadr, ecx, 16
load16z tmp0, tmpadr, 1
and esi, esi, 0xffff0000
or esi, esi, tmp0

;test si, si
and tmp1, esi, esi
and eflags, eflags, ~ZF
and tmp0, tmp1, 0xffff
cmovz tmp0, tmp0, ZF, 0
or eflags, eflags, tmp0

;fstp dword [ecx]
FSTP_FLOAT
store tmp0, ecx, 1

;jnz near loc_407FCD
and tmp1, eflags, ZF
ctcallz tmp1, loc_407FCD

tcall loc_407F38
endp

proc loc_407F38
;inc eax
add eax, eax, 1

;cmp ax, 0x3
and eflags, eflags, ~(SF|OF)
ext16s tmp3, eax
cmovslt tmp3, -32765, tmp3, OF, 0
or eflags, eflags, tmp3
sub tmp1, eax, 3
and tmp0, tmp1, 0x8000
cmovz tmp0, tmp0, 0, SF
or eflags, eflags, tmp0

;mov [ecx+0x12], ax
add tmpadr, ecx, 18
store16 eax, tmpadr, 1

;jge short loc_407FB9
lshr tmp1, eflags, OF_SHIFT - SF_SHIFT
xor tmp1, tmp1, eflags
and tmp1, tmp1, SF
ctcallz tmp1, loc_407FB9

tcall loc_407F43
endp

proc loc_407F43
;fld dword [ecx+0x8]
add tmpadr, ecx, 8
load tmp1, tmpadr, 1
FLD_FLOAT tmp1

;fadd dword [ecx+0xc]
add tmpadr, ecx, 12
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;movsx esi, ax
ext16s esi, eax

;fstp dword [ecx+0xc]
FSTP_FLOAT
add tmpadr, ecx, 12
store tmp0, tmpadr, 1

;push edi
PUSH edi

;mov dword [ecx], 0x0
store 0, ecx, 1

;mov di, [edx+esi*2+0x10]
shl tmpadr, esi, 1
add tmpadr, tmpadr, edx
add tmpadr, tmpadr, 16
load16z tmp0, tmpadr, 1
and edi, edi, 0xffff0000
or edi, edi, tmp0

;test di, di
and tmpcnd, edi, 0xffff

;mov [ecx+0x10], di
add tmpadr, ecx, 16
store16 edi, tmpadr, 1

;jnz short loc_407F8D
ctcallnz tmpcnd, loc_407F8D

tcall loc_407F64
endp

proc loc_407F64
;mov esi, [edx+esi*4]
shl tmpadr, esi, 2
add tmpadr, tmpadr, edx
load esi, tmpadr, 1

;inc eax
add eax, eax, 1

;cmp ax, 0x3
and eflags, eflags, ~(SF|OF)
ext16s tmp3, eax
cmovslt tmp3, -32765, tmp3, OF, 0
or eflags, eflags, tmp3
sub tmp1, eax, 3
and tmp0, tmp1, 0x8000
cmovz tmp0, tmp0, 0, SF
or eflags, eflags, tmp0

;mov [ecx+0xc], esi
add tmpadr, ecx, 12
store esi, tmpadr, 1

;mov dword [ecx+0x4], 0x0
add tmpadr, ecx, 4
store 0, tmpadr, 1

;mov [ecx+0x12], ax
add tmpadr, ecx, 18
store16 eax, tmpadr, 1

;jge short loc_407FB0
lshr tmp1, eflags, OF_SHIFT - SF_SHIFT
xor tmp1, tmp1, eflags
and tmp1, tmp1, SF
ctcallz tmp1, loc_407FB0

tcall loc_407F7C
endp

proc loc_407F7C
;movsx esi, ax
ext16s esi, eax

;mov di, [edx+esi*2+0x10]
shl tmpadr, esi, 1
add tmpadr, tmpadr, edx
add tmpadr, tmpadr, 16
load16z tmp0, tmpadr, 1
and edi, edi, 0xffff0000
or edi, edi, tmp0

;test di, di
and tmpcnd, edi, 0xffff

;mov [ecx+0x10], di
add tmpadr, ecx, 16
store16 edi, tmpadr, 1

;jz short loc_407F64
ctcallz tmpcnd, loc_407F64

tcall loc_407F8D
endp

proc loc_407F8D
;movsx eax, ax
ext16s eax, eax

;fld dword [edx+eax*4]
shl tmpadr, eax, 2
add tmpadr, tmpadr, edx
load tmp1, tmpadr, 1
FLD_FLOAT tmp1

;fsub dword [ecx+0xc]
add tmpadr, ecx, 12
load tmp1, tmpadr, 1
FSUB_FLOAT tmp1

;xor edx, edx
xor edx, edx, edx

;mov dx, [ecx+0x10]
add tmpadr, ecx, 16
load16z tmp0, tmpadr, 1
and edx, edx, 0xffff0000
or edx, edx, tmp0

;mov [esp+0x8], edx
add tmpadr, esp, 8
store edx, tmpadr, 4

;fstp dword [ecx+0x8]
FSTP_FLOAT
add tmpadr, ecx, 8
store tmp0, tmpadr, 1

;fild dword [esp+0x8]
add tmpadr, esp, 8
load tmp1, tmpadr, 4
FILD_INT32 tmp1

;fdivr dword [loc_4189F4]
load tmp1, loc_4189F4, 4
FDIVR_FLOAT tmp1

;fstp dword [ecx+0x4]
FSTP_FLOAT
add tmpadr, ecx, 4
store tmp0, tmpadr, 1

tcall loc_407FB0
endp

proc loc_407FB0
;pop edi
POP edi

;mov eax, 0x1
mov eax, 0x1

;pop esi
POP esi

;pop ecx
POP ecx

;ret
POP tmp1
tcall tmp1
endp

proc loc_407FB9
;fld dword [edx+0x8]
add tmpadr, edx, 8
load tmp1, tmpadr, 1
FLD_FLOAT tmp1

;fcomp dword [loc_4181E8]
load tmp1, loc_4181E8, 4
FCOMP_FLOAT tmp1

;fnstsw ax
FNSTSW_VOID
and eax, eax, 0xffff0000
or eax, eax, tmp0

;test ah, 0x40
and tmpcnd, eax, 0x4000

;jz short loc_407FCD
ctcallz tmpcnd, loc_407FCD

tcall loc_407FC9
endp

proc loc_407FC9
;mov byte [ecx+0x14], 0x1
add tmpadr, ecx, 20
mov tmp1, 0x1
store8 tmp1, tmpadr, 1

tcall loc_407FCD
endp

proc loc_407FCD
;xor eax, eax
xor eax, eax, eax

;pop esi
POP esi

;pop ecx
POP ecx

;ret
POP tmp1
tcall tmp1
endp

proc loc_407FE0
;mov al, [ecx+0x14]
add tmpadr, ecx, 20
load8z tmp0, tmpadr, 1
and eax, eax, 0xffffff00
or eax, eax, tmp0

;test al, al
and tmpcnd, eax, 0xff

;jnz short loc_408005
ctcallnz tmpcnd, loc_408005

tcall loc_407FE7
endp

proc loc_407FE7
;mov ax, [ecx+0x10]
add tmpadr, ecx, 16
load16z tmp0, tmpadr, 1
and eax, eax, 0xffff0000
or eax, eax, tmp0

;test ax, ax
and tmpcnd, eax, 0xffff

;jz short loc_408001
ctcallz tmpcnd, loc_408001

tcall loc_407FF0
endp

proc loc_407FF0
;fld dword [ecx+0x4]
add tmpadr, ecx, 4
load tmp1, tmpadr, 1
FLD_FLOAT tmp1

;fadd dword [ecx]
load tmp1, ecx, 1
FADD_FLOAT tmp1

;dec eax
sub eax, eax, 1

;test ax, ax
and tmp1, eax, eax
and eflags, eflags, ~ZF
and tmp0, tmp1, 0xffff
cmovz tmp0, tmp0, ZF, 0
or eflags, eflags, tmp0

;mov [ecx+0x10], ax
add tmpadr, ecx, 16
store16 eax, tmpadr, 1

;fstp dword [ecx]
FSTP_FLOAT
store tmp0, ecx, 1

;jnz short loc_408005
and tmp1, eflags, ZF
ctcallz tmp1, loc_408005

tcall loc_408001
endp

proc loc_408001
;mov byte [ecx+0x14], 0x1
add tmpadr, ecx, 20
mov tmp1, 0x1
store8 tmp1, tmpadr, 1

tcall loc_408005
endp

proc loc_408005
;xor eax, eax
xor eax, eax, eax

;ret
POP tmp1
tcall tmp1
endp

proc loc_408010
;push ecx
PUSH ecx

;movsx eax, word [ecx+0x12]
add tmpadr, ecx, 18
load16s eax, tmpadr, 1

;mov dword [ecx], 0x0
store 0, ecx, 1

;push edi
PUSH edi

;mov ax, [edx+eax*2+0x10]
shl tmpadr, eax, 1
add tmpadr, tmpadr, edx
add tmpadr, tmpadr, 16
load16z tmp0, tmpadr, 1
and eax, eax, 0xffff0000
or eax, eax, tmp0

;test ax, ax
and tmpcnd, eax, 0xffff

;mov [ecx+0x10], ax
add tmpadr, ecx, 16
store16 eax, tmpadr, 1

;jnz short loc_40805A
ctcallnz tmpcnd, loc_40805A

tcall loc_40802A
endp

proc loc_40802A
;mov ax, [ecx+0x12]
add tmpadr, ecx, 18
load16z tmp0, tmpadr, 1
and eax, eax, 0xffff0000
or eax, eax, tmp0

;movsx edi, ax
ext16s edi, eax

;inc eax
add eax, eax, 1

;mov edi, [edx+edi*4]
shl tmpadr, edi, 2
add tmpadr, tmpadr, edx
load edi, tmpadr, 1

;cmp ax, 0x3
and eflags, eflags, ~(SF|OF)
ext16s tmp3, eax
cmovslt tmp3, -32765, tmp3, OF, 0
or eflags, eflags, tmp3
sub tmp1, eax, 3
and tmp0, tmp1, 0x8000
cmovz tmp0, tmp0, 0, SF
or eflags, eflags, tmp0

;mov [ecx+0xc], edi
add tmpadr, ecx, 12
store edi, tmpadr, 1

;mov dword [ecx+0x4], 0x0
add tmpadr, ecx, 4
store 0, tmpadr, 1

;mov [ecx+0x12], ax
add tmpadr, ecx, 18
store16 eax, tmpadr, 1

;jge short loc_40807E
lshr tmp1, eflags, OF_SHIFT - SF_SHIFT
xor tmp1, tmp1, eflags
and tmp1, tmp1, SF
ctcallz tmp1, loc_40807E

tcall loc_408049
endp

proc loc_408049
;movsx eax, ax
ext16s eax, eax

;mov ax, [edx+eax*2+0x10]
shl tmpadr, eax, 1
add tmpadr, tmpadr, edx
add tmpadr, tmpadr, 16
load16z tmp0, tmpadr, 1
and eax, eax, 0xffff0000
or eax, eax, tmp0

;test ax, ax
and tmpcnd, eax, 0xffff

;mov [ecx+0x10], ax
add tmpadr, ecx, 16
store16 eax, tmpadr, 1

;jz short loc_40802A
ctcallz tmpcnd, loc_40802A

tcall loc_40805A
endp

proc loc_40805A
;movsx eax, word [ecx+0x12]
add tmpadr, ecx, 18
load16s eax, tmpadr, 1

;fld dword [edx+eax*4]
shl tmpadr, eax, 2
add tmpadr, tmpadr, edx
load tmp1, tmpadr, 1
FLD_FLOAT tmp1

;fsub dword [ecx+0xc]
add tmpadr, ecx, 12
load tmp1, tmpadr, 1
FSUB_FLOAT tmp1

;xor edx, edx
xor edx, edx, edx

;mov dx, [ecx+0x10]
add tmpadr, ecx, 16
load16z tmp0, tmpadr, 1
and edx, edx, 0xffff0000
or edx, edx, tmp0

;mov [esp+0x4], edx
add tmpadr, esp, 4
store edx, tmpadr, 4

;fstp dword [ecx+0x8]
FSTP_FLOAT
add tmpadr, ecx, 8
store tmp0, tmpadr, 1

;fild dword [esp+0x4]
add tmpadr, esp, 4
load tmp1, tmpadr, 4
FILD_INT32 tmp1

;fdivr dword [loc_4189F4]
load tmp1, loc_4189F4, 4
FDIVR_FLOAT tmp1

;fstp dword [ecx+0x4]
FSTP_FLOAT
add tmpadr, ecx, 4
store tmp0, tmpadr, 1

tcall loc_40807E
endp

proc loc_40807E
;pop edi
POP edi

;pop ecx
POP ecx

;ret
POP tmp1
tcall tmp1
endp

proc loc_408090
;sub esp, 0xc
sub esp, esp, 12

;fld dword [ecx+0x24]
add tmpadr, ecx, 36
load tmp1, tmpadr, 1
FLD_FLOAT tmp1

;fld st0
FLD_ST 0

;fmul st0, st1
FMUL_ST 1

;fmul dword [loc_418A08]
load tmp1, loc_418A08, 4
FMUL_FLOAT tmp1

;fstp dword [esp]
FSTP_FLOAT
store tmp0, esp, 4

;fmul dword [ecx+0x48]
add tmpadr, ecx, 72
load tmp1, tmpadr, 1
FMUL_FLOAT tmp1

;fld st0
FLD_ST 0

;fadd dword [esp]
load tmp1, esp, 4
FADD_FLOAT tmp1

;fadd dword [loc_418A08]
load tmp1, loc_418A08, 4
FADD_FLOAT tmp1

;fdivr dword [loc_4189F4]
load tmp1, loc_4189F4, 4
FDIVR_FLOAT tmp1

;fstp dword [esp+0x4]
FSTP_FLOAT
add tmpadr, esp, 4
store tmp0, tmpadr, 4

;fld dword [esp]
load tmp1, esp, 4
FLD_FLOAT tmp1

;fadd st0, st0
FADD_ST 0

;fstp dword [esp+0x8]
FSTP_FLOAT
add tmpadr, esp, 8
store tmp0, tmpadr, 4

;fld dword [loc_418A04]
load tmp1, loc_418A04, 4
FLD_FLOAT tmp1

;fsub dword [esp+0x8]
add tmpadr, esp, 8
load tmp1, tmpadr, 4
FSUB_FLOAT tmp1

;fmul dword [esp+0x4]
add tmpadr, esp, 4
load tmp1, tmpadr, 4
FMUL_FLOAT tmp1

;fstp dword [ecx+0x38]
FSTP_FLOAT
add tmpadr, ecx, 56
store tmp0, tmpadr, 1

;fsub dword [esp]
load tmp1, esp, 4
FSUB_FLOAT tmp1

;fsub dword [loc_418A08]
load tmp1, loc_418A08, 4
FSUB_FLOAT tmp1

;fmul dword [esp+0x4]
add tmpadr, esp, 4
load tmp1, tmpadr, 4
FMUL_FLOAT tmp1

;fstp dword [ecx+0x3c]
FSTP_FLOAT
add tmpadr, ecx, 60
store tmp0, tmpadr, 1

;fld dword [esp+0x4]
add tmpadr, esp, 4
load tmp1, tmpadr, 4
FLD_FLOAT tmp1

;fmul dword [esp]
load tmp1, esp, 4
FMUL_FLOAT tmp1

;fstp dword [ecx+0x2c]
FSTP_FLOAT
add tmpadr, ecx, 44
store tmp0, tmpadr, 1

;fld dword [esp+0x8]
add tmpadr, esp, 8
load tmp1, tmpadr, 4
FLD_FLOAT tmp1

;fmul dword [esp+0x4]
add tmpadr, esp, 4
load tmp1, tmpadr, 4
FMUL_FLOAT tmp1

;fstp dword [ecx+0x30]
FSTP_FLOAT
add tmpadr, ecx, 48
store tmp0, tmpadr, 1

;add esp, 0xc
add esp, esp, 12

;ret
POP tmp1
tcall tmp1
endp

proc loc_408110
;sub esp, 0x8
sub esp, esp, 8

;fld dword [ecx+0x24]
add tmpadr, ecx, 36
load tmp1, tmpadr, 1
FLD_FLOAT tmp1

;fld st0
FLD_ST 0

;fmul st0, st1
FMUL_ST 1

;fmul dword [loc_418A08]
load tmp1, loc_418A08, 4
FMUL_FLOAT tmp1

;fstp dword [esp+0x4]
FSTP_FLOAT
add tmpadr, esp, 4
store tmp0, tmpadr, 4

;fmul dword [ecx+0x48]
add tmpadr, ecx, 72
load tmp1, tmpadr, 1
FMUL_FLOAT tmp1

;fld st0
FLD_ST 0

;fadd dword [esp+0x4]
add tmpadr, esp, 4
load tmp1, tmpadr, 4
FADD_FLOAT tmp1

;fadd dword [loc_418A08]
load tmp1, loc_418A08, 4
FADD_FLOAT tmp1

;fdivr dword [loc_4189F4]
load tmp1, loc_4189F4, 4
FDIVR_FLOAT tmp1

;fstp dword [esp]
FSTP_FLOAT
store tmp0, esp, 4

;fld dword [esp+0x4]
add tmpadr, esp, 4
load tmp1, tmpadr, 4
FLD_FLOAT tmp1

;fadd st0, st0
FADD_ST 0

;fsubr dword [loc_418A04]
load tmp1, loc_418A04, 4
FSUBR_FLOAT tmp1

;fmul dword [esp]
load tmp1, esp, 4
FMUL_FLOAT tmp1

;fstp dword [ecx+0x38]
FSTP_FLOAT
add tmpadr, ecx, 56
store tmp0, tmpadr, 1

;fsub dword [esp+0x4]
add tmpadr, esp, 4
load tmp1, tmpadr, 4
FSUB_FLOAT tmp1

;fsub dword [loc_418A08]
load tmp1, loc_418A08, 4
FSUB_FLOAT tmp1

;fmul dword [esp]
load tmp1, esp, 4
FMUL_FLOAT tmp1

;fstp dword [ecx+0x3c]
FSTP_FLOAT
add tmpadr, ecx, 60
store tmp0, tmpadr, 1

;fld dword [esp]
load tmp1, esp, 4
FLD_FLOAT tmp1

;fmul dword [loc_418A08]
load tmp1, loc_418A08, 4
FMUL_FLOAT tmp1

;fstp dword [ecx+0x2c]
FSTP_FLOAT
add tmpadr, ecx, 44
store tmp0, tmpadr, 1

;fld dword [esp]
load tmp1, esp, 4
FLD_FLOAT tmp1

;fmul dword [loc_418A0C]
load tmp1, loc_418A0C, 4
FMUL_FLOAT tmp1

;fstp dword [ecx+0x30]
FSTP_FLOAT
add tmpadr, ecx, 48
store tmp0, tmpadr, 1

;add esp, 0x8
add esp, esp, 8

;ret
POP tmp1
tcall tmp1
endp

proc loc_408180
;push ecx
PUSH ecx

;fld dword [ecx+0x24]
add tmpadr, ecx, 36
load tmp1, tmpadr, 1
FLD_FLOAT tmp1

;fld st0
FLD_ST 0

;fmul st0, st1
FMUL_ST 1

;fmul dword [loc_418A08]
load tmp1, loc_418A08, 4
FMUL_FLOAT tmp1

;fstp dword [esp]
FSTP_FLOAT
store tmp0, esp, 4

;fmul dword [ecx+0x48]
add tmpadr, ecx, 72
load tmp1, tmpadr, 1
FMUL_FLOAT tmp1

;fld st0
FLD_ST 0

;fadd dword [esp]
load tmp1, esp, 4
FADD_FLOAT tmp1

;fadd dword [loc_418A08]
load tmp1, loc_418A08, 4
FADD_FLOAT tmp1

;fdivr dword [loc_4189F4]
load tmp1, loc_4189F4, 4
FDIVR_FLOAT tmp1

;fld dword [esp]
load tmp1, esp, 4
FLD_FLOAT tmp1

;fadd st0, st0
FADD_ST 0

;fsubr dword [loc_418A04]
load tmp1, loc_418A04, 4
FSUBR_FLOAT tmp1

;fmul st0, st1
FMUL_ST 1

;fstp dword [ecx+0x38]
FSTP_FLOAT
add tmpadr, ecx, 56
store tmp0, tmpadr, 1

;fld st1
FLD_ST 1

;fsub dword [esp]
load tmp1, esp, 4
FSUB_FLOAT tmp1

;fsub dword [loc_418A08]
load tmp1, loc_418A08, 4
FSUB_FLOAT tmp1

;fmul st0, st1
FMUL_ST 1

;fstp dword [ecx+0x3c]
FSTP_FLOAT
add tmpadr, ecx, 60
store tmp0, tmpadr, 1

;fmulp st1, st0
FMULP_ST 1

;fst dword [ecx+0x2c]
FST_FLOAT
add tmpadr, ecx, 44
store tmp0, tmpadr, 1

;fmul dword [loc_418A10]
load tmp1, loc_418A10, 4
FMUL_FLOAT tmp1

;fstp dword [ecx+0x34]
FSTP_FLOAT
add tmpadr, ecx, 52
store tmp0, tmpadr, 1

;pop ecx
POP ecx

;ret
POP tmp1
tcall tmp1
endp

proc loc_4081E0
;push ebp
PUSH ebp

;mov ebp, esp
mov ebp, esp

;sub esp, 0x10
sub esp, esp, 16

;push esi
PUSH esi

;mov esi, ecx
mov esi, ecx

;push ecx
PUSH ecx

;fld dword [esi+0x1c]
add tmpadr, esi, 28
load tmp1, tmpadr, 1
FLD_FLOAT tmp1

;fadd dword [esi+0x18]
add tmpadr, esi, 24
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;fadd dword [esi+0x14]
add tmpadr, esi, 20
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;fstp dword [esp]
FSTP_FLOAT
store tmp0, esp, 4

;call loc_40DB20
PUSH loc_4081FB
tcall loc_40DB20
endp

proc loc_4081FB
;fmul dword [esi+0x10]
add tmpadr, esi, 16
load tmp1, tmpadr, 1
FMUL_FLOAT tmp1

;fst dword [ebp-0x4]
FST_FLOAT
add tmpadr, ebp, -4
store tmp0, tmpadr, 4

;fcomp dword [loc_41B6D0]
load tmp1, loc_41B6D0, 4
FCOMP_FLOAT tmp1

;fnstsw ax
FNSTSW_VOID
and eax, eax, 0xffff0000
or eax, eax, tmp0

;test ah, 0x41
and tmpcnd, eax, 0x4100

;jnz short loc_408218
ctcallnz tmpcnd, loc_408218

tcall loc_40820E
endp

proc loc_40820E
;mov eax, [loc_41B6D0]
load eax, loc_41B6D0, 4

;mov [ebp-0x4], eax
add tmpadr, ebp, -4
store eax, tmpadr, 4

;jmp short loc_40822F
tcall loc_40822F
endp

proc loc_408218
;fld dword [ebp-0x4]
add tmpadr, ebp, -4
load tmp1, tmpadr, 4
FLD_FLOAT tmp1

;fcomp dword [loc_418A14]
load tmp1, loc_418A14, 4
FCOMP_FLOAT tmp1

;fnstsw ax
FNSTSW_VOID
and eax, eax, 0xffff0000
or eax, eax, tmp0

;test ah, 0x1
and tmpcnd, eax, 0x100

;jz short loc_40822F
ctcallz tmpcnd, loc_40822F

tcall loc_408228
endp

proc loc_408228
;mov dword [ebp-0x4], 0x41a00000
add tmpadr, ebp, -4
mov tmp1, 0x41a00000
store tmp1, tmpadr, 4

tcall loc_40822F
endp

proc loc_40822F
;fld dword [ebp-0x4]
add tmpadr, ebp, -4
load tmp1, tmpadr, 4
FLD_FLOAT tmp1

;fsub dword [esi+0x20]
add tmpadr, esi, 32
load tmp1, tmpadr, 1
FSUB_FLOAT tmp1

;fstp dword [ebp-0x8]
FSTP_FLOAT
add tmpadr, ebp, -8
store tmp0, tmpadr, 4

;fld dword [ebp-0x8]
add tmpadr, ebp, -8
load tmp1, tmpadr, 4
FLD_FLOAT tmp1

;fabs
FABS_VOID

;fstp dword [ebp-0x8]
FSTP_FLOAT
add tmpadr, ebp, -8
store tmp0, tmpadr, 4

;fld dword [ebp-0x8]
add tmpadr, ebp, -8
load tmp1, tmpadr, 4
FLD_FLOAT tmp1

;fcomp dword [loc_418A00]
load tmp1, loc_418A00, 4
FCOMP_FLOAT tmp1

;fnstsw ax
FNSTSW_VOID
and eax, eax, 0xffff0000
or eax, eax, tmp0

;test ah, 0x41
and tmpcnd, eax, 0x4100

;jnz short loc_4082B1
ctcallnz tmpcnd, loc_4082B1

tcall loc_408250
endp

proc loc_408250
;mov dword [esi+0xc], 0x1
add tmpadr, esi, 12
mov tmp1, 0x1
store tmp1, tmpadr, 1

tcall loc_408257
endp

proc loc_408257
;fld dword [ebp-0x4]
add tmpadr, ebp, -4
load tmp1, tmpadr, 4
FLD_FLOAT tmp1

;fmul dword [loc_4189F0]
load tmp1, loc_4189F0, 4
FMUL_FLOAT tmp1

;mov ecx, [ebp-0x4]
add tmpadr, ebp, -4
load ecx, tmpadr, 4

;mov [esi+0x20], ecx
add tmpadr, esi, 32
store ecx, tmpadr, 1

;fstp dword [ebp-0x8]
FSTP_FLOAT
add tmpadr, ebp, -8
store tmp0, tmpadr, 4

;fld dword [ebp-0x8]
add tmpadr, ebp, -8
load tmp1, tmpadr, 4
FLD_FLOAT tmp1

;fistp dword [ebp-0xc]
FISTP_INT32
add tmpadr, ebp, -12
store tmp0, tmpadr, 4

;mov eax, [ebp-0xc]
add tmpadr, ebp, -12
load eax, tmpadr, 4

;mov dword [ebp-0xc], 0x0
add tmpadr, ebp, -12
store 0, tmpadr, 4

;mov [ebp-0x10], eax
add tmpadr, ebp, -16
store eax, tmpadr, 4

;fld dword [eax*4+loc_42BA10]
mov tmpadr, loc_42BA10
shl tmp0, eax, 2
add tmpadr, tmpadr, tmp0
load tmp1, tmpadr, 4
FLD_FLOAT tmp1

;fild qword [ebp-0x10]
add tmpadr, ebp, -16
load tmp1, tmpadr, 4
add tmp3, tmpadr, 4
load tmp2, tmp3, 4
FILD_INT64 tmp1, tmp2

;fmul dword [loc_418A00]
load tmp1, loc_418A00, 4
FMUL_FLOAT tmp1

;fsubr dword [ebp-0x4]
add tmpadr, ebp, -4
load tmp1, tmpadr, 4
FSUBR_FLOAT tmp1

;fmul dword [loc_4189F0]
load tmp1, loc_4189F0, 4
FMUL_FLOAT tmp1

;fld dword [eax*4+loc_42BA14]
mov tmpadr, loc_42BA14
shl tmp0, eax, 2
add tmpadr, tmpadr, tmp0
load tmp1, tmpadr, 4
FLD_FLOAT tmp1

;fsub st0, st2
FSUB_ST 2

;mov eax, 0x1
mov eax, 0x1

;fmulp st1, st0
FMULP_ST 1

;fadd st0, st1
FADD_ST 1

;fstp dword [esi+0x24]
FSTP_FLOAT
add tmpadr, esi, 36
store tmp0, tmpadr, 1

;pop esi
POP esi

;fstp st0
FSTP_ST 0

;mov esp, ebp
mov esp, ebp

;pop ebp
POP ebp

;ret
POP tmp1
tcall tmp1
endp

proc loc_4082B1
;fld dword [ebp-0x4]
add tmpadr, ebp, -4
load tmp1, tmpadr, 4
FLD_FLOAT tmp1

;fcomp dword [esi+0x20]
add tmpadr, esi, 32
load tmp1, tmpadr, 1
FCOMP_FLOAT tmp1

;fnstsw ax
FNSTSW_VOID
and eax, eax, 0xffff0000
or eax, eax, tmp0

;test ah, 0x40
and tmpcnd, eax, 0x4000

;jz short loc_408257
ctcallz tmpcnd, loc_408257

tcall loc_4082BE
endp

proc loc_4082BE
;xor eax, eax
xor eax, eax, eax

;pop esi
POP esi

;mov esp, ebp
mov esp, ebp

;pop ebp
POP ebp

;ret
POP tmp1
tcall tmp1
endp

proc loc_4082D0
;push ecx
PUSH ecx

;xor eax, eax
xor eax, eax, eax

;mov dword [ecx+0x18], 0x0
add tmpadr, ecx, 24
store 0, tmpadr, 1

;mov al, [edx]
load8z tmp0, edx, 1
and eax, eax, 0xffffff00
or eax, eax, tmp0

;dec eax
sub eax, eax, 1

;cmp eax, 0x7
cmovugt eax, 7, tmpcnd, 0, 1

;ja near loc_4083A2
ctcallz tmpcnd, loc_4083A2

tcall loc_4082E6
endp

proc loc_4082E6
;jmp dword [eax*4+loc_4083AC]
mov tmpadr, loc_4083AC
shl tmp0, eax, 2
add tmpadr, tmpadr, tmp0
load tmp1, tmpadr, 4
tcall tmp1
endp

proc loc_4082ED
;mov dword [ecx], loc_408550
mov tmp1, loc_408550
store tmp1, ecx, 1

;jmp short loc_408332
tcall loc_408332
endp

proc loc_4082F5
;mov dword [ecx], loc_4083E0
mov tmp1, loc_4083E0
store tmp1, ecx, 1

;jmp short loc_408332
tcall loc_408332
endp

proc loc_4082FD
;mov dword [ecx], loc_408430
mov tmp1, loc_408430
store tmp1, ecx, 1

;jmp short loc_408332
tcall loc_408332
endp

proc loc_408305
;mov dword [ecx], loc_408460
mov tmp1, loc_408460
store tmp1, ecx, 1

;jmp short loc_408332
tcall loc_408332
endp

proc loc_40830D
;mov dword [ecx], loc_408490
mov tmp1, loc_408490
store tmp1, ecx, 1

;jmp short loc_408332
tcall loc_408332
endp

proc loc_408315
;mov dword [ecx+0x18], 0x40000000
add tmpadr, ecx, 24
mov tmp1, 0x40000000
store tmp1, tmpadr, 1

;mov dword [ecx], loc_4085B0
mov tmp1, loc_4085B0
store tmp1, ecx, 1

;jmp short loc_408332
tcall loc_408332
endp

proc loc_408324
;mov dword [ecx], loc_4084D0
mov tmp1, loc_4084D0
store tmp1, ecx, 1

;jmp short loc_408332
tcall loc_408332
endp

proc loc_40832C
;mov dword [ecx], loc_408510
mov tmp1, loc_408510
store tmp1, ecx, 1

tcall loc_408332
endp

proc loc_408332
;xor eax, eax
xor eax, eax, eax

;mov dword [ecx+0x10], 0x0
add tmpadr, ecx, 16
store 0, tmpadr, 1

;mov ax, [edx+0x2]
add tmpadr, edx, 2
load16z tmp0, tmpadr, 1
and eax, eax, 0xffff0000
or eax, eax, tmp0

;mov [esp], eax
store eax, esp, 4

;fild dword [esp]
load tmp1, esp, 4
FILD_INT32 tmp1

;fdivr dword [loc_4189D8]
load tmp1, loc_4189D8, 4
FDIVR_FLOAT tmp1

;fstp dword [ecx+0x14]
FSTP_FLOAT
add tmpadr, ecx, 20
store tmp0, tmpadr, 1

;mov ax, [edx+0x4]
add tmpadr, edx, 4
load16z tmp0, tmpadr, 1
and eax, eax, 0xffff0000
or eax, eax, tmp0

;mov [ecx+0x4], ax
add tmpadr, ecx, 4
store16 eax, tmpadr, 1

;and eax, 0xffff
and eax, eax, 0xffff

;mov edx, eax
mov edx, eax

;mov eax, 0x66666667
mov eax, 0x66666667

;imul edx
imul eax, edx, eax, edx

;sar edx, 0x2
ashr edx, edx, 2

;mov eax, edx
mov eax, edx

;shr eax, 0x1f
lshr eax, eax, 31

;add edx, eax
add edx, edx, eax

;test dx, dx
and tmpcnd, edx, 0xffff

;mov [ecx+0x6], dx
add tmpadr, ecx, 6
store16 edx, tmpadr, 1

;jz short loc_408399
ctcallz tmpcnd, loc_408399

tcall loc_408379
endp

proc loc_408379
;xor edx, edx
xor edx, edx, edx

;mov dword [ecx+0x8], 0x0
add tmpadr, ecx, 8
store 0, tmpadr, 1

;mov dx, [ecx+0x6]
add tmpadr, ecx, 6
load16z tmp0, tmpadr, 1
and edx, edx, 0xffff0000
or edx, edx, tmp0

;mov [esp], edx
store edx, esp, 4

;fild dword [esp]
load tmp1, esp, 4
FILD_INT32 tmp1

;fdivr dword [loc_4189F4]
load tmp1, loc_4189F4, 4
FDIVR_FLOAT tmp1

;fstp dword [ecx+0xc]
FSTP_FLOAT
add tmpadr, ecx, 12
store tmp0, tmpadr, 1

;pop ecx
POP ecx

;ret
POP tmp1
tcall tmp1
endp

proc loc_408399
;mov dword [ecx+0x8], 0x3f800000
add tmpadr, ecx, 8
mov tmp1, 0x3f800000
store tmp1, tmpadr, 1

;pop ecx
POP ecx

;ret
POP tmp1
tcall tmp1
endp

proc loc_4083A2
;mov dword [ecx], loc_4083D0
mov tmp1, loc_4083D0
store tmp1, ecx, 1

;pop ecx
POP ecx

;ret
POP tmp1
tcall tmp1
endp

;
proc loc_4083D0
;fld dword [loc_4181E8]
load tmp1, loc_4181E8, 4
FLD_FLOAT tmp1

;ret
POP tmp1
tcall tmp1
endp

proc loc_4083E0
;fld dword [ecx+0x14]
add tmpadr, ecx, 20
load tmp1, tmpadr, 1
FLD_FLOAT tmp1

;fadd dword [ecx+0x18]
add tmpadr, ecx, 24
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;fld st0
FLD_ST 0

;fcomp dword [loc_4189D8]
load tmp1, loc_4189D8, 4
FCOMP_FLOAT tmp1

;fnstsw ax
FNSTSW_VOID
and eax, eax, 0xffff0000
or eax, eax, tmp0

;test ah, 0x41
and tmpcnd, eax, 0x4100

;jnz short loc_4083FB
ctcallnz tmpcnd, loc_4083FB

tcall loc_4083F5
endp

proc loc_4083F5
;fsub dword [loc_4189D8]
load tmp1, loc_4189D8, 4
FSUB_FLOAT tmp1

tcall loc_4083FB
endp

proc loc_4083FB
;fst dword [ecx+0x18]
FST_FLOAT
add tmpadr, ecx, 24
store tmp0, tmpadr, 1

;fadd st0, st0
FADD_ST 0

;fcom dword [loc_4189F4]
load tmp1, loc_4189F4, 4
FCOM_FLOAT tmp1

;fnstsw ax
FNSTSW_VOID
and eax, eax, 0xffff0000
or eax, eax, tmp0

;test ah, 0x41
and tmpcnd, eax, 0x4100

;jnz short loc_408427
ctcallnz tmpcnd, loc_408427

tcall loc_40840D
endp

proc loc_40840D
;fcom dword [loc_418A18]
load tmp1, loc_418A18, 4
FCOM_FLOAT tmp1

;fnstsw ax
FNSTSW_VOID
and eax, eax, 0xffff0000
or eax, eax, tmp0

;test ah, 0x41
and tmpcnd, eax, 0x4100

;jz short loc_408421
ctcallz tmpcnd, loc_408421

tcall loc_40841A
endp

proc loc_40841A
;fsubr dword [loc_4189D8]
load tmp1, loc_4189D8, 4
FSUBR_FLOAT tmp1

;ret
POP tmp1
tcall tmp1
endp

proc loc_408421
;fsub dword [loc_418A08]
load tmp1, loc_418A08, 4
FSUB_FLOAT tmp1

tcall loc_408427
endp

proc loc_408427
;ret
POP tmp1
tcall tmp1
endp

proc loc_408430
;fld dword [ecx+0x14]
add tmpadr, ecx, 20
load tmp1, tmpadr, 1
FLD_FLOAT tmp1

;fadd dword [ecx+0x18]
add tmpadr, ecx, 24
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;fld st0
FLD_ST 0

;fcomp dword [loc_4189D8]
load tmp1, loc_4189D8, 4
FCOMP_FLOAT tmp1

;fnstsw ax
FNSTSW_VOID
and eax, eax, 0xffff0000
or eax, eax, tmp0

;test ah, 0x41
and tmpcnd, eax, 0x4100

;jnz short loc_40844B
ctcallnz tmpcnd, loc_40844B

tcall loc_408445
endp

proc loc_408445
;fsub dword [loc_4189D8]
load tmp1, loc_4189D8, 4
FSUB_FLOAT tmp1

tcall loc_40844B
endp

proc loc_40844B
;fst dword [ecx+0x18]
FST_FLOAT
add tmpadr, ecx, 24
store tmp0, tmpadr, 1

;fsub dword [loc_4189F4]
load tmp1, loc_4189F4, 4
FSUB_FLOAT tmp1

;ret
POP tmp1
tcall tmp1
endp

proc loc_408460
;fld dword [ecx+0x14]
add tmpadr, ecx, 20
load tmp1, tmpadr, 1
FLD_FLOAT tmp1

;fadd dword [ecx+0x18]
add tmpadr, ecx, 24
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;fld st0
FLD_ST 0

;fcomp dword [loc_4189D8]
load tmp1, loc_4189D8, 4
FCOMP_FLOAT tmp1

;fnstsw ax
FNSTSW_VOID
and eax, eax, 0xffff0000
or eax, eax, tmp0

;test ah, 0x41
and tmpcnd, eax, 0x4100

;jnz short loc_40847B
ctcallnz tmpcnd, loc_40847B

tcall loc_408475
endp

proc loc_408475
;fsub dword [loc_4189D8]
load tmp1, loc_4189D8, 4
FSUB_FLOAT tmp1

tcall loc_40847B
endp

proc loc_40847B
;fst dword [ecx+0x18]
FST_FLOAT
add tmpadr, ecx, 24
store tmp0, tmpadr, 1

;fsubr dword [loc_4189F4]
load tmp1, loc_4189F4, 4
FSUBR_FLOAT tmp1

;ret
POP tmp1
tcall tmp1
endp

proc loc_408490
;fld dword [ecx+0x14]
add tmpadr, ecx, 20
load tmp1, tmpadr, 1
FLD_FLOAT tmp1

;fadd dword [ecx+0x18]
add tmpadr, ecx, 24
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;fld st0
FLD_ST 0

;fcomp dword [loc_4189D8]
load tmp1, loc_4189D8, 4
FCOMP_FLOAT tmp1

;fnstsw ax
FNSTSW_VOID
and eax, eax, 0xffff0000
or eax, eax, tmp0

;test ah, 0x41
and tmpcnd, eax, 0x4100

;jnz short loc_4084AB
ctcallnz tmpcnd, loc_4084AB

tcall loc_4084A5
endp

proc loc_4084A5
;fsub dword [loc_4189D8]
load tmp1, loc_4189D8, 4
FSUB_FLOAT tmp1

tcall loc_4084AB
endp

proc loc_4084AB
;fst dword [ecx+0x18]
FST_FLOAT
add tmpadr, ecx, 24
store tmp0, tmpadr, 1

;fcomp dword [loc_4189F4]
load tmp1, loc_4189F4, 4
FCOMP_FLOAT tmp1

;fnstsw ax
FNSTSW_VOID
and eax, eax, 0xffff0000
or eax, eax, tmp0

;test ah, 0x41
and tmpcnd, eax, 0x4100

;jnz short loc_4084C2
ctcallnz tmpcnd, loc_4084C2

tcall loc_4084BB
endp

proc loc_4084BB
;fld dword [loc_418A10]
load tmp1, loc_418A10, 4
FLD_FLOAT tmp1

;ret
POP tmp1
tcall tmp1
endp

proc loc_4084C2
;fld dword [loc_4189F4]
load tmp1, loc_4189F4, 4
FLD_FLOAT tmp1

;ret
POP tmp1
tcall tmp1
endp

proc loc_4084D0
;fld dword [ecx+0x14]
add tmpadr, ecx, 20
load tmp1, tmpadr, 1
FLD_FLOAT tmp1

;fadd dword [ecx+0x18]
add tmpadr, ecx, 24
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;fld st0
FLD_ST 0

;fcomp dword [loc_4189D8]
load tmp1, loc_4189D8, 4
FCOMP_FLOAT tmp1

;fnstsw ax
FNSTSW_VOID
and eax, eax, 0xffff0000
or eax, eax, tmp0

;test ah, 0x41
and tmpcnd, eax, 0x4100

;jnz short loc_4084F3
ctcallnz tmpcnd, loc_4084F3

tcall loc_4084E5
endp

proc loc_4084E5
;fstp st0
FSTP_ST 0

;fld dword [loc_4189D8]
load tmp1, loc_4189D8, 4
FLD_FLOAT tmp1

;mov dword [ecx], loc_4083D0
mov tmp1, loc_4083D0
store tmp1, ecx, 1

tcall loc_4084F3
endp

proc loc_4084F3
;fst dword [ecx+0x18]
FST_FLOAT
add tmpadr, ecx, 24
store tmp0, tmpadr, 1

;fmul dword [loc_4189D4]
load tmp1, loc_4189D4, 4
FMUL_FLOAT tmp1

;fsub dword [loc_4189F4]
load tmp1, loc_4189F4, 4
FSUB_FLOAT tmp1

;ret
POP tmp1
tcall tmp1
endp

proc loc_408510
;fld dword [ecx+0x14]
add tmpadr, ecx, 20
load tmp1, tmpadr, 1
FLD_FLOAT tmp1

;fadd dword [ecx+0x18]
add tmpadr, ecx, 24
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;fld st0
FLD_ST 0

;fcomp dword [loc_4189D8]
load tmp1, loc_4189D8, 4
FCOMP_FLOAT tmp1

;fnstsw ax
FNSTSW_VOID
and eax, eax, 0xffff0000
or eax, eax, tmp0

;test ah, 0x41
and tmpcnd, eax, 0x4100

;jnz short loc_408533
ctcallnz tmpcnd, loc_408533

tcall loc_408525
endp

proc loc_408525
;fstp st0
FSTP_ST 0

;fld dword [loc_4189D8]
load tmp1, loc_4189D8, 4
FLD_FLOAT tmp1

;mov dword [ecx], loc_4083D0
mov tmp1, loc_4083D0
store tmp1, ecx, 1

tcall loc_408533
endp

proc loc_408533
;fst dword [ecx+0x18]
FST_FLOAT
add tmpadr, ecx, 24
store tmp0, tmpadr, 1

;fmul dword [loc_4189D4]
load tmp1, loc_4189D4, 4
FMUL_FLOAT tmp1

;fsubr dword [loc_4189F4]
load tmp1, loc_4189F4, 4
FSUBR_FLOAT tmp1

;ret
POP tmp1
tcall tmp1
endp

proc loc_408550
;push ebp
PUSH ebp

;mov ebp, esp
mov ebp, esp

;sub esp, 0x8
sub esp, esp, 8

;fld dword [ecx+0x14]
add tmpadr, ecx, 20
load tmp1, tmpadr, 1
FLD_FLOAT tmp1

;fadd dword [ecx+0x18]
add tmpadr, ecx, 24
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;fld st0
FLD_ST 0

;fcomp dword [loc_4189D8]
load tmp1, loc_4189D8, 4
FCOMP_FLOAT tmp1

;fnstsw ax
FNSTSW_VOID
and eax, eax, 0xffff0000
or eax, eax, tmp0

;test ah, 0x41
and tmpcnd, eax, 0x4100

;jnz short loc_408571
ctcallnz tmpcnd, loc_408571

tcall loc_40856B
endp

proc loc_40856B
;fsub dword [loc_4189D8]
load tmp1, loc_4189D8, 4
FSUB_FLOAT tmp1

tcall loc_408571
endp

proc loc_408571
;fst dword [ecx+0x18]
FST_FLOAT
add tmpadr, ecx, 24
store tmp0, tmpadr, 1

;fmul dword [loc_418A1C]
load tmp1, loc_418A1C, 4
FMUL_FLOAT tmp1

;fstp dword [ebp-0x8]
FSTP_FLOAT
add tmpadr, ebp, -8
store tmp0, tmpadr, 4

;fld dword [ebp-0x8]
add tmpadr, ebp, -8
load tmp1, tmpadr, 4
FLD_FLOAT tmp1

;fistp dword [ebp-0x4]
FISTP_INT32
add tmpadr, ebp, -4
store tmp0, tmpadr, 4

;mov eax, [ebp-0x4]
add tmpadr, ebp, -4
load eax, tmpadr, 4

;fld dword [eax*4+loc_440E88]
mov tmpadr, loc_440E88
shl tmp0, eax, 2
add tmpadr, tmpadr, tmp0
load tmp1, tmpadr, 4
FLD_FLOAT tmp1

;fld dword [eax*4+loc_440E8C]
mov tmpadr, loc_440E8C
shl tmp0, eax, 2
add tmpadr, tmpadr, tmp0
load tmp1, tmpadr, 4
FLD_FLOAT tmp1

;fsub st0, st1
FSUB_ST 1

;fild dword [ebp-0x4]
add tmpadr, ebp, -4
load tmp1, tmpadr, 4
FILD_INT32 tmp1

;fsubr dword [ebp-0x8]
add tmpadr, ebp, -8
load tmp1, tmpadr, 4
FSUBR_FLOAT tmp1

;fmulp st1, st0
FMULP_ST 1

;faddp st1, st0
FADDP_ST 1

;mov esp, ebp
mov esp, ebp

;pop ebp
POP ebp

;ret
POP tmp1
tcall tmp1
endp

proc loc_4085B0
;sub esp, 0x8
sub esp, esp, 8

;push esi
PUSH esi

;mov esi, ecx
mov esi, ecx

;fld dword [esi+0x14]
add tmpadr, esi, 20
load tmp1, tmpadr, 1
FLD_FLOAT tmp1

;fadd dword [esi+0x18]
add tmpadr, esi, 24
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;fst dword [esp+0x4]
FST_FLOAT
add tmpadr, esp, 4
store tmp0, tmpadr, 4

;fcomp dword [loc_4189D8]
load tmp1, loc_4189D8, 4
FCOMP_FLOAT tmp1

;fnstsw ax
FNSTSW_VOID
and eax, eax, 0xffff0000
or eax, eax, tmp0

;test ah, 0x41
and tmpcnd, eax, 0x4100

;jnz short loc_408600
ctcallnz tmpcnd, loc_408600

tcall loc_4085CD
endp

proc loc_4085CD
;fld dword [esp+0x4]
add tmpadr, esp, 4
load tmp1, tmpadr, 4
FLD_FLOAT tmp1

;fsub dword [loc_4189D8]
load tmp1, loc_4189D8, 4
FSUB_FLOAT tmp1

;fstp dword [esp+0x4]
FSTP_FLOAT
add tmpadr, esp, 4
store tmp0, tmpadr, 4

;call rand_asm
PUSH loc_4085E0
tcall rand_asm
endp

proc loc_4085E0
;mov [esp+0x8], eax
add tmpadr, esp, 8
store eax, tmpadr, 4

;mov eax, [esp+0x4]
add tmpadr, esp, 4
load eax, tmpadr, 4

;fild dword [esp+0x8]
add tmpadr, esp, 8
load tmp1, tmpadr, 4
FILD_INT32 tmp1

;mov [esi+0x18], eax
add tmpadr, esi, 24
store eax, tmpadr, 1

;pop esi
POP esi

;fmul dword [loc_418A20]
load tmp1, loc_418A20, 4
FMUL_FLOAT tmp1

;fsub dword [loc_4189F4]
load tmp1, loc_4189F4, 4
FSUB_FLOAT tmp1

;add esp, 0x8
add esp, esp, 8

;ret
POP tmp1
tcall tmp1
endp

proc loc_408600
;mov eax, [esp+0x4]
add tmpadr, esp, 4
load eax, tmpadr, 4

;fld dword [esp+0x8]
add tmpadr, esp, 8
load tmp1, tmpadr, 4
FLD_FLOAT tmp1

;mov [esi+0x18], eax
add tmpadr, esi, 24
store eax, tmpadr, 1

;pop esi
POP esi

;add esp, 0x8
add esp, esp, 8

;ret
POP tmp1
tcall tmp1
endp

proc loc_408610
;push ebx
PUSH ebx

;xor ebx, ebx
xor ebx, ebx, ebx

;mov bl, [ecx+loc_4189AC]
mov tmpadr, loc_4189AC
add tmpadr, tmpadr, ecx
load8z tmp0, tmpadr, 1
and ebx, ebx, 0xffffff00
or ebx, ebx, tmp0

;cmp ebx, 0x6
cmovult ebx, 6, tmpcnd, 0, 1

;jae short loc_408692
ctcallnz tmpcnd, loc_408692

tcall loc_40861E
endp

proc loc_40861E
;mov eax, [loc_41B6F0]
load eax, loc_41B6F0, 4

;and eax, 0xff
and eax, eax, 0xff

;cmp eax, ebx
cmoveq eax, ebx, tmpcnd, 0, 1

;jz short loc_40867E
ctcallz tmpcnd, loc_40867E

tcall loc_40862C
endp

proc loc_40862C
;mov eax, [loc_41B704]
load eax, loc_41B704, 4

;mov [loc_41B6F0], bl
store8 ebx, loc_41B6F0, 4

;test eax, eax
mov tmpcnd, eax

;jz short loc_408654
ctcallz tmpcnd, loc_408654

tcall loc_40863B
endp

proc loc_40863B
;mov edx, 0x1000
mov edx, 0x1000

;mov ecx, loc_441850
mov ecx, loc_441850

;call loc_40DA90
PUSH loc_40864A
tcall loc_40DA90
endp

proc loc_40864A
;mov dword [loc_41B704], 0x0
store 0, loc_41B704, 4

tcall loc_408654
endp

proc loc_408654
;lea ecx, [ebx*8]
shl ecx, ebx, 3

;sub ecx, ebx
sub ecx, ecx, ebx

;add ecx, loc_418980
mov tmp1, loc_418980
add ecx, ecx, tmp1

;mov edx, [ecx]
load edx, ecx, 1

;mov [loc_455D60], edx
store edx, loc_455D60, 4

;mov ax, [ecx+0x4]
add tmpadr, ecx, 4
load16z tmp0, tmpadr, 1
and eax, eax, 0xffff0000
or eax, eax, tmp0

;mov [loc_455D64], ax
store16 eax, loc_455D64, 4

;mov cl, [ecx+0x6]
add tmpadr, ecx, 6
load8z tmp0, tmpadr, 1
and ecx, ecx, 0xffffff00
or ecx, ecx, tmp0

;mov [loc_455D66], cl
store8 ecx, loc_455D66, 2

tcall loc_40867E
endp

proc loc_40867E
;lea edx, [ebx*8]
shl edx, ebx, 3

;sub edx, ebx
sub edx, edx, ebx

;mov al, [edx+loc_418981]
mov tmpadr, loc_418981
add tmpadr, tmpadr, edx
load8z tmp0, tmpadr, 1
and eax, eax, 0xffffff00
or eax, eax, tmp0

;mov [loc_455D61], al
store8 eax, loc_455D61, 1

tcall loc_408692
endp

proc loc_408692
;pop ebx
POP ebx

;ret
POP tmp1
tcall tmp1
endp

proc loc_4086A0
;mov al, [loc_455D62]
load8z tmp0, loc_455D62, 2
and eax, eax, 0xffffff00
or eax, eax, tmp0

;push ebx
PUSH ebx

;mov bl, cl
ins8ll ebx, ebx, ecx

;cmp al, bl
sub tmp1, eax, ebx
and tmpcnd, tmp1, 0xff

;jz short loc_4086DB
ctcallz tmpcnd, loc_4086DB

tcall loc_4086AC
endp

proc loc_4086AC
;mov eax, [loc_41B704]
load eax, loc_41B704, 4

;test eax, eax
mov tmpcnd, eax

;jz short loc_4086CE
ctcallz tmpcnd, loc_4086CE

tcall loc_4086B5
endp

proc loc_4086B5
;mov edx, 0x1000
mov edx, 0x1000

;mov ecx, loc_441850
mov ecx, loc_441850

;call loc_40DA90
PUSH loc_4086C4
tcall loc_40DA90
endp

proc loc_4086C4
;mov dword [loc_41B704], 0x0
store 0, loc_41B704, 4

tcall loc_4086CE
endp

proc loc_4086CE
;mov [loc_455D62], bl
store8 ebx, loc_455D62, 2

;mov byte [loc_455D60], 0x1
mov tmp1, 0x1
store8 tmp1, loc_455D60, 4

tcall loc_4086DB
endp

proc loc_4086DB
;pop ebx
POP ebx

;ret
POP tmp1
tcall tmp1
endp

proc loc_4086E0
;mov al, [loc_455D63]
load8z tmp0, loc_455D63, 1
and eax, eax, 0xffffff00
or eax, eax, tmp0

;push ebx
PUSH ebx

;mov bl, cl
ins8ll ebx, ebx, ecx

;cmp al, bl
sub tmp1, eax, ebx
and tmpcnd, tmp1, 0xff

;jz short loc_40871B
ctcallz tmpcnd, loc_40871B

tcall loc_4086EC
endp

proc loc_4086EC
;mov eax, [loc_41B704]
load eax, loc_41B704, 4

;test eax, eax
mov tmpcnd, eax

;jz short loc_40870E
ctcallz tmpcnd, loc_40870E

tcall loc_4086F5
endp

proc loc_4086F5
;mov edx, 0x1000
mov edx, 0x1000

;mov ecx, loc_441850
mov ecx, loc_441850

;call loc_40DA90
PUSH loc_408704
tcall loc_40DA90
endp

proc loc_408704
;mov dword [loc_41B704], 0x0
store 0, loc_41B704, 4

tcall loc_40870E
endp

proc loc_40870E
;mov [loc_455D63], bl
store8 ebx, loc_455D63, 1

;mov byte [loc_455D60], 0x1
mov tmp1, 0x1
store8 tmp1, loc_455D60, 4

tcall loc_40871B
endp

proc loc_40871B
;pop ebx
POP ebx

;ret
POP tmp1
tcall tmp1
endp

proc loc_408720
;mov al, [loc_455D64]
load8z tmp0, loc_455D64, 4
and eax, eax, 0xffffff00
or eax, eax, tmp0

;push ebx
PUSH ebx

;mov bl, cl
ins8ll ebx, ebx, ecx

;cmp al, bl
sub tmp1, eax, ebx
and tmpcnd, tmp1, 0xff

;jz short loc_40875B
ctcallz tmpcnd, loc_40875B

tcall loc_40872C
endp

proc loc_40872C
;mov eax, [loc_41B704]
load eax, loc_41B704, 4

;test eax, eax
mov tmpcnd, eax

;jz short loc_40874E
ctcallz tmpcnd, loc_40874E

tcall loc_408735
endp

proc loc_408735
;mov edx, 0x1000
mov edx, 0x1000

;mov ecx, loc_441850
mov ecx, loc_441850

;call loc_40DA90
PUSH loc_408744
tcall loc_40DA90
endp

proc loc_408744
;mov dword [loc_41B704], 0x0
store 0, loc_41B704, 4

tcall loc_40874E
endp

proc loc_40874E
;mov [loc_455D64], bl
store8 ebx, loc_455D64, 4

;mov byte [loc_455D60], 0x1
mov tmp1, 0x1
store8 tmp1, loc_455D60, 4

tcall loc_40875B
endp

proc loc_40875B
;pop ebx
POP ebx

;ret
POP tmp1
tcall tmp1
endp

proc loc_408760
;mov al, [loc_455D65]
load8z tmp0, loc_455D65, 1
and eax, eax, 0xffffff00
or eax, eax, tmp0

;push ebx
PUSH ebx

;mov bl, cl
ins8ll ebx, ebx, ecx

;cmp al, bl
sub tmp1, eax, ebx
and tmpcnd, tmp1, 0xff

;jz short loc_40879B
ctcallz tmpcnd, loc_40879B

tcall loc_40876C
endp

proc loc_40876C
;mov eax, [loc_41B704]
load eax, loc_41B704, 4

;test eax, eax
mov tmpcnd, eax

;jz short loc_40878E
ctcallz tmpcnd, loc_40878E

tcall loc_408775
endp

proc loc_408775
;mov edx, 0x1000
mov edx, 0x1000

;mov ecx, loc_441850
mov ecx, loc_441850

;call loc_40DA90
PUSH loc_408784
tcall loc_40DA90
endp

proc loc_408784
;mov dword [loc_41B704], 0x0
store 0, loc_41B704, 4

tcall loc_40878E
endp

proc loc_40878E
;mov [loc_455D65], bl
store8 ebx, loc_455D65, 1

;mov byte [loc_455D60], 0x1
mov tmp1, 0x1
store8 tmp1, loc_455D60, 4

tcall loc_40879B
endp

proc loc_40879B
;pop ebx
POP ebx

;ret
POP tmp1
tcall tmp1
endp

proc loc_4087A0
;mov eax, [loc_41B704]
load eax, loc_41B704, 4

;test eax, eax
mov tmpcnd, eax

;jz short loc_4087C2
ctcallz tmpcnd, loc_4087C2

tcall loc_4087A9
endp

proc loc_4087A9
;mov edx, 0x1000
mov edx, 0x1000

;mov ecx, loc_441850
mov ecx, loc_441850

;call loc_40DA90
PUSH loc_4087B8
tcall loc_40DA90
endp

proc loc_4087B8
;mov dword [loc_41B704], 0x0
store 0, loc_41B704, 4

tcall loc_4087C2
endp

proc loc_4087C2
;ret
POP tmp1
tcall tmp1
endp

proc loc_4087D0
;fld dword [loc_455D24]
load tmp1, loc_455D24, 4
FLD_FLOAT tmp1

;fmul dword [esp+0x4]
add tmpadr, esp, 4
load tmp1, tmpadr, 4
FMUL_FLOAT tmp1

;mov eax, [esp+0x4]
add tmpadr, esp, 4
load eax, tmpadr, 4

;mov [loc_41B6E4], eax
store eax, loc_41B6E4, 4

;fcom dword [loc_418A24]
load tmp1, loc_418A24, 4
FCOM_FLOAT tmp1

;fnstsw ax
FNSTSW_VOID
and eax, eax, 0xffff0000
or eax, eax, tmp0

;test ah, 0x41
and tmpcnd, eax, 0x4100

;jnz short loc_4087F8
ctcallnz tmpcnd, loc_4087F8

tcall loc_4087F0
endp

proc loc_4087F0
;fstp st0
FSTP_ST 0

;fld dword [loc_418A24]
load tmp1, loc_418A24, 4
FLD_FLOAT tmp1

tcall loc_4087F8
endp

proc loc_4087F8
;fld dword [loc_455D1C]
load tmp1, loc_455D1C, 4
FLD_FLOAT tmp1

;fmul st0, st1
FMUL_ST 1

;fstp dword [loc_4558C4]
FSTP_FLOAT
store tmp0, loc_4558C4, 4

;fstp st0
FSTP_ST 0

;fld dword [loc_455D30]
load tmp1, loc_455D30, 4
FLD_FLOAT tmp1

;fmul dword [esp+0x4]
add tmpadr, esp, 4
load tmp1, tmpadr, 4
FMUL_FLOAT tmp1

;fcom dword [loc_418A24]
load tmp1, loc_418A24, 4
FCOM_FLOAT tmp1

;fnstsw ax
FNSTSW_VOID
and eax, eax, 0xffff0000
or eax, eax, tmp0

;test ah, 0x41
and tmpcnd, eax, 0x4100

;jnz short loc_408827
ctcallnz tmpcnd, loc_408827

tcall loc_40881F
endp

proc loc_40881F
;fstp st0
FSTP_ST 0

;fld dword [loc_418A24]
load tmp1, loc_418A24, 4
FLD_FLOAT tmp1

tcall loc_408827
endp

proc loc_408827
;fld dword [loc_455D28]
load tmp1, loc_455D28, 4
FLD_FLOAT tmp1

;fmul st0, st1
FMUL_ST 1

;fstp dword [loc_4558B0]
FSTP_FLOAT
store tmp0, loc_4558B0, 4

;fstp st0
FSTP_ST 0

;ret 0x4
POP tmp1
add esp, esp, 4
tcall tmp1
endp

proc loc_408840
;push ebx
PUSH ebx

;mov ebx, ecx
mov ebx, ecx

;cmp ebx, 0x6
cmovult ebx, 6, tmpcnd, 0, 1

;jae near loc_40894B
ctcallnz tmpcnd, loc_40894B

tcall loc_40884C
endp

proc loc_40884C
;mov eax, [loc_41B6E8]
load eax, loc_41B6E8, 4

;and eax, 0xff
and eax, eax, 0xff

;cmp eax, ebx
cmoveq eax, ebx, tmpcnd, 0, 1

;jz short loc_4088A8
ctcallz tmpcnd, loc_4088A8

tcall loc_40885A
endp

proc loc_40885A
;mov eax, [loc_41B700]
load eax, loc_41B700, 4

;mov [loc_41B6E8], bl
store8 ebx, loc_41B6E8, 4

;test eax, eax
mov tmpcnd, eax

;jz short loc_408882
ctcallz tmpcnd, loc_408882

tcall loc_408869
endp

proc loc_408869
;mov edx, 0x4000
mov edx, 0x4000

;mov ecx, loc_445888
mov ecx, loc_445888

;call loc_40DA90
PUSH loc_408878
tcall loc_40DA90
endp

proc loc_408878
;mov dword [loc_41B700], 0x0
store 0, loc_41B700, 4

tcall loc_408882
endp

proc loc_408882
;lea ecx, [ebx+ebx*8]
shl tmpadr, ebx, 3
add ecx, tmpadr, ebx

;push esi
PUSH esi

;push edi
PUSH edi

;mov edi, loc_455D18
mov edi, loc_455D18

;lea esi, [ecx*8+loc_4187B8]
mov tmpadr, loc_4187B8
shl tmp0, ecx, 3
add esi, tmpadr, tmp0

;mov ecx, 0x12
mov ecx, 0x12

;rep movsd
REP_MOVSD

;pop edi
POP edi

;pop esi
POP esi

;mov dword [loc_41B6EC], 0x0
store 0, loc_41B6EC, 4

;pop ebx
POP ebx

;ret
POP tmp1
tcall tmp1
endp

proc loc_4088A8
;mov eax, [loc_41B6EC]
load eax, loc_41B6EC, 4

;test eax, eax
mov tmpcnd, eax

;jz near loc_408941
ctcallz tmpcnd, loc_408941

tcall loc_4088B5
endp

proc loc_4088B5
;fld dword [loc_41B6E4]
load tmp1, loc_41B6E4, 4
FLD_FLOAT tmp1

;lea eax, [ebx+ebx*8]
shl tmpadr, ebx, 3
add eax, tmpadr, ebx

;shl eax, 0x3
shl eax, eax, 3

;mov edx, [eax+loc_4187C4]
mov tmpadr, loc_4187C4
add tmpadr, tmpadr, eax
load edx, tmpadr, 1

;mov ecx, [eax+loc_4187D0]
mov tmpadr, loc_4187D0
add tmpadr, tmpadr, eax
load ecx, tmpadr, 1

;mov [loc_455D24], edx
store edx, loc_455D24, 4

;mov edx, [eax+loc_4187D4]
mov tmpadr, loc_4187D4
add tmpadr, tmpadr, eax
load edx, tmpadr, 1

;fmul dword [loc_455D24]
load tmp1, loc_455D24, 4
FMUL_FLOAT tmp1

;mov [loc_455D30], ecx
store ecx, loc_455D30, 4

;mov [loc_455D34], edx
store edx, loc_455D34, 4

;fcom dword [loc_418A24]
load tmp1, loc_418A24, 4
FCOM_FLOAT tmp1

;fnstsw ax
FNSTSW_VOID
and eax, eax, 0xffff0000
or eax, eax, tmp0

;test ah, 0x41
and tmpcnd, eax, 0x4100

;jnz short loc_408900
ctcallnz tmpcnd, loc_408900

tcall loc_4088F8
endp

proc loc_4088F8
;fstp st0
FSTP_ST 0

;fld dword [loc_418A24]
load tmp1, loc_418A24, 4
FLD_FLOAT tmp1

tcall loc_408900
endp

proc loc_408900
;fld dword [loc_455D1C]
load tmp1, loc_455D1C, 4
FLD_FLOAT tmp1

;fmul st0, st1
FMUL_ST 1

;fstp dword [loc_4558C4]
FSTP_FLOAT
store tmp0, loc_4558C4, 4

;fstp st0
FSTP_ST 0

;fld dword [loc_41B6E4]
load tmp1, loc_41B6E4, 4
FLD_FLOAT tmp1

;fmul dword [loc_455D30]
load tmp1, loc_455D30, 4
FMUL_FLOAT tmp1

;fcom dword [loc_418A24]
load tmp1, loc_418A24, 4
FCOM_FLOAT tmp1

;fnstsw ax
FNSTSW_VOID
and eax, eax, 0xffff0000
or eax, eax, tmp0

;test ah, 0x41
and tmpcnd, eax, 0x4100

;jnz short loc_408931
ctcallnz tmpcnd, loc_408931

tcall loc_408929
endp

proc loc_408929
;fstp st0
FSTP_ST 0

;fld dword [loc_418A24]
load tmp1, loc_418A24, 4
FLD_FLOAT tmp1

tcall loc_408931
endp

proc loc_408931
;fld dword [loc_455D28]
load tmp1, loc_455D28, 4
FLD_FLOAT tmp1

;fmul st0, st1
FMUL_ST 1

;fstp dword [loc_4558B0]
FSTP_FLOAT
store tmp0, loc_4558B0, 4

;fstp st0
FSTP_ST 0

tcall loc_408941
endp

proc loc_408941
;mov dword [loc_41B6EC], 0x0
store 0, loc_41B6EC, 4

tcall loc_40894B
endp

proc loc_40894B
;pop ebx
POP ebx

;ret
POP tmp1
tcall tmp1
endp

proc loc_408950
;push ecx
PUSH ecx

;and ecx, 0xff
and ecx, ecx, 0xff

;mov dword [loc_41B6EC], 0x1
mov tmp1, 0x1
store tmp1, loc_41B6EC, 4

;mov [esp], ecx
store ecx, esp, 4

;fild dword [esp]
load tmp1, esp, 4
FILD_INT32 tmp1

;fmul dword [loc_418A28]
load tmp1, loc_418A28, 4
FMUL_FLOAT tmp1

;fstp dword [loc_455D34]
FSTP_FLOAT
store tmp0, loc_455D34, 4

;pop ecx
POP ecx

;ret
POP tmp1
tcall tmp1
endp

proc loc_408980
;push ecx
PUSH ecx

;mov eax, [loc_41B6E8]
load eax, loc_41B6E8, 4

;mov dword [loc_41B6EC], 0x1
mov tmp1, 0x1
store tmp1, loc_41B6EC, 4

;and eax, 0xff
and eax, eax, 0xff

;and ecx, 0xff
and ecx, ecx, 0xff

;mov [esp], ecx
store ecx, esp, 4

;fild dword [esp]
load tmp1, esp, 4
FILD_INT32 tmp1

;fmul dword [eax*4+loc_418968]
mov tmpadr, loc_418968
shl tmp0, eax, 2
add tmpadr, tmpadr, tmp0
load tmp1, tmpadr, 4
FMUL_FLOAT tmp1

;fmul dword [loc_418A28]
load tmp1, loc_418A28, 4
FMUL_FLOAT tmp1

;fst dword [loc_455D30]
FST_FLOAT
store tmp0, loc_455D30, 4

;fstp dword [loc_455D24]
FSTP_FLOAT
store tmp0, loc_455D24, 4

;pop ecx
POP ecx

;ret
POP tmp1
tcall tmp1
endp

proc loc_4089C0
;mov eax, [loc_41B6F4]
load eax, loc_41B6F4, 4

;test eax, eax
mov tmpcnd, eax

;jz short loc_4089F2
ctcallz tmpcnd, loc_4089F2

tcall loc_4089C9
endp

proc loc_4089C9
;mov dword [loc_44102C], loc_40BB60
mov tmp1, loc_40BB60
store tmp1, loc_44102C, 4

;mov dword [loc_441030], loc_40BD10
mov tmp1, loc_40BD10
store tmp1, loc_441030, 4

;mov dword [loc_441034], loc_40BF20
mov tmp1, loc_40BF20
store tmp1, loc_441034, 4

;mov dword [loc_441038], loc_40C130
mov tmp1, loc_40C130
store tmp1, loc_441038, 4

;ret
POP tmp1
tcall tmp1
endp

proc loc_4089F2
;mov dword [loc_44102C], loc_40C950
mov tmp1, loc_40C950
store tmp1, loc_44102C, 4

;mov dword [loc_441030], loc_40CAE0
mov tmp1, loc_40CAE0
store tmp1, loc_441030, 4

;mov dword [loc_441034], loc_40CCC0
mov tmp1, loc_40CCC0
store tmp1, loc_441034, 4

;mov dword [loc_441038], loc_40CEA0
mov tmp1, loc_40CEA0
store tmp1, loc_441038, 4

;ret
POP tmp1
tcall tmp1
endp

proc loc_408A20
;fld dword [loc_41B6E4]
load tmp1, loc_41B6E4, 4
FLD_FLOAT tmp1

;fmul dword [loc_455D24]
load tmp1, loc_455D24, 4
FMUL_FLOAT tmp1

;mov eax, [loc_455D20]
load eax, loc_455D20, 4

;mov ecx, [loc_455D2C]
load ecx, loc_455D2C, 4

;mov [loc_4558C8], eax
store eax, loc_4558C8, 4

;mov dword [loc_455D18], 0x0
store 0, loc_455D18, 4

;fcom dword [loc_418A24]
load tmp1, loc_418A24, 4
FCOM_FLOAT tmp1

;mov dword [loc_455888], loc_445888
mov tmp1, loc_445888
store tmp1, loc_455888, 4

;mov dword [loc_4558A8], 0x0
store 0, loc_4558A8, 4

;mov dword [loc_4558A4], 0x0
store 0, loc_4558A4, 4

;mov dword [loc_455900], 0x0
store 0, loc_455900, 4

;mov dword [loc_4558FC], 0x0
store 0, loc_4558FC, 4

;mov [loc_4558AC], ecx
store ecx, loc_4558AC, 4

;fnstsw ax
FNSTSW_VOID
and eax, eax, 0xffff0000
or eax, eax, tmp0

;test ah, 0x41
and tmpcnd, eax, 0x4100

;jnz short loc_408A93
ctcallnz tmpcnd, loc_408A93

tcall loc_408A8B
endp

proc loc_408A8B
;fstp st0
FSTP_ST 0

;fld dword [loc_418A24]
load tmp1, loc_418A24, 4
FLD_FLOAT tmp1

tcall loc_408A93
endp

proc loc_408A93
;fld dword [loc_455D1C]
load tmp1, loc_455D1C, 4
FLD_FLOAT tmp1

;fmul st0, st1
FMUL_ST 1

;fstp dword [loc_4558C4]
FSTP_FLOAT
store tmp0, loc_4558C4, 4

;fstp st0
FSTP_ST 0

;fld dword [loc_455D30]
load tmp1, loc_455D30, 4
FLD_FLOAT tmp1

;fmul dword [loc_41B6E4]
load tmp1, loc_41B6E4, 4
FMUL_FLOAT tmp1

;fcom dword [loc_418A24]
load tmp1, loc_418A24, 4
FCOM_FLOAT tmp1

;fnstsw ax
FNSTSW_VOID
and eax, eax, 0xffff0000
or eax, eax, tmp0

;test ah, 0x41
and tmpcnd, eax, 0x4100

;jnz short loc_408AC4
ctcallnz tmpcnd, loc_408AC4

tcall loc_408ABC
endp

proc loc_408ABC
;fstp st0
FSTP_ST 0

;fld dword [loc_418A24]
load tmp1, loc_418A24, 4
FLD_FLOAT tmp1

tcall loc_408AC4
endp

proc loc_408AC4
;mov eax, [loc_455D38]
load eax, loc_455D38, 4

;xor ecx, ecx
xor ecx, ecx, ecx

;mov cx, [loc_455D3A]
load16z tmp0, loc_455D3A, 2
and ecx, ecx, 0xffff0000
or ecx, ecx, tmp0

;and eax, 0xffff
and eax, eax, 0xffff

;mov edx, eax
mov edx, eax

;add eax, ecx
add eax, eax, ecx

;mov ecx, [loc_455D3C]
load ecx, loc_455D3C, 4

;neg edx
sub edx, 0, edx

;mov [loc_45588C], edx
store edx, loc_45588C, 4

;mov edx, eax
mov edx, eax

;and ecx, 0xffff
and ecx, ecx, 0xffff

;neg edx
sub edx, 0, edx

;add eax, ecx
add eax, eax, ecx

;mov [loc_455890], edx
store edx, loc_455890, 4

;xor ecx, ecx
xor ecx, ecx, ecx

;mov edx, eax
mov edx, eax

;mov cx, [loc_455D3E]
load16z tmp0, loc_455D3E, 2
and ecx, ecx, 0xffff0000
or ecx, ecx, tmp0

;neg edx
sub edx, 0, edx

;add eax, ecx
add eax, eax, ecx

;mov [loc_455894], edx
store edx, loc_455894, 4

;mov edx, eax
mov edx, eax

;or ecx, 0xffffffff
or ecx, ecx, 0xffffffff

;neg edx
sub edx, 0, edx

;mov [loc_455898], edx
store edx, loc_455898, 4

;mov edx, [loc_44184C]
load edx, loc_44184C, 4

;sub ecx, edx
sub ecx, ecx, edx

;mov edx, ecx
mov edx, ecx

;sub edx, eax
sub edx, edx, eax

;mov eax, [loc_455D50]
load eax, loc_455D50, 4

;and eax, 0xffff
and eax, eax, 0xffff

;mov [loc_45589C], edx
store edx, loc_45589C, 4

;neg eax
sub eax, 0, eax

;xor edx, edx
xor edx, edx, edx

;mov [loc_4558DC], eax
store eax, loc_4558DC, 4

;mov dx, [loc_455D52]
load16z tmp0, loc_455D52, 2
and edx, edx, 0xffff0000
or edx, edx, tmp0

;mov eax, [loc_455D54]
load eax, loc_455D54, 4

;neg edx
sub edx, 0, edx

;and eax, 0xffff
and eax, eax, 0xffff

;mov [loc_4558EC], edx
store edx, loc_4558EC, 4

;neg eax
sub eax, 0, eax

;xor edx, edx
xor edx, edx, edx

;mov [loc_4558E0], eax
store eax, loc_4558E0, 4

;mov dx, [loc_455D56]
load16z tmp0, loc_455D56, 2
and edx, edx, 0xffff0000
or edx, edx, tmp0

;mov eax, [loc_455D40]
load eax, loc_455D40, 4

;neg edx
sub edx, 0, edx

;and eax, 0xffff
and eax, eax, 0xffff

;mov [loc_4558F0], edx
store edx, loc_4558F0, 4

;mov edx, eax
mov edx, eax

;neg edx
sub edx, 0, edx

;mov [loc_4558B8], edx
store edx, loc_4558B8, 4

;mov edx, [loc_455D48]
load edx, loc_455D48, 4

;and edx, 0xffff
and edx, edx, 0xffff

;add eax, edx
add eax, eax, edx

;mov edx, eax
mov edx, eax

;neg edx
sub edx, 0, edx

;mov [loc_4558BC], edx
store edx, loc_4558BC, 4

;xor edx, edx
xor edx, edx, edx

;mov dx, [loc_455D42]
load16z tmp0, loc_455D42, 2
and edx, edx, 0xffff0000
or edx, edx, tmp0

;add eax, edx
add eax, eax, edx

;fld dword [loc_455D28]
load tmp1, loc_455D28, 4
FLD_FLOAT tmp1

;mov edx, eax
mov edx, eax

;neg edx
sub edx, 0, edx

;mov [loc_4558C0], edx
store edx, loc_4558C0, 4

;xor edx, edx
xor edx, edx, edx

;mov dx, [loc_455D4A]
load16z tmp0, loc_455D4A, 2
and edx, edx, 0xffff0000
or edx, edx, tmp0

;add eax, edx
add eax, eax, edx

;fmul st0, st1
FMUL_ST 1

;mov edx, eax
mov edx, eax

;sub ecx, eax
sub ecx, ecx, eax

;mov eax, [loc_455D58]
load eax, loc_455D58, 4

;mov [loc_4558A0], ecx
store ecx, loc_4558A0, 4

;and eax, 0xffff
and eax, eax, 0xffff

;xor ecx, ecx
xor ecx, ecx, ecx

;fstp dword [loc_4558B0]
FSTP_FLOAT
store tmp0, loc_4558B0, 4

;mov cx, [loc_455D5A]
load16z tmp0, loc_455D5A, 2
and ecx, ecx, 0xffff0000
or ecx, ecx, tmp0

;neg edx
sub edx, 0, edx

;neg eax
sub eax, 0, eax

;fstp st0
FSTP_ST 0

;mov [loc_4558CC], edx
store edx, loc_4558CC, 4

;mov [loc_4558E4], eax
store eax, loc_4558E4, 4

;neg ecx
sub ecx, 0, ecx

;mov edx, [loc_455D5C]
load edx, loc_455D5C, 4

;xor eax, eax
xor eax, eax, eax

;mov ax, [loc_455D5E]
load16z tmp0, loc_455D5E, 2
and eax, eax, 0xffff0000
or eax, eax, tmp0

;and edx, 0xffff
and edx, edx, 0xffff

;neg eax
sub eax, 0, eax

;neg edx
sub edx, 0, edx

;mov [loc_4558F8], eax
store eax, loc_4558F8, 4

;mov eax, [loc_455D44]
load eax, loc_455D44, 4

;mov [loc_4558E8], edx
store edx, loc_4558E8, 4

;mov edx, [loc_455D4C]
load edx, loc_455D4C, 4

;and eax, 0xffff
and eax, eax, 0xffff

;mov [loc_4558F4], ecx
store ecx, loc_4558F4, 4

;and edx, 0xffff
and edx, edx, 0xffff

;mov ecx, eax
mov ecx, eax

;add eax, edx
add eax, eax, edx

;xor edx, edx
xor edx, edx, edx

;mov dx, [loc_455D46]
load16z tmp0, loc_455D46, 2
and edx, edx, 0xffff0000
or edx, edx, tmp0

;neg ecx
sub ecx, 0, ecx

;mov [loc_4558D0], ecx
store ecx, loc_4558D0, 4

;mov ecx, eax
mov ecx, eax

;add eax, edx
add eax, eax, edx

;xor edx, edx
xor edx, edx, edx

;mov dx, [loc_455D4E]
load16z tmp0, loc_455D4E, 2
and edx, edx, 0xffff0000
or edx, edx, tmp0

;neg ecx
sub ecx, 0, ecx

;mov [loc_4558D4], ecx
store ecx, loc_4558D4, 4

;mov ecx, eax
mov ecx, eax

;add edx, eax
add edx, edx, eax

;neg ecx
sub ecx, 0, ecx

;neg edx
sub edx, 0, edx

;mov [loc_4558D8], ecx
store ecx, loc_4558D8, 4

;mov [loc_4558B4], edx
store edx, loc_4558B4, 4

;ret
POP tmp1
tcall tmp1
endp

proc loc_408C80
;mov eax, [loc_41B700]
load eax, loc_41B700, 4

;test eax, eax
mov tmpcnd, eax

;jz short loc_408CA2
ctcallz tmpcnd, loc_408CA2

tcall loc_408C89
endp

proc loc_408C89
;mov edx, 0x4000
mov edx, 0x4000

;mov ecx, loc_445888
mov ecx, loc_445888

;call loc_40DA90
PUSH loc_408C98
tcall loc_40DA90
endp

proc loc_408C98
;mov dword [loc_41B700], 0x0
store 0, loc_41B700, 4

tcall loc_408CA2
endp

proc loc_408CA2
;ret
POP tmp1
tcall tmp1
endp

proc loc_408CB0
;sub esp, 0x2c
sub esp, esp, 44

;push ebx
PUSH ebx

;mov ebx, edx
mov ebx, edx

;push ebp
PUSH ebp

;push esi
PUSH esi

;mov esi, [ebx+0x14]
add tmpadr, ebx, 20
load esi, tmpadr, 1

;mov ebp, ecx
mov ebp, ecx

;xor eax, eax
xor eax, eax, eax

;push edi
PUSH edi

;movsx ecx, byte [esi+0x1d]
add tmpadr, esi, 29
load8s ecx, tmpadr, 1

;mov al, [ebx+0x2c]
add tmpadr, ebx, 44
load8z tmp0, tmpadr, 1
and eax, eax, 0xffffff00
or eax, eax, tmp0

;mov dl, [esi+0x35]
add tmpadr, esi, 53
load8z tmp0, tmpadr, 1
and edx, edx, 0xffffff00
or edx, edx, tmp0

;mov [esp+0x10], ecx
add tmpadr, esp, 16
store ecx, tmpadr, 4

;mov cl, [esi+0x3f]
add tmpadr, esi, 63
load8z tmp0, tmpadr, 1
and ecx, ecx, 0xffffff00
or ecx, ecx, tmp0

;mov edi, [eax*4+loc_455D68]
mov tmpadr, loc_455D68
shl tmp0, eax, 2
add tmpadr, tmpadr, tmp0
load edi, tmpadr, 4

;mov eax, [ebp+0x20]
add tmpadr, ebp, 32
load eax, tmpadr, 4

;mov [esp+0x2c], cl
add tmpadr, esp, 44
store8 ecx, tmpadr, 4

;mov [esp+0x30], ebx
add tmpadr, esp, 48
store ebx, tmpadr, 4

;mov ecx, [eax]
load ecx, eax, 1

;mov [esp+0x14], ebp
add tmpadr, esp, 20
store ebp, tmpadr, 4

;test ecx, ecx
mov tmpcnd, ecx

;mov [esp+0x24], dl
add tmpadr, esp, 36
store8 edx, tmpadr, 4

;jz short loc_408D28
ctcallz tmpcnd, loc_408D28

tcall loc_408CF1
endp

proc loc_408CF1
;mov edx, [esp+0x44]
add tmpadr, esp, 68
load edx, tmpadr, 4

;and edx, 0xff
and edx, edx, 0xff

;add eax, edx
add eax, eax, edx

;mov edx, [esp+0x10]
add tmpadr, esp, 16
load edx, tmpadr, 4

;movsx ecx, byte [eax+0x4]
add tmpadr, eax, 4
load8s ecx, tmpadr, 1

;add edx, ecx
add edx, edx, ecx

;mov cl, [eax+0x84]
add tmpadr, eax, 132
load8z tmp0, tmpadr, 1
and ecx, ecx, 0xffffff00
or ecx, ecx, tmp0

;cmp cl, 0xff
sub tmp1, ecx, -1
and tmpcnd, tmp1, 0xff

;mov [esp+0x10], edx
add tmpadr, esp, 16
store edx, tmpadr, 4

;jz short loc_408D1A
ctcallz tmpcnd, loc_408D1A

tcall loc_408D16
endp

proc loc_408D16
;mov [esp+0x24], cl
add tmpadr, esp, 36
store8 ecx, tmpadr, 4

tcall loc_408D1A
endp

proc loc_408D1A
;mov al, [eax+0x184]
add tmpadr, eax, 388
load8z tmp0, tmpadr, 1
and eax, eax, 0xffffff00
or eax, eax, tmp0

;cmp al, 0xff
sub tmp1, eax, -1
and tmpcnd, tmp1, 0xff

;jz short loc_408D28
ctcallz tmpcnd, loc_408D28

tcall loc_408D24
endp

proc loc_408D24
;mov [esp+0x2c], al
add tmpadr, esp, 44
store8 eax, tmpadr, 4

tcall loc_408D28
endp

proc loc_408D28
;mov edx, [esp+0x48]
add tmpadr, esp, 72
load edx, tmpadr, 4

;mov ecx, [esp+0x40]
add tmpadr, esp, 64
load ecx, tmpadr, 4

;mov eax, [esp+0x44]
add tmpadr, esp, 68
load eax, tmpadr, 4

;mov [ebx+0x10], edi
add tmpadr, ebx, 16
store edi, tmpadr, 1

;mov dword [edi+0x20], 0x0
add tmpadr, edi, 32
store 0, tmpadr, 1

;mov dword [edi], 0x0
store 0, edi, 1

;mov ecx, [ecx]
load ecx, ecx, 1

;push edx
PUSH edx

;push eax
PUSH eax

;mov edx, edi
mov edx, edi

;call loc_409730
PUSH loc_408D4F
tcall loc_409730
endp

proc loc_408D4F
;mov edx, [esp+0x40]
add tmpadr, esp, 64
load edx, tmpadr, 4

;mov ecx, [edx+0x4]
add tmpadr, edx, 4
load ecx, tmpadr, 1

;test ecx, ecx
mov tmpcnd, ecx

;jz short loc_408D6C
ctcallz tmpcnd, loc_408D6C

tcall loc_408D5A
endp

proc loc_408D5A
;mov eax, [esp+0x48]
add tmpadr, esp, 72
load eax, tmpadr, 4

;mov edx, [esp+0x44]
add tmpadr, esp, 68
load edx, tmpadr, 4

;push eax
PUSH eax

;push edx
PUSH edx

;lea edx, [edi+0x20]
add edx, edi, 32

;call loc_409730
PUSH loc_408D6C
tcall loc_409730
endp

proc loc_408D6C
;fild dword [esp+0x10]
add tmpadr, esp, 16
load tmp1, tmpadr, 4
FILD_INT32 tmp1

;movsx eax, byte [esi+0x1e]
add tmpadr, esi, 30
load8s eax, tmpadr, 1

;fmul dword [loc_4181EC]
load tmp1, loc_4181EC, 4
FMUL_FLOAT tmp1

;mov [esp+0x28], eax
add tmpadr, esp, 40
store eax, tmpadr, 4

;fiadd dword [esp+0x28]
add tmpadr, esp, 40
load tmp1, tmpadr, 4
FIADD_INT32 tmp1

;fst dword [ebx+0x1c]
FST_FLOAT
add tmpadr, ebx, 28
store tmp0, tmpadr, 1

;fld dword [ebp+0x28]
add tmpadr, ebp, 40
load tmp1, tmpadr, 4
FLD_FLOAT tmp1

;fmul dword [ebp+0x24]
add tmpadr, ebp, 36
load tmp1, tmpadr, 4
FMUL_FLOAT tmp1

;fadd dword [ebp+0x30]
add tmpadr, ebp, 48
load tmp1, tmpadr, 4
FADD_FLOAT tmp1

;fadd dword [ebp+0x2c]
add tmpadr, ebp, 44
load tmp1, tmpadr, 4
FADD_FLOAT tmp1

;fadd st0, st1
FADD_ST 1

;fadd dword [loc_42BA08]
load tmp1, loc_42BA08, 4
FADD_FLOAT tmp1

;fstp dword [edi+0x40]
FSTP_FLOAT
add tmpadr, edi, 64
store tmp0, tmpadr, 1

;movsx ecx, byte [esi+0x1f]
add tmpadr, esi, 31
load8s ecx, tmpadr, 1

;fstp st0
FSTP_ST 0

;mov [esp+0x28], ecx
add tmpadr, esp, 40
store ecx, tmpadr, 4

;fild dword [esp+0x28]
add tmpadr, esp, 40
load tmp1, tmpadr, 4
FILD_INT32 tmp1

;fmul dword [loc_41965C]
load tmp1, loc_41965C, 4
FMUL_FLOAT tmp1

;fstp dword [edi+0x48]
FSTP_FLOAT
add tmpadr, edi, 72
store tmp0, tmpadr, 1

;mov al, [esi+0x20]
add tmpadr, esi, 32
load8z tmp0, tmpadr, 1
and eax, eax, 0xffffff00
or eax, eax, tmp0

;test al, al
and tmp1, eax, eax
and eflags, eflags, ~(SF|OF)
and tmp0, tmp1, 0x80
cmovz tmp0, tmp0, 0, SF
or eflags, eflags, tmp0

;jl short loc_408DD1
lshr tmp1, eflags, OF_SHIFT - SF_SHIFT
xor tmp1, tmp1, eflags
and tmp1, tmp1, SF
ctcallnz tmp1, loc_408DD1

tcall loc_408DBA
endp

proc loc_408DBA
;movsx edx, al
ext8s edx, eax

;xor eax, eax
xor eax, eax, eax

;mov ax, [edx*2+loc_418A2C]
mov tmpadr, loc_418A2C
shl tmp0, edx, 1
add tmpadr, tmpadr, tmp0
load16z tmp0, tmpadr, 2
and eax, eax, 0xffff0000
or eax, eax, tmp0

;mov [esp+0x28], eax
add tmpadr, esp, 40
store eax, tmpadr, 4

;fild dword [esp+0x28]
add tmpadr, esp, 40
load tmp1, tmpadr, 4
FILD_INT32 tmp1

;jmp short loc_408DF0
tcall loc_408DF0
endp

proc loc_408DD1
;movsx ecx, al
ext8s ecx, eax

;shl ecx, 1
shl ecx, ecx, 1

;mov edx, loc_418A2C
mov edx, loc_418A2C

;sub edx, ecx
sub edx, edx, ecx

;xor eax, eax
xor eax, eax, eax

;mov ax, [edx]
load16z tmp0, edx, 1
and eax, eax, 0xffff0000
or eax, eax, tmp0

;mov [esp+0x28], eax
add tmpadr, esp, 40
store eax, tmpadr, 4

;fild dword [esp+0x28]
add tmpadr, esp, 40
load tmp1, tmpadr, 4
FILD_INT32 tmp1

;fmul dword [loc_418A10]
load tmp1, loc_418A10, 4
FMUL_FLOAT tmp1

tcall loc_408DF0
endp

proc loc_408DF0
;fcom dword [loc_4181E8]
load tmp1, loc_4181E8, 4
FCOM_FLOAT tmp1

;fst dword [ebx+0x24]
FST_FLOAT
add tmpadr, ebx, 36
store tmp0, tmpadr, 1

;fnstsw ax
FNSTSW_VOID
and eax, eax, 0xffff0000
or eax, eax, tmp0

;test ah, 0x1
and tmpcnd, eax, 0x100

;jnz short loc_408E12
ctcallnz tmpcnd, loc_408E12

tcall loc_408E00
endp

proc loc_408E00
;fld dword [ebp+0x48]
add tmpadr, ebp, 72
load tmp1, tmpadr, 4
FLD_FLOAT tmp1

;fadd dword [ebp+0x44]
add tmpadr, ebp, 68
load tmp1, tmpadr, 4
FADD_FLOAT tmp1

;mov ecx, [ebx+0x10]
add tmpadr, ebx, 16
load ecx, tmpadr, 1

;fadd st0, st1
FADD_ST 1

;fstp dword [ecx+0x44]
FSTP_FLOAT
add tmpadr, ecx, 68
store tmp0, tmpadr, 1

;fstp st0
FSTP_ST 0

;jmp short loc_408E1E
tcall loc_408E1E
endp

proc loc_408E12
;fsub dword [ebp+0x44]
add tmpadr, ebp, 68
load tmp1, tmpadr, 4
FSUB_FLOAT tmp1

;mov edx, [ebx+0x10]
add tmpadr, ebx, 16
load edx, tmpadr, 1

;fsub dword [ebp+0x48]
add tmpadr, ebp, 72
load tmp1, tmpadr, 4
FSUB_FLOAT tmp1

;fstp dword [edx+0x44]
FSTP_FLOAT
add tmpadr, edx, 68
store tmp0, tmpadr, 1

tcall loc_408E1E
endp

proc loc_408E1E
;xor eax, eax
xor eax, eax, eax

;mov al, [esi+0x24]
add tmpadr, esi, 36
load8z tmp0, tmpadr, 1
and eax, eax, 0xffffff00
or eax, eax, tmp0

;dec eax
sub eax, eax, 1
mov tmpcnd, eax

;jz short loc_408E67
ctcallz tmpcnd, loc_408E67

tcall loc_408E26
endp

proc loc_408E26
;dec eax
sub eax, eax, 1
mov tmpcnd, eax

;jz short loc_408E50
ctcallz tmpcnd, loc_408E50

tcall loc_408E29
endp

proc loc_408E29
;dec eax
sub eax, eax, 1
mov tmpcnd, eax

;jz short loc_408E30
ctcallz tmpcnd, loc_408E30

tcall loc_408E2C
endp

proc loc_408E2C
;xor eax, eax
xor eax, eax, eax

;jmp short loc_408E70
tcall loc_408E70
endp

proc loc_408E30
;mov eax, [esp+0x48]
add tmpadr, esp, 72
load eax, tmpadr, 4

;and eax, 0xff
and eax, eax, 0xff

;imul eax, eax
mul eax, eax, eax

;cdq
ashr edx, eax, 31

;and edx, 0x7f
and edx, edx, 0x7f

;add eax, edx
add eax, eax, edx

;mov ecx, eax
mov ecx, eax

;mov eax, 0x7f
mov eax, 0x7f

;sar ecx, 0x7
ashr ecx, ecx, 7

;sub eax, ecx
sub eax, eax, ecx

;jmp short loc_408E70
tcall loc_408E70
endp

proc loc_408E50
;mov eax, [esp+0x48]
add tmpadr, esp, 72
load eax, tmpadr, 4

;and eax, 0xff
and eax, eax, 0xff

;imul eax, eax
mul eax, eax, eax

;cdq
ashr edx, eax, 31

;and edx, 0x7f
and edx, edx, 0x7f

;add eax, edx
add eax, eax, edx

;sar eax, 0x7
ashr eax, eax, 7

;jmp short loc_408E70
tcall loc_408E70
endp

proc loc_408E67
;mov eax, [esp+0x48]
add tmpadr, esp, 72
load eax, tmpadr, 4

;and eax, 0xff
and eax, eax, 0xff

tcall loc_408E70
endp

proc loc_408E70
;mov cl, [esi+0x25]
add tmpadr, esi, 37
load8z tmp0, tmpadr, 1
and ecx, ecx, 0xffffff00
or ecx, ecx, tmp0

;test cl, cl
and tmp1, ecx, ecx
and eflags, eflags, ~(SF|OF)
and tmp0, tmp1, 0x80
cmovz tmp0, tmp0, 0, SF
or eflags, eflags, tmp0

;jl short loc_408E91
lshr tmp1, eflags, OF_SHIFT - SF_SHIFT
xor tmp1, tmp1, eflags
and tmp1, tmp1, SF
ctcallnz tmp1, loc_408E91

tcall loc_408E77
endp

proc loc_408E77
;movsx edx, cl
ext8s edx, ecx

;mov [esp+0x28], edx
add tmpadr, esp, 40
store edx, tmpadr, 4

;fild dword [esp+0x28]
add tmpadr, esp, 40
load tmp1, tmpadr, 4
FILD_INT32 tmp1

;fmul dword [eax*4+loc_4191AC]
mov tmpadr, loc_4191AC
shl tmp0, eax, 2
add tmpadr, tmpadr, tmp0
load tmp1, tmpadr, 4
FMUL_FLOAT tmp1

;fmul dword [loc_419658]
load tmp1, loc_419658, 4
FMUL_FLOAT tmp1

;jmp short loc_408EAE
tcall loc_408EAE
endp

proc loc_408E91
;shl eax, 0x2
shl eax, eax, 2

;mov edx, loc_4193AC
mov edx, loc_4193AC

;sub edx, eax
sub edx, edx, eax

;movsx eax, cl
ext8s eax, ecx

;mov [esp+0x28], eax
add tmpadr, esp, 40
store eax, tmpadr, 4

;fild dword [esp+0x28]
add tmpadr, esp, 40
load tmp1, tmpadr, 4
FILD_INT32 tmp1

;fmul dword [edx]
load tmp1, edx, 1
FMUL_FLOAT tmp1

;fmul dword [loc_419654]
load tmp1, loc_419654, 4
FMUL_FLOAT tmp1

tcall loc_408EAE
endp

proc loc_408EAE
;fadd dword [loc_4189F4]
load tmp1, loc_4189F4, 4
FADD_FLOAT tmp1

;mov ecx, [ebx+0x14]
add tmpadr, ebx, 20
load ecx, tmpadr, 1

;fst dword [ebx+0x28]
FST_FLOAT
add tmpadr, ebx, 40
store tmp0, tmpadr, 1

;movsx eax, byte [ebp+0x56]
add tmpadr, ebp, 86
load8s eax, tmpadr, 2

;movsx edx, byte [ecx+0x22]
add tmpadr, ecx, 34
load8s edx, tmpadr, 1

;add eax, edx
add eax, eax, edx
cmovslt eax, 0, tmpcnd, 0, 1

;jns short loc_408ECA
ctcallnz tmpcnd, loc_408ECA

tcall loc_408EC6
endp

proc loc_408EC6
;xor eax, eax
xor eax, eax, eax

;jmp short loc_408ED4
tcall loc_408ED4
endp

proc loc_408ECA
;cmp eax, 0x7f
cmovsgt eax, 127, tmpcnd, 0, 1

;jle short loc_408ED4
ctcallnz tmpcnd, loc_408ED4

tcall loc_408ECF
endp

proc loc_408ECF
;mov eax, 0x7f
mov eax, 0x7f

tcall loc_408ED4
endp

proc loc_408ED4
;fmul dword [eax*4+loc_4193AC]
mov tmpadr, loc_4193AC
shl tmp0, eax, 2
add tmpadr, tmpadr, tmp0
load tmp1, tmpadr, 4
FMUL_FLOAT tmp1

;xor edx, edx
xor edx, edx, edx

;fstp dword [edi+0x70]
FSTP_FLOAT
add tmpadr, edi, 112
store tmp0, tmpadr, 1

;movsx eax, byte [esi+0x2c]
add tmpadr, esi, 44
load8s eax, tmpadr, 1

;mov [esp+0x28], eax
add tmpadr, esp, 40
store eax, tmpadr, 4

;mov eax, [esp+0x44]
add tmpadr, esp, 68
load eax, tmpadr, 4

;fild dword [esp+0x28]
add tmpadr, esp, 40
load tmp1, tmpadr, 4
FILD_INT32 tmp1

;and eax, 0xff
and eax, eax, 0xff

;mov [esp+0x18], eax
add tmpadr, esp, 24
store eax, tmpadr, 4

;fmul dword [loc_419650]
load tmp1, loc_419650, 4
FMUL_FLOAT tmp1

;fstp dword [edi+0x64]
FSTP_FLOAT
add tmpadr, edi, 100
store tmp0, tmpadr, 1

;movsx ecx, byte [esi+0x28]
add tmpadr, esi, 40
load8s ecx, tmpadr, 1

;mov [esp+0x28], ecx
add tmpadr, esp, 40
store ecx, tmpadr, 4

;mov ecx, eax
mov ecx, eax

;fild dword [esp+0x28]
add tmpadr, esp, 40
load tmp1, tmpadr, 4
FILD_INT32 tmp1

;fmul dword [loc_41964C]
load tmp1, loc_41964C, 4
FMUL_FLOAT tmp1

;fstp dword [edi+0x68]
FSTP_FLOAT
add tmpadr, edi, 104
store tmp0, tmpadr, 1

;mov dl, [esi+0x29]
add tmpadr, esi, 41
load8z tmp0, tmpadr, 1
and edx, edx, 0xffffff00
or edx, edx, tmp0

;sub ecx, edx
sub ecx, ecx, edx

;movsx edx, byte [esi+0x2b]
add tmpadr, esi, 43
load8s edx, tmpadr, 1

;mov [esp+0x44], ecx
add tmpadr, esp, 68
store ecx, tmpadr, 4

;mov ecx, [esp+0x48]
add tmpadr, esp, 72
load ecx, tmpadr, 4

;fild dword [esp+0x44]
add tmpadr, esp, 68
load tmp1, tmpadr, 4
FILD_INT32 tmp1

;mov [esp+0x44], edx
add tmpadr, esp, 68
store edx, tmpadr, 4

;and ecx, 0xff
and ecx, ecx, 0xff

;xor edx, edx
xor edx, edx, edx

;fimul dword [esp+0x44]
add tmpadr, esp, 68
load tmp1, tmpadr, 4
FIMUL_INT32 tmp1

;mov [esp+0x44], ecx
add tmpadr, esp, 68
store ecx, tmpadr, 4

;add ecx, 0xffffffc0
add ecx, ecx, -64

;mov [esp+0x48], ecx
add tmpadr, esp, 72
store ecx, tmpadr, 4

;fmul dword [loc_419648]
load tmp1, loc_419648, 4
FMUL_FLOAT tmp1

;fstp dword [edi+0x74]
FSTP_FLOAT
add tmpadr, edi, 116
store tmp0, tmpadr, 1

;fild dword [esp+0x48]
add tmpadr, esp, 72
load tmp1, tmpadr, 4
FILD_INT32 tmp1

;movsx ecx, byte [esi+0x26]
add tmpadr, esi, 38
load8s ecx, tmpadr, 1

;fstp dword [esp+0x28]
FSTP_FLOAT
add tmpadr, esp, 40
store tmp0, tmpadr, 4

;mov [esp+0x48], ecx
add tmpadr, esp, 72
store ecx, tmpadr, 4

;mov dl, [esi+0x29]
add tmpadr, esi, 41
load8z tmp0, tmpadr, 1
and edx, edx, 0xffffff00
or edx, edx, tmp0

;fild dword [esp+0x48]
add tmpadr, esp, 72
load tmp1, tmpadr, 4
FILD_INT32 tmp1

;sub eax, edx
sub eax, eax, edx

;mov [esp+0x48], eax
add tmpadr, esp, 72
store eax, tmpadr, 4

;fmul dword [esp+0x28]
add tmpadr, esp, 40
load tmp1, tmpadr, 4
FMUL_FLOAT tmp1

;movsx eax, byte [esi+0x2a]
add tmpadr, esi, 42
load8s eax, tmpadr, 1

;fmul dword [loc_419644]
load tmp1, loc_419644, 4
FMUL_FLOAT tmp1

;fsubr dword [loc_4189F4]
load tmp1, loc_4189F4, 4
FSUBR_FLOAT tmp1

;fst dword [esp+0x10]
FST_FLOAT
add tmpadr, esp, 16
store tmp0, tmpadr, 4

;fild dword [esp+0x48]
add tmpadr, esp, 72
load tmp1, tmpadr, 4
FILD_INT32 tmp1

;mov [esp+0x48], eax
add tmpadr, esp, 72
store eax, tmpadr, 4

;fimul dword [esp+0x48]
add tmpadr, esp, 72
load tmp1, tmpadr, 4
FIMUL_INT32 tmp1

;fmul dword [loc_419640]
load tmp1, loc_419640, 4
FMUL_FLOAT tmp1

;fadd dword [loc_41963C]
load tmp1, loc_41963C, 4
FADD_FLOAT tmp1

;fcom dword [loc_4181E8]
load tmp1, loc_4181E8, 4
FCOM_FLOAT tmp1

;fnstsw ax
FNSTSW_VOID
and eax, eax, 0xffff0000
or eax, eax, tmp0

;test ah, 0x1
and tmpcnd, eax, 0x100

;jz short loc_408FB4
ctcallz tmpcnd, loc_408FB4

tcall loc_408FAC
endp

proc loc_408FAC
;fstp st0
FSTP_ST 0

;fld dword [loc_4181E8]
load tmp1, loc_4181E8, 4
FLD_FLOAT tmp1

tcall loc_408FB4
endp

proc loc_408FB4
;fld st0
FLD_ST 0

;call _ftol_asm
PUSH loc_408FBB
tcall _ftol_asm
endp

proc loc_408FBB
;mov [esp+0x48], eax
add tmpadr, esp, 72
store eax, tmpadr, 4

;cmp eax, 0x7f
and eflags, eflags, ~(ZF|SF|OF)
cmovslt eax, -2147483521, tmp3, OF, 0
or eflags, eflags, tmp3
sub tmp1, eax, 127
cmovz tmp1, tmp0, ZF, 0
or eflags, eflags, tmp0
and tmp0, tmp1, 0x80000000
cmovz tmp0, tmp0, 0, SF
or eflags, eflags, tmp0

;fisub dword [esp+0x48]
add tmpadr, esp, 72
load tmp1, tmpadr, 4
FISUB_INT32 tmp1

;jle short loc_408FCD
lshr tmp1, eflags, SF_SHIFT - ZF_SHIFT
lshr tmp2, eflags, OF_SHIFT - ZF_SHIFT
xor tmp1, tmp1, tmp2
or tmp1, tmp1, eflags
and tmp1, tmp1, ZF
ctcallnz tmp1, loc_408FCD

tcall loc_408FC8
endp

proc loc_408FC8
;mov eax, 0x7f
mov eax, 0x7f

tcall loc_408FCD
endp

proc loc_408FCD
;fld dword [eax*4+loc_418DAC]
mov tmpadr, loc_418DAC
shl tmp0, eax, 2
add tmpadr, tmpadr, tmp0
load tmp1, tmpadr, 4
FLD_FLOAT tmp1

;inc eax
add eax, eax, 1

;cmp eax, 0x7f
cmovsgt eax, 127, tmpcnd, 0, 1

;jle short loc_408FDF
ctcallnz tmpcnd, loc_408FDF

tcall loc_408FDA
endp

proc loc_408FDA
;mov eax, 0x7f
mov eax, 0x7f

tcall loc_408FDF
endp

proc loc_408FDF
;fld dword [eax*4+loc_418DAC]
mov tmpadr, loc_418DAC
shl tmp0, eax, 2
add tmpadr, tmpadr, tmp0
load tmp1, tmpadr, 4
FLD_FLOAT tmp1

;fsub st0, st1
FSUB_ST 1

;lea eax, [edi+0x4c]
add eax, edi, 76

;lea ecx, [esi+0x2d]
add ecx, esi, 45

;mov [esp+0x1c], eax
add tmpadr, esp, 28
store eax, tmpadr, 4

;lea ebp, [edi+0x5c]
add ebp, edi, 92

;fmul st0, st2
FMUL_ST 2

;lea ebx, [esi+0x31]
add ebx, esi, 49

;mov [esp+0x20], ecx
add tmpadr, esp, 32
store ecx, tmpadr, 4

;fadd st0, st1
FADD_ST 1

;fstp dword [esp+0x48]
FSTP_FLOAT
add tmpadr, esp, 72
store tmp0, tmpadr, 4

;fstp st0
FSTP_ST 0

;fstp st0
FSTP_ST 0

;fld dword [esp+0x10]
add tmpadr, esp, 16
load tmp1, tmpadr, 4
FLD_FLOAT tmp1

;fcomp dword [loc_4181E8]
load tmp1, loc_4181E8, 4
FCOMP_FLOAT tmp1

;fnstsw ax
FNSTSW_VOID
and eax, eax, 0xffff0000
or eax, eax, tmp0

;test ah, 0x1
and tmpcnd, eax, 0x100

;jz short loc_409021
ctcallz tmpcnd, loc_409021

tcall loc_409019
endp

proc loc_409019
;fstp st0
FSTP_ST 0

;fld dword [loc_4181E8]
load tmp1, loc_4181E8, 4
FLD_FLOAT tmp1

tcall loc_409021
endp

proc loc_409021
;fld dword [esp+0x48]
add tmpadr, esp, 72
load tmp1, tmpadr, 4
FLD_FLOAT tmp1

;fcomp dword [loc_4181E8]
load tmp1, loc_4181E8, 4
FCOMP_FLOAT tmp1

;fnstsw ax
FNSTSW_VOID
and eax, eax, 0xffff0000
or eax, eax, tmp0

;test ah, 0x1
and tmpcnd, eax, 0x100

;jz short loc_40903A
ctcallz tmpcnd, loc_40903A

tcall loc_409032
endp

proc loc_409032
;mov dword [esp+0x48], 0x0
add tmpadr, esp, 72
store 0, tmpadr, 4

tcall loc_40903A
endp

proc loc_40903A
;mov dword [esp+0x10], 0x4
add tmpadr, esp, 16
mov tmp1, 0x4
store tmp1, tmpadr, 4

tcall loc_409042
endp

proc loc_409042
;mov dl, [ebx]
load8z tmp0, ebx, 1
and edx, edx, 0xffffff00
or edx, edx, tmp0

;xor ecx, ecx
xor ecx, ecx, ecx

;mov [esp+0x34], dl
add tmpadr, esp, 52
store8 edx, tmpadr, 4

;inc ebx
add ebx, ebx, 1

;mov eax, [esp+0x34]
add tmpadr, esp, 52
load eax, tmpadr, 4

;and eax, 0xff
and eax, eax, 0xff

;mov cx, [eax*2+loc_418CAC]
mov tmpadr, loc_418CAC
shl tmp0, eax, 1
add tmpadr, tmpadr, tmp0
load16z tmp0, tmpadr, 2
and ecx, ecx, 0xffff0000
or ecx, ecx, tmp0

;mov [esp+0x38], ecx
add tmpadr, esp, 56
store ecx, tmpadr, 4

;fild dword [esp+0x38]
add tmpadr, esp, 56
load tmp1, tmpadr, 4
FILD_INT32 tmp1

;fmul st0, st1
FMUL_ST 1

;fmul dword [esp+0x48]
add tmpadr, esp, 72
load tmp1, tmpadr, 4
FMUL_FLOAT tmp1

;call _ftol_asm
PUSH loc_40906F
tcall _ftol_asm
endp

proc loc_40906F
;and eax, 0xffff
and eax, eax, 0xffff

;add ebp, 0x2
add ebp, ebp, 2

;mov ecx, eax
mov ecx, eax

;fstp st0
FSTP_ST 0

;lea eax, [ecx+ecx*2]
shl tmpadr, ecx, 1
add eax, tmpadr, ecx

;shl eax, 0x4
shl eax, eax, 4

;add eax, ecx
add eax, eax, ecx

;fld dword [loc_4189F4]
load tmp1, loc_4189F4, 4
FLD_FLOAT tmp1

;lea eax, [eax+eax*4]
shl tmpadr, eax, 2
add eax, tmpadr, eax

;lea edx, [eax+eax*8]
shl tmpadr, eax, 3
add edx, tmpadr, eax

;mov eax, 0x51eb851f
mov eax, 0x51eb851f

;lea ecx, [edx+edx+0x3200]
add tmpadr, edx, edx
add ecx, tmpadr, 12800

;mul ecx
umul eax, edx, eax, ecx

;mov ecx, [esp+0x20]
add tmpadr, esp, 32
load ecx, tmpadr, 4

;mov eax, [esp+0x1c]
add tmpadr, esp, 28
load eax, tmpadr, 4

;shr edx, 0xd
lshr edx, edx, 13

;mov [ebp-0x2], dx
add tmpadr, ebp, -2
store16 edx, tmpadr, 2

;xor edx, edx
xor edx, edx, edx

;mov dl, [ecx]
load8z tmp0, ecx, 1
and edx, edx, 0xffffff00
or edx, edx, tmp0

;add eax, 0x4
add eax, eax, 4

;mov [esp+0x38], edx
add tmpadr, esp, 56
store edx, tmpadr, 4

;mov [esp+0x1c], eax
add tmpadr, esp, 28
store eax, tmpadr, 4

;fild dword [esp+0x38]
add tmpadr, esp, 56
load tmp1, tmpadr, 4
FILD_INT32 tmp1

;inc ecx
add ecx, ecx, 1

;mov [esp+0x20], ecx
add tmpadr, esp, 32
store ecx, tmpadr, 4

;fmul dword [loc_4181E0]
load tmp1, loc_4181E0, 4
FMUL_FLOAT tmp1

;fstp dword [eax-0x4]
FSTP_FLOAT
add tmpadr, eax, -4
store tmp0, tmpadr, 1

;mov eax, [esp+0x10]
add tmpadr, esp, 16
load eax, tmpadr, 4

;dec eax
sub eax, eax, 1
mov tmpcnd, eax

;mov [esp+0x10], eax
add tmpadr, esp, 16
store eax, tmpadr, 4

;jnz near loc_409042
ctcallnz tmpcnd, loc_409042

tcall loc_4090DC
endp

proc loc_4090DC
;mov al, [esi+0x27]
add tmpadr, esi, 39
load8z tmp0, tmpadr, 1
and eax, eax, 0xffffff00
or eax, eax, tmp0

;test al, al
and tmp1, eax, eax
and eflags, eflags, ~(SF|OF)
and tmp0, tmp1, 0x80
cmovz tmp0, tmp0, 0, SF
or eflags, eflags, tmp0

;fstp st0
FSTP_ST 0

;jl short loc_40910B
lshr tmp1, eflags, OF_SHIFT - SF_SHIFT
xor tmp1, tmp1, eflags
and tmp1, tmp1, SF
ctcallnz tmp1, loc_40910B

tcall loc_4090E5
endp

proc loc_4090E5
;mov edx, [esp+0x44]
add tmpadr, esp, 68
load edx, tmpadr, 4

;mov ecx, 0x7f
mov ecx, 0x7f

;sub ecx, edx
sub ecx, ecx, edx

;mov [esp+0x48], ecx
add tmpadr, esp, 72
store ecx, tmpadr, 4

;fild dword [esp+0x48]
add tmpadr, esp, 72
load tmp1, tmpadr, 4
FILD_INT32 tmp1

;movsx edx, al
ext8s edx, eax

;mov [esp+0x48], edx
add tmpadr, esp, 72
store edx, tmpadr, 4

;fimul dword [esp+0x48]
add tmpadr, esp, 72
load tmp1, tmpadr, 4
FIMUL_INT32 tmp1

;fmul dword [loc_419638]
load tmp1, loc_419638, 4
FMUL_FLOAT tmp1

;jmp short loc_409120
tcall loc_409120
endp

proc loc_40910B
;movsx eax, al
ext8s eax, eax

;mov [esp+0x48], eax
add tmpadr, esp, 72
store eax, tmpadr, 4

;fild dword [esp+0x48]
add tmpadr, esp, 72
load tmp1, tmpadr, 4
FILD_INT32 tmp1

;fimul dword [esp+0x44]
add tmpadr, esp, 68
load tmp1, tmpadr, 4
FIMUL_INT32 tmp1

;fmul dword [loc_419634]
load tmp1, loc_419634, 4
FMUL_FLOAT tmp1

tcall loc_409120
endp

proc loc_409120
;fsubr dword [loc_4189F4]
load tmp1, loc_4189F4, 4
FSUBR_FLOAT tmp1

;lea eax, [edi+0x4c]
add eax, edi, 76

;mov ecx, 0x4
mov ecx, 0x4

tcall loc_40912E
endp

proc loc_40912E
;fld st0
FLD_ST 0

;fmul dword [eax]
load tmp1, eax, 1
FMUL_FLOAT tmp1

;add eax, 0x4
add eax, eax, 4

;dec ecx
and eflags, eflags, ~ZF
sub ecx, ecx, 1
cmovz ecx, tmp0, ZF, 0
or eflags, eflags, tmp0

;fstp dword [eax-0x4]
FSTP_FLOAT
add tmpadr, eax, -4
store tmp0, tmpadr, 1

;jnz short loc_40912E
and tmp1, eflags, ZF
ctcallz tmp1, loc_40912E

tcall loc_40913B
endp

proc loc_40913B
;mov edx, [esp+0x14]
add tmpadr, esp, 20
load edx, tmpadr, 4

;movsx ecx, byte [esi+0x23]
add tmpadr, esi, 35
load8s ecx, tmpadr, 1

;fstp st0
FSTP_ST 0

;movsx eax, byte [edx+0x55]
add tmpadr, edx, 85
load8s eax, tmpadr, 1

;add eax, ecx
add eax, eax, ecx
cmovslt eax, 0, tmpcnd, 0, 1

;jns short loc_409151
ctcallnz tmpcnd, loc_409151

tcall loc_40914D
endp

proc loc_40914D
;xor eax, eax
xor eax, eax, eax

;jmp short loc_40915B
tcall loc_40915B
endp

proc loc_409151
;cmp eax, 0x7f
cmovsgt eax, 127, tmpcnd, 0, 1

;jle short loc_40915B
ctcallnz tmpcnd, loc_40915B

tcall loc_409156
endp

proc loc_409156
;mov eax, 0x7f
mov eax, 0x7f

tcall loc_40915B
endp

proc loc_40915B
;mov eax, [eax*4+loc_418FAC]
mov tmpadr, loc_418FAC
shl tmp0, eax, 2
add tmpadr, tmpadr, tmp0
load eax, tmpadr, 4

;mov [edi+0x6c], eax
add tmpadr, edi, 108
store eax, tmpadr, 1

;xor eax, eax
xor eax, eax, eax

;mov al, [esi+0x21]
add tmpadr, esi, 33
load8z tmp0, tmpadr, 1
and eax, eax, 0xffffff00
or eax, eax, tmp0

;sub eax, 0x0
sub eax, eax, 0
mov tmpcnd, eax

;jz short loc_409190
ctcallz tmpcnd, loc_409190

tcall loc_40916F
endp

proc loc_40916F
;dec eax
sub eax, eax, 1
mov tmpcnd, eax

;jz short loc_409187
ctcallz tmpcnd, loc_409187

tcall loc_409172
endp

proc loc_409172
;dec eax
sub eax, eax, 1
mov tmpcnd, eax

;jz short loc_40917E
ctcallz tmpcnd, loc_40917E

tcall loc_409175
endp

proc loc_409175
;mov dword [edi+0x78], 0x0
add tmpadr, edi, 120
store 0, tmpadr, 1

;jmp short loc_409197
tcall loc_409197
endp

proc loc_40917E
;mov dword [edi+0x78], 0x3
add tmpadr, edi, 120
mov tmp1, 0x3
store tmp1, tmpadr, 1

;jmp short loc_409197
tcall loc_409197
endp

proc loc_409187
;mov dword [edi+0x78], 0x2
add tmpadr, edi, 120
mov tmp1, 0x2
store tmp1, tmpadr, 1

;jmp short loc_409197
tcall loc_409197
endp

proc loc_409190
;mov dword [edi+0x78], 0x1
add tmpadr, edi, 120
mov tmp1, 0x1
store tmp1, tmpadr, 1

tcall loc_409197
endp

proc loc_409197
;mov eax, [esp+0x44]
add tmpadr, esp, 68
load eax, tmpadr, 4

;xor ecx, ecx
xor ecx, ecx, ecx

;mov cl, [eax+loc_4195AC]
mov tmpadr, loc_4195AC
add tmpadr, tmpadr, eax
load8z tmp0, tmpadr, 1
and ecx, ecx, 0xffffff00
or ecx, ecx, tmp0

;mov al, [esi+0x3c]
add tmpadr, esi, 60
load8z tmp0, tmpadr, 1
and eax, eax, 0xffffff00
or eax, eax, tmp0

;mov [esp+0x48], ecx
add tmpadr, esp, 72
store ecx, tmpadr, 4

;fild dword [esp+0x48]
add tmpadr, esp, 72
load tmp1, tmpadr, 4
FILD_INT32 tmp1

;test al, al
and tmp1, eax, eax
and eflags, eflags, ~(SF|OF)
and tmp0, tmp1, 0x80
cmovz tmp0, tmp0, 0, SF
or eflags, eflags, tmp0

;fmul dword [loc_4181E0]
load tmp1, loc_4181E0, 4
FMUL_FLOAT tmp1

;fsubr dword [loc_4189F4]
load tmp1, loc_4189F4, 4
FSUBR_FLOAT tmp1

;jl short loc_40921A
lshr tmp1, eflags, OF_SHIFT - SF_SHIFT
xor tmp1, tmp1, eflags
and tmp1, tmp1, SF
ctcallnz tmp1, loc_40921A

tcall loc_4091BE
endp

proc loc_4091BE
;movsx ecx, al
ext8s ecx, eax

;mov [esp+0x48], ecx
add tmpadr, esp, 72
store ecx, tmpadr, 4

;fild dword [esp+0x48]
add tmpadr, esp, 72
load tmp1, tmpadr, 4
FILD_INT32 tmp1

;fmul dword [loc_419640]
load tmp1, loc_419640, 4
FMUL_FLOAT tmp1

;fadd dword [loc_4189F4]
load tmp1, loc_4189F4, 4
FADD_FLOAT tmp1

;fmulp st1, st0
FMULP_ST 1

;fcom dword [loc_4189F4]
load tmp1, loc_4189F4, 4
FCOM_FLOAT tmp1

;fnstsw ax
FNSTSW_VOID
and eax, eax, 0xffff0000
or eax, eax, tmp0

;test ah, 0x41
and tmpcnd, eax, 0x4100

;jnz short loc_4091EC
ctcallnz tmpcnd, loc_4091EC

tcall loc_4091E4
endp

proc loc_4091E4
;fstp st0
FSTP_ST 0

;fld dword [loc_4189F4]
load tmp1, loc_4189F4, 4
FLD_FLOAT tmp1

tcall loc_4091EC
endp

proc loc_4091EC
;xor eax, eax
xor eax, eax, eax

;mov al, [esi+0x3b]
add tmpadr, esi, 59
load8z tmp0, tmpadr, 1
and eax, eax, 0xffffff00
or eax, eax, tmp0

;dec eax
sub eax, eax, 1
mov tmpcnd, eax

;jz short loc_409261
ctcallz tmpcnd, loc_409261

tcall loc_4091F4
endp

proc loc_4091F4
;dec eax
sub eax, eax, 1
mov tmpcnd, eax

;jz short loc_409208
ctcallz tmpcnd, loc_409208

tcall loc_4091F7
endp

proc loc_4091F7
;dec eax
sub eax, eax, 1
mov tmpcnd, eax

;jz short loc_409204
ctcallz tmpcnd, loc_409204

tcall loc_4091FA
endp

proc loc_4091FA
;fstp st0
FSTP_ST 0

;fld dword [loc_4189F4]
load tmp1, loc_4189F4, 4
FLD_FLOAT tmp1

;jmp short loc_409267
tcall loc_409267
endp

proc loc_409204
;fld st0
FLD_ST 0

;jmp short loc_40925F
tcall loc_40925F
endp

proc loc_409208
;fsubr dword [loc_4189F4]
load tmp1, loc_4189F4, 4
FSUBR_FLOAT tmp1

;fld st0
FLD_ST 0

;fmulp st1, st0
FMULP_ST 1

;fsubr dword [loc_4189D8]
load tmp1, loc_4189D8, 4
FSUBR_FLOAT tmp1

;jmp short loc_409267
tcall loc_409267
endp

proc loc_40921A
;xor ecx, ecx
xor ecx, ecx, ecx

;mov cl, [esi+0x3b]
add tmpadr, esi, 59
load8z tmp0, tmpadr, 1
and ecx, ecx, 0xffffff00
or ecx, ecx, tmp0

;dec ecx
sub ecx, ecx, 1
mov tmpcnd, ecx

;jz short loc_409248
ctcallz tmpcnd, loc_409248

tcall loc_409222
endp

proc loc_409222
;dec ecx
sub ecx, ecx, 1
mov tmpcnd, ecx

;jz short loc_409238
ctcallz tmpcnd, loc_409238

tcall loc_409225
endp

proc loc_409225
;dec ecx
sub ecx, ecx, 1
mov tmpcnd, ecx

;jz short loc_409232
ctcallz tmpcnd, loc_409232

tcall loc_409228
endp

proc loc_409228
;fstp st0
FSTP_ST 0

;fld dword [loc_4181E8]
load tmp1, loc_4181E8, 4
FLD_FLOAT tmp1

;jmp short loc_409248
tcall loc_409248
endp

proc loc_409232
;fld st0
FLD_ST 0

;fmulp st1, st0
FMULP_ST 1

;jmp short loc_409248
tcall loc_409248
endp

proc loc_409238
;fsubr dword [loc_4189F4]
load tmp1, loc_4189F4, 4
FSUBR_FLOAT tmp1

;fld st0
FLD_ST 0

;fmulp st1, st0
FMULP_ST 1

;fsubr dword [loc_4189F4]
load tmp1, loc_4189F4, 4
FSUBR_FLOAT tmp1

tcall loc_409248
endp

proc loc_409248
;movsx eax, al
ext8s eax, eax

;mov [esp+0x48], eax
add tmpadr, esp, 72
store eax, tmpadr, 4

;fild dword [esp+0x48]
add tmpadr, esp, 72
load tmp1, tmpadr, 4
FILD_INT32 tmp1

;fmul dword [loc_419640]
load tmp1, loc_419640, 4
FMUL_FLOAT tmp1

;fadd dword [loc_4189F4]
load tmp1, loc_4189F4, 4
FADD_FLOAT tmp1

tcall loc_40925F
endp

proc loc_40925F
;fmulp st1, st0
FMULP_ST 1

tcall loc_409261
endp

proc loc_409261
;fsubr dword [loc_4189F4]
load tmp1, loc_4189F4, 4
FSUBR_FLOAT tmp1

tcall loc_409267
endp

proc loc_409267
;mov ecx, [esp+0x24]
add tmpadr, esp, 36
load ecx, tmpadr, 4

;mov eax, [edx+0x18]
add tmpadr, edx, 24
load eax, tmpadr, 1

;and ecx, 0xff
and ecx, ecx, 0xff

;mov [esp+0x48], ecx
add tmpadr, esp, 72
store ecx, tmpadr, 4

;fild dword [esp+0x48]
add tmpadr, esp, 72
load tmp1, tmpadr, 4
FILD_INT32 tmp1

;test eax, eax
and eflags, eflags, ~ZF
cmovz eax, tmp0, ZF, 0
or eflags, eflags, tmp0

;fmul st0, st1
FMUL_ST 1

;fmulp st1, st0
FMULP_ST 1

;fmul dword [loc_4181E0]
load tmp1, loc_4181E0, 4
FMUL_FLOAT tmp1

;jz short loc_409299
and tmp1, eflags, ZF
ctcallnz tmp1, loc_409299

tcall loc_40928A
endp

proc loc_40928A
;xor ecx, ecx
xor ecx, ecx, ecx

;mov cl, [eax+0x2]
add tmpadr, eax, 2
load8z tmp0, tmpadr, 1
and ecx, ecx, 0xffffff00
or ecx, ecx, tmp0

;mov [esp+0x48], ecx
add tmpadr, esp, 72
store ecx, tmpadr, 4

;fimul dword [esp+0x48]
add tmpadr, esp, 72
load tmp1, tmpadr, 4
FIMUL_INT32 tmp1

;jmp short loc_4092A9
tcall loc_4092A9
endp

proc loc_409299
;mov eax, [edx+0x1c]
add tmpadr, edx, 28
load eax, tmpadr, 1

;xor ecx, ecx
xor ecx, ecx, ecx

;mov cl, [eax+0x2]
add tmpadr, eax, 2
load8z tmp0, tmpadr, 1
and ecx, ecx, 0xffffff00
or ecx, ecx, tmp0

;mov [esp+0x48], ecx
add tmpadr, esp, 72
store ecx, tmpadr, 4

;fimul dword [esp+0x48]
add tmpadr, esp, 72
load tmp1, tmpadr, 4
FIMUL_INT32 tmp1

tcall loc_4092A9
endp

proc loc_4092A9
;mov al, [esi+0x3a]
add tmpadr, esi, 58
load8z tmp0, tmpadr, 1
and eax, eax, 0xffffff00
or eax, eax, tmp0

;fmul dword [loc_4181E0]
load tmp1, loc_4181E0, 4
FMUL_FLOAT tmp1

;movsx ecx, al
ext8s ecx, eax

;mov [esp+0x48], ecx
add tmpadr, esp, 72
store ecx, tmpadr, 4

;fild dword [esp+0x48]
add tmpadr, esp, 72
load tmp1, tmpadr, 4
FILD_INT32 tmp1

;test al, al
and tmp1, eax, eax
and eflags, eflags, ~(SF|OF)
and tmp0, tmp1, 0x80
cmovz tmp0, tmp0, 0, SF
or eflags, eflags, tmp0

;fmul dword [loc_419640]
load tmp1, loc_419640, 4
FMUL_FLOAT tmp1

;fstp dword [esp+0x48]
FSTP_FLOAT
add tmpadr, esp, 72
store tmp0, tmpadr, 4

;jl short loc_409303
lshr tmp1, eflags, OF_SHIFT - SF_SHIFT
xor tmp1, tmp1, eflags
and tmp1, tmp1, SF
ctcallnz tmp1, loc_409303

tcall loc_4092CB
endp

proc loc_4092CB
;mov ebx, [esp+0x18]
add tmpadr, esp, 24
load ebx, tmpadr, 4

;xor eax, eax
xor eax, eax, eax

;mov al, [esi+0x38]
add tmpadr, esi, 56
load8z tmp0, tmpadr, 1
and eax, eax, 0xffffff00
or eax, eax, tmp0

;lea ecx, [eax-0x18]
add ecx, eax, -24

;cmp ebx, ecx
cmovsgt ebx, ecx, tmpcnd, 0, 1

;jg short loc_4092E7
ctcallz tmpcnd, loc_4092E7

tcall loc_4092DB
endp

proc loc_4092DB
;fld dword [loc_4189F4]
load tmp1, loc_4189F4, 4
FLD_FLOAT tmp1

;fsub dword [esp+0x48]
add tmpadr, esp, 72
load tmp1, tmpadr, 4
FSUB_FLOAT tmp1

;jmp short loc_409345
tcall loc_409345
endp

proc loc_4092E7
;lea ecx, [eax+0x18]
add ecx, eax, 24

;cmp ebx, ecx
cmovslt ebx, ecx, tmpcnd, 0, 1

;jge short loc_409347
ctcallnz tmpcnd, loc_409347

tcall loc_4092EE
endp

proc loc_4092EE
;sub eax, ebx
sub eax, eax, ebx

;add eax, 0x18
add eax, eax, 24

;mov [esp+0x44], eax
add tmpadr, esp, 68
store eax, tmpadr, 4

;fild dword [esp+0x44]
add tmpadr, esp, 68
load tmp1, tmpadr, 4
FILD_INT32 tmp1

;fmul dword [loc_419630]
load tmp1, loc_419630, 4
FMUL_FLOAT tmp1

;jmp short loc_40933B
tcall loc_40933B
endp

proc loc_409303
;mov ebx, [esp+0x18]
add tmpadr, esp, 24
load ebx, tmpadr, 4

;xor eax, eax
xor eax, eax, eax

;mov al, [esi+0x38]
add tmpadr, esi, 56
load8z tmp0, tmpadr, 1
and eax, eax, 0xffffff00
or eax, eax, tmp0

;lea ecx, [eax+0x18]
add ecx, eax, 24

;cmp ebx, ecx
cmovslt ebx, ecx, tmpcnd, 0, 1

;jl short loc_40931F
ctcallz tmpcnd, loc_40931F

tcall loc_409313
endp

proc loc_409313
;fld dword [esp+0x48]
add tmpadr, esp, 72
load tmp1, tmpadr, 4
FLD_FLOAT tmp1

;fadd dword [loc_4189F4]
load tmp1, loc_4189F4, 4
FADD_FLOAT tmp1

;jmp short loc_409345
tcall loc_409345
endp

proc loc_40931F
;lea ecx, [eax-0x18]
add ecx, eax, -24

;cmp ebx, ecx
cmovsgt ebx, ecx, tmpcnd, 0, 1

;jle short loc_409347
ctcallnz tmpcnd, loc_409347

tcall loc_409326
endp

proc loc_409326
;mov ecx, ebx
mov ecx, ebx

;sub ecx, eax
sub ecx, ecx, eax

;sub ecx, 0x18
sub ecx, ecx, 24

;mov [esp+0x44], ecx
add tmpadr, esp, 68
store ecx, tmpadr, 4

;fild dword [esp+0x44]
add tmpadr, esp, 68
load tmp1, tmpadr, 4
FILD_INT32 tmp1

;fmul dword [loc_41962C]
load tmp1, loc_41962C, 4
FMUL_FLOAT tmp1

tcall loc_40933B
endp

proc loc_40933B
;fmul dword [esp+0x48]
add tmpadr, esp, 72
load tmp1, tmpadr, 4
FMUL_FLOAT tmp1

;fsubr dword [loc_4189F4]
load tmp1, loc_4189F4, 4
FSUBR_FLOAT tmp1

tcall loc_409345
endp

proc loc_409345
;fmulp st1, st0
FMULP_ST 1

tcall loc_409347
endp

proc loc_409347
;fmul dword [loc_41B718]
load tmp1, loc_41B718, 4
FMUL_FLOAT tmp1

;mov eax, [esp+0x30]
add tmpadr, esp, 48
load eax, tmpadr, 4

;push 0x0
PUSH 0x0

;push eax
PUSH eax

;lea ecx, [edi+0x7c]
add ecx, edi, 124

;fld st0
FLD_ST 0

;fstp dword [eax+0x20]
FSTP_FLOAT
add tmpadr, eax, 32
store tmp0, tmpadr, 1

;fld dword [edx+0x38]
add tmpadr, edx, 56
load tmp1, tmpadr, 1
FLD_FLOAT tmp1

;fmul dword [edx+0x34]
add tmpadr, edx, 52
load tmp1, tmpadr, 1
FMUL_FLOAT tmp1

;fmul st0, st1
FMUL_ST 1

;fstp dword [edi+0x90]
FSTP_FLOAT
add tmpadr, edi, 144
store tmp0, tmpadr, 1

;fstp st0
FSTP_ST 0

;call loc_409880
PUSH loc_409371
tcall loc_409880
endp

proc loc_409371
;movsx edx, byte [esi+0x37]
add tmpadr, esi, 55
load8s edx, tmpadr, 1

;mov [esp+0x48], edx
add tmpadr, esp, 72
store edx, tmpadr, 4

;xor ecx, ecx
xor ecx, ecx, ecx

;fild dword [esp+0x48]
add tmpadr, esp, 72
load tmp1, tmpadr, 4
FILD_INT32 tmp1

;fmul dword [loc_419640]
load tmp1, loc_419640, 4
FMUL_FLOAT tmp1

;fstp dword [edi+0xac]
FSTP_FLOAT
add tmpadr, edi, 172
store tmp0, tmpadr, 1

;movsx eax, byte [esi+0x3d]
add tmpadr, esi, 61
load8s eax, tmpadr, 1

;mov [esp+0x48], eax
add tmpadr, esp, 72
store eax, tmpadr, 4

;mov cl, [esi+0x38]
add tmpadr, esi, 56
load8z tmp0, tmpadr, 1
and ecx, ecx, 0xffffff00
or ecx, ecx, tmp0

;fild dword [esp+0x48]
add tmpadr, esp, 72
load tmp1, tmpadr, 4
FILD_INT32 tmp1

;movsx edx, byte [esi+0x39]
add tmpadr, esi, 57
load8s edx, tmpadr, 1

;fmul dword [esp+0x28]
add tmpadr, esp, 40
load tmp1, tmpadr, 4
FMUL_FLOAT tmp1

;sub ebx, ecx
sub ebx, ebx, ecx

;mov [esp+0x48], ebx
add tmpadr, esp, 72
store ebx, tmpadr, 4

;fmul dword [loc_419644]
load tmp1, loc_419644, 4
FMUL_FLOAT tmp1

;fsubr dword [loc_4189F4]
load tmp1, loc_4189F4, 4
FSUBR_FLOAT tmp1

;fst dword [esp+0x10]
FST_FLOAT
add tmpadr, esp, 16
store tmp0, tmpadr, 4

;fild dword [esp+0x48]
add tmpadr, esp, 72
load tmp1, tmpadr, 4
FILD_INT32 tmp1

;mov [esp+0x48], edx
add tmpadr, esp, 72
store edx, tmpadr, 4

;fimul dword [esp+0x48]
add tmpadr, esp, 72
load tmp1, tmpadr, 4
FIMUL_INT32 tmp1

;fmul dword [loc_419640]
load tmp1, loc_419640, 4
FMUL_FLOAT tmp1

;fadd dword [loc_41963C]
load tmp1, loc_41963C, 4
FADD_FLOAT tmp1

;fcom dword [loc_4181E8]
load tmp1, loc_4181E8, 4
FCOM_FLOAT tmp1

;fnstsw ax
FNSTSW_VOID
and eax, eax, 0xffff0000
or eax, eax, tmp0

;test ah, 0x1
and tmpcnd, eax, 0x100

;jz short loc_4093E5
ctcallz tmpcnd, loc_4093E5

tcall loc_4093DD
endp

proc loc_4093DD
;fstp st0
FSTP_ST 0

;fld dword [loc_4181E8]
load tmp1, loc_4181E8, 4
FLD_FLOAT tmp1

tcall loc_4093E5
endp

proc loc_4093E5
;fld st0
FLD_ST 0

;call _ftol_asm
PUSH loc_4093EC
tcall _ftol_asm
endp

proc loc_4093EC
;mov [esp+0x48], eax
add tmpadr, esp, 72
store eax, tmpadr, 4

;cmp eax, 0x7f
and eflags, eflags, ~(ZF|SF|OF)
cmovslt eax, -2147483521, tmp3, OF, 0
or eflags, eflags, tmp3
sub tmp1, eax, 127
cmovz tmp1, tmp0, ZF, 0
or eflags, eflags, tmp0
and tmp0, tmp1, 0x80000000
cmovz tmp0, tmp0, 0, SF
or eflags, eflags, tmp0

;fisub dword [esp+0x48]
add tmpadr, esp, 72
load tmp1, tmpadr, 4
FISUB_INT32 tmp1

;jle short loc_4093FE
lshr tmp1, eflags, SF_SHIFT - ZF_SHIFT
lshr tmp2, eflags, OF_SHIFT - ZF_SHIFT
xor tmp1, tmp1, tmp2
or tmp1, tmp1, eflags
and tmp1, tmp1, ZF
ctcallnz tmp1, loc_4093FE

tcall loc_4093F9
endp

proc loc_4093F9
;mov eax, 0x7f
mov eax, 0x7f

tcall loc_4093FE
endp

proc loc_4093FE
;fld dword [eax*4+loc_418DAC]
mov tmpadr, loc_418DAC
shl tmp0, eax, 2
add tmpadr, tmpadr, tmp0
load tmp1, tmpadr, 4
FLD_FLOAT tmp1

;inc eax
add eax, eax, 1

;cmp eax, 0x7f
cmovsgt eax, 127, tmpcnd, 0, 1

;jle short loc_409410
ctcallnz tmpcnd, loc_409410

tcall loc_40940B
endp

proc loc_40940B
;mov eax, 0x7f
mov eax, 0x7f

tcall loc_409410
endp

proc loc_409410
;fld dword [eax*4+loc_418DAC]
mov tmpadr, loc_418DAC
shl tmp0, eax, 2
add tmpadr, tmpadr, tmp0
load tmp1, tmpadr, 4
FLD_FLOAT tmp1

;fsub st0, st1
FSUB_ST 1

;lea eax, [edi+0x94]
add eax, edi, 148

;lea ecx, [esi+0x41]
add ecx, esi, 65

;mov [esp+0x44], eax
add tmpadr, esp, 68
store eax, tmpadr, 4

;lea ebx, [edi+0xa4]
add ebx, edi, 164

;fmul st0, st2
FMUL_ST 2

;lea ebp, [esi+0x45]
add ebp, esi, 69

;mov [esp+0x28], ecx
add tmpadr, esp, 40
store ecx, tmpadr, 4

;fadd st0, st1
FADD_ST 1

;fstp dword [esp+0x48]
FSTP_FLOAT
add tmpadr, esp, 72
store tmp0, tmpadr, 4

;fstp st0
FSTP_ST 0

;fstp st0
FSTP_ST 0

;fld dword [esp+0x10]
add tmpadr, esp, 16
load tmp1, tmpadr, 4
FLD_FLOAT tmp1

;fcomp dword [loc_4181E8]
load tmp1, loc_4181E8, 4
FCOMP_FLOAT tmp1

;fnstsw ax
FNSTSW_VOID
and eax, eax, 0xffff0000
or eax, eax, tmp0

;test ah, 0x1
and tmpcnd, eax, 0x100

;jz short loc_409458
ctcallz tmpcnd, loc_409458

tcall loc_409450
endp

proc loc_409450
;fstp st0
FSTP_ST 0

;fld dword [loc_4181E8]
load tmp1, loc_4181E8, 4
FLD_FLOAT tmp1

tcall loc_409458
endp

proc loc_409458
;fld dword [esp+0x48]
add tmpadr, esp, 72
load tmp1, tmpadr, 4
FLD_FLOAT tmp1

;fcomp dword [loc_4181E8]
load tmp1, loc_4181E8, 4
FCOMP_FLOAT tmp1

;fnstsw ax
FNSTSW_VOID
and eax, eax, 0xffff0000
or eax, eax, tmp0

;test ah, 0x1
and tmpcnd, eax, 0x100

;jz short loc_409471
ctcallz tmpcnd, loc_409471

tcall loc_409469
endp

proc loc_409469
;mov dword [esp+0x48], 0x0
add tmpadr, esp, 72
store 0, tmpadr, 4

tcall loc_409471
endp

proc loc_409471
;mov dword [esp+0x24], 0x4
add tmpadr, esp, 36
mov tmp1, 0x4
store tmp1, tmpadr, 4

tcall loc_409479
endp

proc loc_409479
;mov dl, [ebp]
load8z tmp0, ebp, 4
and edx, edx, 0xffffff00
or edx, edx, tmp0

;xor ecx, ecx
xor ecx, ecx, ecx

;mov [esp+0x38], dl
add tmpadr, esp, 56
store8 edx, tmpadr, 4

;inc ebp
add ebp, ebp, 1

;mov eax, [esp+0x38]
add tmpadr, esp, 56
load eax, tmpadr, 4

;and eax, 0xff
and eax, eax, 0xff

;mov cx, [eax*2+loc_418CAC]
mov tmpadr, loc_418CAC
shl tmp0, eax, 1
add tmpadr, tmpadr, tmp0
load16z tmp0, tmpadr, 2
and ecx, ecx, 0xffff0000
or ecx, ecx, tmp0

;mov [esp+0x34], ecx
add tmpadr, esp, 52
store ecx, tmpadr, 4

;fild dword [esp+0x34]
add tmpadr, esp, 52
load tmp1, tmpadr, 4
FILD_INT32 tmp1

;fmul st0, st1
FMUL_ST 1

;fmul dword [esp+0x48]
add tmpadr, esp, 72
load tmp1, tmpadr, 4
FMUL_FLOAT tmp1

;call _ftol_asm
PUSH loc_4094A7
tcall _ftol_asm
endp

proc loc_4094A7
;and eax, 0xffff
and eax, eax, 0xffff

;add ebx, 0x2
add ebx, ebx, 2

;mov ecx, eax
mov ecx, eax

;fstp st0
FSTP_ST 0

;lea eax, [ecx+ecx*2]
shl tmpadr, ecx, 1
add eax, tmpadr, ecx

;shl eax, 0x4
shl eax, eax, 4

;add eax, ecx
add eax, eax, ecx

;fld dword [loc_4189F4]
load tmp1, loc_4189F4, 4
FLD_FLOAT tmp1

;lea eax, [eax+eax*4]
shl tmpadr, eax, 2
add eax, tmpadr, eax

;lea edx, [eax+eax*8]
shl tmpadr, eax, 3
add edx, tmpadr, eax

;mov eax, 0x51eb851f
mov eax, 0x51eb851f

;lea ecx, [edx+edx+0x3200]
add tmpadr, edx, edx
add ecx, tmpadr, 12800

;mul ecx
umul eax, edx, eax, ecx

;mov ecx, [esp+0x28]
add tmpadr, esp, 40
load ecx, tmpadr, 4

;mov eax, [esp+0x44]
add tmpadr, esp, 68
load eax, tmpadr, 4

;shr edx, 0xd
lshr edx, edx, 13

;mov [ebx-0x2], dx
add tmpadr, ebx, -2
store16 edx, tmpadr, 1

;xor edx, edx
xor edx, edx, edx

;mov dl, [ecx]
load8z tmp0, ecx, 1
and edx, edx, 0xffffff00
or edx, edx, tmp0

;add eax, 0x4
add eax, eax, 4

;mov [esp+0x34], edx
add tmpadr, esp, 52
store edx, tmpadr, 4

;mov [esp+0x44], eax
add tmpadr, esp, 68
store eax, tmpadr, 4

;fild dword [esp+0x34]
add tmpadr, esp, 52
load tmp1, tmpadr, 4
FILD_INT32 tmp1

;inc ecx
add ecx, ecx, 1

;mov [esp+0x28], ecx
add tmpadr, esp, 40
store ecx, tmpadr, 4

;fmul dword [loc_4181E0]
load tmp1, loc_4181E0, 4
FMUL_FLOAT tmp1

;fstp dword [eax-0x4]
FSTP_FLOAT
add tmpadr, eax, -4
store tmp0, tmpadr, 1

;mov eax, [esp+0x24]
add tmpadr, esp, 36
load eax, tmpadr, 4

;dec eax
sub eax, eax, 1
mov tmpcnd, eax

;mov [esp+0x24], eax
add tmpadr, esp, 36
store eax, tmpadr, 4

;jnz near loc_409479
ctcallnz tmpcnd, loc_409479

tcall loc_409514
endp

proc loc_409514
;mov eax, [loc_455D10]
load eax, loc_455D10, 4

;xor ebx, ebx
xor ebx, ebx, ebx

;cmp eax, ebx
and eflags, eflags, ~ZF
sub tmp1, eax, ebx
cmovz tmp1, tmp0, ZF, 0
or eflags, eflags, tmp0

;fstp st0
FSTP_ST 0

;jz short loc_40956A
and tmp1, eflags, ZF
ctcallnz tmp1, loc_40956A

tcall loc_409521
endp

proc loc_409521
;mov eax, [esp+0x2c]
add tmpadr, esp, 44
load eax, tmpadr, 4

;and eax, 0xff
and eax, eax, 0xff

;mov [esp+0x48], eax
add tmpadr, esp, 72
store eax, tmpadr, 4

;mov eax, [esp+0x14]
add tmpadr, esp, 20
load eax, tmpadr, 4

;fild dword [esp+0x48]
add tmpadr, esp, 72
load tmp1, tmpadr, 4
FILD_INT32 tmp1

;fmul dword [eax+0x4c]
add tmpadr, eax, 76
load tmp1, tmpadr, 1
FMUL_FLOAT tmp1

;fmul dword [loc_41B70C]
load tmp1, loc_41B70C, 4
FMUL_FLOAT tmp1

;fmul dword [loc_455D34]
load tmp1, loc_455D34, 4
FMUL_FLOAT tmp1

;fmul dword [loc_41B718]
load tmp1, loc_41B718, 4
FMUL_FLOAT tmp1

;fmul dword [loc_4181E0]
load tmp1, loc_4181E0, 4
FMUL_FLOAT tmp1

;fst dword [edi+0xb0]
FST_FLOAT
add tmpadr, edi, 176
store tmp0, tmpadr, 1

;cmp [eax+0x1c], ebx
add tmpadr, eax, 28
load tmp1, tmpadr, 1
cmoveq tmp1, ebx, tmpcnd, 0, 1

;jz short loc_409576
ctcallz tmpcnd, loc_409576

tcall loc_40955C
endp

proc loc_40955C
;fmul dword [loc_41B710]
load tmp1, loc_41B710, 4
FMUL_FLOAT tmp1

;fstp dword [edi+0xb0]
FSTP_FLOAT
add tmpadr, edi, 176
store tmp0, tmpadr, 1

;jmp short loc_409578
tcall loc_409578
endp

proc loc_40956A
;mov eax, [esp+0x14]
add tmpadr, esp, 20
load eax, tmpadr, 4

;mov [edi+0xb0], ebx
add tmpadr, edi, 176
store ebx, tmpadr, 1

;jmp short loc_409578
tcall loc_409578
endp

proc loc_409576
;fstp st0
FSTP_ST 0

tcall loc_409578
endp

proc loc_409578
;cmp [loc_455D14], ebx
load tmp1, loc_455D14, 4
cmoveq tmp1, ebx, tmpcnd, 0, 1

;jz short loc_4095AC
ctcallz tmpcnd, loc_4095AC

tcall loc_409580
endp

proc loc_409580
;xor ecx, ecx
xor ecx, ecx, ecx

;mov cl, [esi+0x40]
add tmpadr, esi, 64
load8z tmp0, tmpadr, 1
and ecx, ecx, 0xffffff00
or ecx, ecx, tmp0

;mov [esp+0x48], ecx
add tmpadr, esp, 72
store ecx, tmpadr, 4

;fild dword [esp+0x48]
add tmpadr, esp, 72
load tmp1, tmpadr, 4
FILD_INT32 tmp1

;fmul dword [loc_4181E0]
load tmp1, loc_4181E0, 4
FMUL_FLOAT tmp1

;fld dword [loc_44587C]
load tmp1, loc_44587C, 4
FLD_FLOAT tmp1

;fmul dword [eax+0x50]
add tmpadr, eax, 80
load tmp1, tmpadr, 1
FMUL_FLOAT tmp1

;faddp st1, st0
FADDP_ST 1

;fmul dword [loc_41B714]
load tmp1, loc_41B714, 4
FMUL_FLOAT tmp1

;fmul dword [loc_41B718]
load tmp1, loc_41B718, 4
FMUL_FLOAT tmp1

;jmp short loc_4095B2
tcall loc_4095B2
endp

proc loc_4095AC
;fld dword [loc_4181E8]
load tmp1, loc_4181E8, 4
FLD_FLOAT tmp1

tcall loc_4095B2
endp

proc loc_4095B2
;fstp dword [edi+0xb4]
FSTP_FLOAT
add tmpadr, edi, 180
store tmp0, tmpadr, 1

;mov al, [esi+0x4a]
add tmpadr, esi, 74
load8z tmp0, tmpadr, 1
and eax, eax, 0xffffff00
or eax, eax, tmp0

;test al, al
and tmpcnd, eax, 0xff

;jz near loc_4096CE
ctcallz tmpcnd, loc_4096CE

tcall loc_4095C3
endp

proc loc_4095C3
;xor eax, eax
xor eax, eax, eax

;mov al, [esi+0x49]
add tmpadr, esi, 73
load8z tmp0, tmpadr, 1
and eax, eax, 0xffffff00
or eax, eax, tmp0

;cmp eax, 0x7
cmovugt eax, 7, tmpcnd, 0, 1

;ja short loc_40961C
ctcallz tmpcnd, loc_40961C

tcall loc_4095CD
endp

proc loc_4095CD
;jmp dword [eax*4+loc_409710]
mov tmpadr, loc_409710
shl tmp0, eax, 2
add tmpadr, tmpadr, tmp0
load tmp1, tmpadr, 4
tcall tmp1
endp

proc loc_4095D4
;mov byte [edi+0xb8], 0x1
add tmpadr, edi, 184
mov tmp1, 0x1
store8 tmp1, tmpadr, 1

;jmp short loc_409623
tcall loc_409623
endp

proc loc_4095DD
;mov byte [edi+0xb8], 0x2
add tmpadr, edi, 184
mov tmp1, 0x2
store8 tmp1, tmpadr, 1

;jmp short loc_409623
tcall loc_409623
endp

proc loc_4095E6
;mov byte [edi+0xb8], 0x3
add tmpadr, edi, 184
mov tmp1, 0x3
store8 tmp1, tmpadr, 1

;jmp short loc_409623
tcall loc_409623
endp

proc loc_4095EF
;mov byte [edi+0xb8], 0x4
add tmpadr, edi, 184
mov tmp1, 0x4
store8 tmp1, tmpadr, 1

;jmp short loc_409623
tcall loc_409623
endp

proc loc_4095F8
;mov byte [edi+0xb8], 0x5
add tmpadr, edi, 184
mov tmp1, 0x5
store8 tmp1, tmpadr, 1

;jmp short loc_409623
tcall loc_409623
endp

proc loc_409601
;mov byte [edi+0xb8], 0x6
add tmpadr, edi, 184
mov tmp1, 0x6
store8 tmp1, tmpadr, 1

;jmp short loc_409623
tcall loc_409623
endp

proc loc_40960A
;mov byte [edi+0xb8], 0x7
add tmpadr, edi, 184
mov tmp1, 0x7
store8 tmp1, tmpadr, 1

;jmp short loc_409623
tcall loc_409623
endp

proc loc_409613
;mov byte [edi+0xb8], 0x8
add tmpadr, edi, 184
mov tmp1, 0x8
store8 tmp1, tmpadr, 1

;jmp short loc_409623
tcall loc_409623
endp

proc loc_40961C
;mov byte [edi+0xb8], 0x0
add tmpadr, edi, 184
store8 0, tmpadr, 1

tcall loc_409623
endp

proc loc_409623
;xor edx, edx
xor edx, edx, edx

;xor eax, eax
xor eax, eax, eax

;mov dl, [esi+0x4a]
add tmpadr, esi, 74
load8z tmp0, tmpadr, 1
and edx, edx, 0xffffff00
or edx, edx, tmp0

;mov ax, [edx*2+loc_418AAC]
mov tmpadr, loc_418AAC
shl tmp0, edx, 1
add tmpadr, tmpadr, tmp0
load16z tmp0, tmpadr, 2
and eax, eax, 0xffff0000
or eax, eax, tmp0

;lea ecx, [eax+eax*2]
shl tmpadr, eax, 1
add ecx, tmpadr, eax

;shl ecx, 0x4
shl ecx, ecx, 4

;add ecx, eax
add ecx, ecx, eax

;lea ecx, [ecx+ecx*4]
shl tmpadr, ecx, 2
add ecx, tmpadr, ecx

;lea eax, [ecx+ecx*4]
shl tmpadr, ecx, 2
add eax, tmpadr, ecx

;lea eax, [eax+eax*8]
shl tmpadr, eax, 3
add eax, tmpadr, eax

;lea ecx, [eax*4+0x3200]
shl tmpadr, eax, 2
add ecx, tmpadr, 12800

;mov eax, 0x51eb851f
mov eax, 0x51eb851f

;mul ecx
umul eax, edx, eax, ecx

;shr edx, 0xd
lshr edx, edx, 13

;mov [edi+0xba], dx
add tmpadr, edi, 186
store16 edx, tmpadr, 1

;mov edx, [esp+0x18]
add tmpadr, esp, 24
load edx, tmpadr, 4

;movsx eax, byte [esi+0x4c]
add tmpadr, esi, 76
load8s eax, tmpadr, 1

;add edx, 0xffffff3c
add edx, edx, -196

;xor ecx, ecx
xor ecx, ecx, ecx

;mov [esp+0x48], edx
add tmpadr, esp, 72
store edx, tmpadr, 4

;mov cl, [esi+0x4b]
add tmpadr, esi, 75
load8z tmp0, tmpadr, 1
and ecx, ecx, 0xffffff00
or ecx, ecx, tmp0

;fild dword [esp+0x48]
add tmpadr, esp, 72
load tmp1, tmpadr, 4
FILD_INT32 tmp1

;mov [esp+0x48], eax
add tmpadr, esp, 72
store eax, tmpadr, 4

;xor edx, edx
xor edx, edx, edx

;mov dx, [ecx*2+loc_418BAC]
mov tmpadr, loc_418BAC
shl tmp0, ecx, 1
add tmpadr, tmpadr, tmp0
load16z tmp0, tmpadr, 2
and edx, edx, 0xffff0000
or edx, edx, tmp0

;fimul dword [esp+0x48]
add tmpadr, esp, 72
load tmp1, tmpadr, 4
FIMUL_INT32 tmp1

;mov [esp+0x48], edx
add tmpadr, esp, 72
store edx, tmpadr, 4

;fmul dword [loc_419644]
load tmp1, loc_419644, 4
FMUL_FLOAT tmp1

;fsubr dword [loc_4189F4]
load tmp1, loc_4189F4, 4
FSUBR_FLOAT tmp1

;fimul dword [esp+0x48]
add tmpadr, esp, 72
load tmp1, tmpadr, 4
FIMUL_INT32 tmp1

;call _ftol_asm
PUSH loc_4096A1
tcall _ftol_asm
endp

proc loc_4096A1
;and eax, 0xffff
and eax, eax, 0xffff

;lea ecx, [eax+eax*2]
shl tmpadr, eax, 1
add ecx, tmpadr, eax

;shl ecx, 0x4
shl ecx, ecx, 4

;add ecx, eax
add ecx, ecx, eax

;lea ecx, [ecx+ecx*4]
shl tmpadr, ecx, 2
add ecx, tmpadr, ecx

;lea eax, [ecx+ecx*8]
shl tmpadr, ecx, 3
add eax, tmpadr, ecx

;lea ecx, [eax+eax+0x3200]
add tmpadr, eax, eax
add ecx, tmpadr, 12800

;mov eax, 0x51eb851f
mov eax, 0x51eb851f

;mul ecx
umul eax, edx, eax, ecx

;shr edx, 0xd
lshr edx, edx, 13

;mov [edi+0xbc], dx
add tmpadr, edi, 188
store16 edx, tmpadr, 1

;jmp short loc_4096E5
tcall loc_4096E5
endp

proc loc_4096CE
;mov byte [edi+0xb8], 0x0
add tmpadr, edi, 184
store8 0, tmpadr, 1

;mov word [edi+0xba], 0x1
add tmpadr, edi, 186
mov tmp1, 0x1
store16 tmp1, tmpadr, 1

;mov [edi+0xbc], bx
add tmpadr, edi, 188
store16 ebx, tmpadr, 1

tcall loc_4096E5
endp

proc loc_4096E5
;mov edx, [esp+0x40]
add tmpadr, esp, 64
load edx, tmpadr, 4

;pop edi
POP edi

;pop esi
POP esi

;pop ebp
POP ebp

;mov eax, [edx+0x4]
add tmpadr, edx, 4
load eax, tmpadr, 1

;cmp eax, ebx
cmoveq eax, ebx, tmpcnd, 0, 1

;pop ebx
POP ebx

;jz short loc_40970A
ctcallz tmpcnd, loc_40970A

tcall loc_4096F4
endp

proc loc_4096F4
;mov eax, [esp+0x20]
add tmpadr, esp, 32
load eax, tmpadr, 4

;mov ecx, [eax+0x8]
add tmpadr, eax, 8
load ecx, tmpadr, 1

;mov edx, [eax+0x1c]
add tmpadr, eax, 28
load edx, tmpadr, 1

;mov [ecx+0x1c], edx
add tmpadr, ecx, 28
store edx, tmpadr, 1

;mov ecx, [eax+0x8]
add tmpadr, eax, 8
load ecx, tmpadr, 1

;mov edx, [eax+0x20]
add tmpadr, eax, 32
load edx, tmpadr, 1

;mov [ecx+0x20], edx
add tmpadr, ecx, 32
store edx, tmpadr, 1

tcall loc_40970A
endp

proc loc_40970A
;add esp, 0x2c
add esp, esp, 44

;ret 0xc
POP tmp1
add esp, esp, 12
tcall tmp1
endp

proc loc_409730
;mov eax, [ecx]
load eax, ecx, 1

;push ebx
PUSH ebx

;push ebp
PUSH ebp

;push esi
PUSH esi

;mov bl, [eax+0x8]
add tmpadr, eax, 8
load8z tmp0, tmpadr, 1
and ebx, ebx, 0xffffff00
or ebx, ebx, tmp0

;mov esi, edx
mov esi, edx

;xor edx, edx
xor edx, edx, edx

;cmp bl, 0x1
and eflags, eflags, ~ZF
sub tmp1, ebx, 1
and tmp0, tmp1, 0xff
cmovz tmp0, tmp0, ZF, 0
or eflags, eflags, tmp0

;setnz dl
and tmp1, eflags, ZF
cmovz tmp1, tmp1, 1, 0
and edx, edx, 0xffffff00
or edx, edx, tmp1

;inc edx
add edx, edx, 1

;push edi
PUSH edi

;mov [esi], edx
store edx, esi, 1

;mov edx, [eax+0x4]
add tmpadr, eax, 4
load edx, tmpadr, 1

;mov [esi+0x4], edx
add tmpadr, esi, 4
store edx, tmpadr, 1

;mov edx, [eax+0x14]
add tmpadr, eax, 20
load edx, tmpadr, 1

;mov ebp, [eax+0x10]
add tmpadr, eax, 16
load ebp, tmpadr, 1

;mov edi, [esp+0x14]
add tmpadr, esp, 20
load edi, tmpadr, 4

;sub edx, ebp
sub edx, edx, ebp

;mov ebp, [esp+0x18]
add tmpadr, esp, 24
load ebp, tmpadr, 4

;mov [esi+0x8], edx
add tmpadr, esi, 8
store edx, tmpadr, 1

;mov edx, [eax+0x14]
add tmpadr, eax, 20
load edx, tmpadr, 1

;mov [esi+0xc], edx
add tmpadr, esi, 12
store edx, tmpadr, 1

;mov bl, [eax+0xa]
add tmpadr, eax, 10
load8z tmp0, tmpadr, 1
and ebx, ebx, 0xffffff00
or ebx, ebx, tmp0

;xor edx, edx
xor edx, edx, edx

;cmp bl, 0x10
and eflags, eflags, ~ZF
sub tmp1, ebx, 16
and tmp0, tmp1, 0xff
cmovz tmp0, tmp0, ZF, 0
or eflags, eflags, tmp0

;setnz dl
and tmp1, eflags, ZF
cmovz tmp1, tmp1, 1, 0
and edx, edx, 0xffffff00
or edx, edx, tmp1

;mov [esi+0x10], dx
add tmpadr, esi, 16
store16 edx, tmpadr, 1

;xor edx, edx
xor edx, edx, edx

;mov dl, [eax+0x9]
add tmpadr, eax, 9
load8z tmp0, tmpadr, 1
and edx, edx, 0xffffff00
or edx, edx, tmp0

;and edi, 0xff
and edi, edi, 0xff

;sub edi, edx
sub edi, edi, edx

;movsx edx, byte [ecx+0x4]
add tmpadr, ecx, 4
load8s edx, tmpadr, 1

;mov [esp+0x14], edi
add tmpadr, esp, 20
store edi, tmpadr, 4

;fild dword [esp+0x14]
add tmpadr, esp, 20
load tmp1, tmpadr, 4
FILD_INT32 tmp1

;mov [esp+0x14], edx
add tmpadr, esp, 20
store edx, tmpadr, 4

;movsx edx, byte [ecx+0x6]
add tmpadr, ecx, 6
load8s edx, tmpadr, 1

;fmul dword [loc_4181EC]
load tmp1, loc_4181EC, 4
FMUL_FLOAT tmp1

;fild dword [esp+0x14]
add tmpadr, esp, 20
load tmp1, tmpadr, 4
FILD_INT32 tmp1

;mov [esp+0x14], edx
add tmpadr, esp, 20
store edx, tmpadr, 4

;movsx edx, byte [ecx+0x5]
add tmpadr, ecx, 5
load8s edx, tmpadr, 1

;fmul dword [loc_419660]
load tmp1, loc_419660, 4
FMUL_FLOAT tmp1

;fmulp st1, st0
FMULP_ST 1

;fild dword [esp+0x14]
add tmpadr, esp, 20
load tmp1, tmpadr, 4
FILD_INT32 tmp1

;mov [esp+0x14], edx
add tmpadr, esp, 20
store edx, tmpadr, 4

;fmul dword [loc_4189C8]
load tmp1, loc_4189C8, 4
FMUL_FLOAT tmp1

;faddp st1, st0
FADDP_ST 1

;fild dword [esp+0x14]
add tmpadr, esp, 20
load tmp1, tmpadr, 4
FILD_INT32 tmp1

;fmul dword [loc_4181EC]
load tmp1, loc_4181EC, 4
FMUL_FLOAT tmp1

;faddp st1, st0
FADDP_ST 1

;fstp dword [esi+0x14]
FSTP_FLOAT
add tmpadr, esi, 20
store tmp0, tmpadr, 1

;movsx edx, byte [eax+0xb]
add tmpadr, eax, 11
load8s edx, tmpadr, 1

;mov [esp+0x14], edx
add tmpadr, esp, 20
store edx, tmpadr, 4

;xor edx, edx
xor edx, edx, edx

;fild dword [esp+0x14]
add tmpadr, esp, 20
load tmp1, tmpadr, 4
FILD_INT32 tmp1

;fmul dword [loc_4189C8]
load tmp1, loc_4189C8, 4
FMUL_FLOAT tmp1

;fstp dword [esi+0x18]
FSTP_FLOAT
add tmpadr, esi, 24
store tmp0, tmpadr, 1

;mov ax, [eax+0xc]
add tmpadr, eax, 12
load16z tmp0, tmpadr, 1
and eax, eax, 0xffff0000
or eax, eax, tmp0

;mov [esi+0x12], ax
add tmpadr, esi, 18
store16 eax, tmpadr, 1

;mov dl, [ecx+0x7]
add tmpadr, ecx, 7
load8z tmp0, tmpadr, 1
and edx, edx, 0xffffff00
or edx, edx, tmp0

;mov [esp+0x14], edx
add tmpadr, esp, 20
store edx, tmpadr, 4

;mov dl, [ecx+0x9]
add tmpadr, ecx, 9
load8z tmp0, tmpadr, 1
and edx, edx, 0xffffff00
or edx, edx, tmp0

;fild dword [esp+0x14]
add tmpadr, esp, 20
load tmp1, tmpadr, 4
FILD_INT32 tmp1

;test dl, dl
and tmp1, edx, edx
and eflags, eflags, ~ZF
and tmp0, tmp1, 0xff
cmovz tmp0, tmp0, ZF, 0
or eflags, eflags, tmp0

;fmul dword [loc_4181E0]
load tmp1, loc_4181E0, 4
FMUL_FLOAT tmp1

;jz short loc_40983D
and tmp1, eflags, ZF
ctcallnz tmp1, loc_40983D

tcall loc_409805
endp

proc loc_409805
;xor eax, eax
xor eax, eax, eax

;and edx, 0xff
and edx, edx, 0xff

;mov al, [ecx+0x8]
add tmpadr, ecx, 8
load8z tmp0, tmpadr, 1
and eax, eax, 0xffffff00
or eax, eax, tmp0

;mov [esp+0x18], edx
add tmpadr, esp, 24
store edx, tmpadr, 4

;mov edi, eax
mov edi, eax

;mov eax, ebp
mov eax, ebp

;and eax, 0xff
and eax, eax, 0xff

;add edx, edi
add edx, edx, edi

;cmp edx, eax
cmovsgt edx, eax, tmpcnd, 0, 1

;jle short loc_40983D
ctcallnz tmpcnd, loc_40983D

tcall loc_409823
endp

proc loc_409823
;sub eax, edi
sub eax, eax, edi

;pop edi
POP edi

;mov [esp+0x10], eax
add tmpadr, esp, 16
store eax, tmpadr, 4

;fild dword [esp+0x10]
add tmpadr, esp, 16
load tmp1, tmpadr, 4
FILD_INT32 tmp1

;fidiv dword [esp+0x14]
add tmpadr, esp, 20
load tmp1, tmpadr, 4
FIDIV_INT32 tmp1

;fmulp st1, st0
FMULP_ST 1

;fstp dword [esi+0x1c]
FSTP_FLOAT
add tmpadr, esi, 28
store tmp0, tmpadr, 1

;pop esi
POP esi

;pop ebp
POP ebp

;pop ebx
POP ebx

;ret 0x8
POP tmp1
add esp, esp, 8
tcall tmp1
endp

proc loc_40983D
;mov dl, [ecx+0xb]
add tmpadr, ecx, 11
load8z tmp0, tmpadr, 1
and edx, edx, 0xffffff00
or edx, edx, tmp0

;test dl, dl
and tmpcnd, edx, 0xff

;jz short loc_409872
ctcallz tmpcnd, loc_409872

tcall loc_409844
endp

proc loc_409844
;xor eax, eax
xor eax, eax, eax

;and edx, 0xff
and edx, edx, 0xff

;mov al, [ecx+0xa]
add tmpadr, ecx, 10
load8z tmp0, tmpadr, 1
and eax, eax, 0xffffff00
or eax, eax, tmp0

;mov [esp+0x18], edx
add tmpadr, esp, 24
store edx, tmpadr, 4

;mov ecx, eax
mov ecx, eax

;mov eax, ebp
mov eax, ebp

;and eax, 0xff
and eax, eax, 0xff

;add edx, ecx
add edx, edx, ecx

;cmp edx, eax
cmovsgt edx, eax, tmpcnd, 0, 1

;jle short loc_409872
ctcallnz tmpcnd, loc_409872

tcall loc_409862
endp

proc loc_409862
;sub ecx, eax
sub ecx, ecx, eax

;mov [esp+0x14], ecx
add tmpadr, esp, 20
store ecx, tmpadr, 4

;fild dword [esp+0x14]
add tmpadr, esp, 20
load tmp1, tmpadr, 4
FILD_INT32 tmp1

;fidiv dword [esp+0x18]
add tmpadr, esp, 24
load tmp1, tmpadr, 4
FIDIV_INT32 tmp1

;fmulp st1, st0
FMULP_ST 1

tcall loc_409872
endp

proc loc_409872
;fstp dword [esi+0x1c]
FSTP_FLOAT
add tmpadr, esi, 28
store tmp0, tmpadr, 1

;pop edi
POP edi

;pop esi
POP esi

;pop ebp
POP ebp

;pop ebx
POP ebx

;ret 0x8
POP tmp1
add esp, esp, 8
tcall tmp1
endp

proc loc_409880
;sub esp, 0x8
sub esp, esp, 8

;xor eax, eax
xor eax, eax, eax

;push esi
PUSH esi

;mov esi, [edx+0x20]
add tmpadr, edx, 32
load esi, tmpadr, 1

;push edi
PUSH edi

;mov edi, [esp+0x14]
add tmpadr, esp, 20
load edi, tmpadr, 4

;mov al, [edi+0x18]
add tmpadr, edi, 24
load8z tmp0, tmpadr, 1
and eax, eax, 0xffffff00
or eax, eax, tmp0

;mov al, [eax+esi+0x104]
add tmpadr, eax, esi
add tmpadr, tmpadr, 260
load8z tmp0, tmpadr, 1
and eax, eax, 0xffffff00
or eax, eax, tmp0

;cmp al, 0xff
sub tmp1, eax, -1
and tmpcnd, tmp1, 0xff

;jz short loc_4098AF
ctcallz tmpcnd, loc_4098AF

tcall loc_40989C
endp

proc loc_40989C
;movsx eax, al
ext8s eax, eax

;mov [esp+0x14], eax
add tmpadr, esp, 20
store eax, tmpadr, 4

;fild dword [esp+0x14]
add tmpadr, esp, 20
load tmp1, tmpadr, 4
FILD_INT32 tmp1

;fmul dword [loc_419640]
load tmp1, loc_419640, 4
FMUL_FLOAT tmp1

;jmp short loc_4098C4
tcall loc_4098C4
endp

proc loc_4098AF
;mov eax, [edi+0x14]
add tmpadr, edi, 20
load eax, tmpadr, 1

;movsx eax, byte [eax+0x36]
add tmpadr, eax, 54
load8s eax, tmpadr, 1

;mov [esp+0x14], eax
add tmpadr, esp, 20
store eax, tmpadr, 4

;fild dword [esp+0x14]
add tmpadr, esp, 20
load tmp1, tmpadr, 4
FILD_INT32 tmp1

;fmul dword [loc_419668]
load tmp1, loc_419668, 4
FMUL_FLOAT tmp1

tcall loc_4098C4
endp

proc loc_4098C4
;movsx edx, byte [edx+0x54]
add tmpadr, edx, 84
load8s edx, tmpadr, 1

;mov [esp+0x14], edx
add tmpadr, esp, 20
store edx, tmpadr, 4

;pop edi
POP edi

;fild dword [esp+0x10]
add tmpadr, esp, 16
load tmp1, tmpadr, 4
FILD_INT32 tmp1

;pop esi
POP esi

;fmul dword [loc_419640]
load tmp1, loc_419640, 4
FMUL_FLOAT tmp1

;fadd st0, st1
FADD_ST 1

;fstp dword [esp+0xc]
FSTP_FLOAT
add tmpadr, esp, 12
store tmp0, tmpadr, 4

;fstp st0
FSTP_ST 0

;fld dword [esp+0xc]
add tmpadr, esp, 12
load tmp1, tmpadr, 4
FLD_FLOAT tmp1

;fcomp dword [loc_4181E8]
load tmp1, loc_4181E8, 4
FCOMP_FLOAT tmp1

;fnstsw ax
FNSTSW_VOID
and eax, eax, 0xffff0000
or eax, eax, tmp0

;test ah, 0x1
and tmpcnd, eax, 0x100

;jz short loc_40991C
ctcallz tmpcnd, loc_40991C

tcall loc_4098F1
endp

proc loc_4098F1
;fld dword [loc_4189F4]
load tmp1, loc_4189F4, 4
FLD_FLOAT tmp1

;fld dword [esp+0xc]
add tmpadr, esp, 12
load tmp1, tmpadr, 4
FLD_FLOAT tmp1

;fadd dword [loc_4189F4]
load tmp1, loc_4189F4, 4
FADD_FLOAT tmp1

;fst dword [esp+0x4]
FST_FLOAT
add tmpadr, esp, 4
store tmp0, tmpadr, 4

;fcomp dword [loc_4181E8]
load tmp1, loc_4181E8, 4
FCOMP_FLOAT tmp1

;fnstsw ax
FNSTSW_VOID
and eax, eax, 0xffff0000
or eax, eax, tmp0

;test ah, 0x1
and tmpcnd, eax, 0x100

;jz short loc_409945
ctcallz tmpcnd, loc_409945

tcall loc_409912
endp

proc loc_409912
;mov dword [esp+0x4], 0x0
add tmpadr, esp, 4
store 0, tmpadr, 4

;jmp short loc_409945
tcall loc_409945
endp

proc loc_40991C
;fld dword [loc_4189F4]
load tmp1, loc_4189F4, 4
FLD_FLOAT tmp1

;fsub dword [esp+0xc]
add tmpadr, esp, 12
load tmp1, tmpadr, 4
FSUB_FLOAT tmp1

;mov dword [esp+0x4], 0x3f800000
add tmpadr, esp, 4
mov tmp1, 0x3f800000
store tmp1, tmpadr, 4

;fld st0
FLD_ST 0

;fcomp dword [loc_4181E8]
load tmp1, loc_4181E8, 4
FCOMP_FLOAT tmp1

;fnstsw ax
FNSTSW_VOID
and eax, eax, 0xffff0000
or eax, eax, tmp0

;test ah, 0x1
and tmpcnd, eax, 0x100

;jz short loc_409945
ctcallz tmpcnd, loc_409945

tcall loc_40993D
endp

proc loc_40993D
;fstp st0
FSTP_ST 0

;fld dword [loc_4181E8]
load tmp1, loc_4181E8, 4
FLD_FLOAT tmp1

tcall loc_409945
endp

proc loc_409945
;mov eax, [esp+0x10]
add tmpadr, esp, 16
load eax, tmpadr, 4

;test eax, eax
mov tmpcnd, eax

;jz short loc_409975
ctcallz tmpcnd, loc_409975

tcall loc_40994D
endp

proc loc_40994D
;fsub dword [ecx+0xc]
add tmpadr, ecx, 12
load tmp1, tmpadr, 1
FSUB_FLOAT tmp1

;mov dword [ecx], 0xa
mov tmp1, 0xa
store tmp1, ecx, 1

;fmul dword [loc_419664]
load tmp1, loc_419664, 4
FMUL_FLOAT tmp1

;fstp dword [ecx+0x4]
FSTP_FLOAT
add tmpadr, ecx, 4
store tmp0, tmpadr, 1

;fld dword [esp+0x4]
add tmpadr, esp, 4
load tmp1, tmpadr, 4
FLD_FLOAT tmp1

;fsub dword [ecx+0x10]
add tmpadr, ecx, 16
load tmp1, tmpadr, 1
FSUB_FLOAT tmp1

;fmul dword [loc_419664]
load tmp1, loc_419664, 4
FMUL_FLOAT tmp1

;fstp dword [ecx+0x8]
FSTP_FLOAT
add tmpadr, ecx, 8
store tmp0, tmpadr, 1

;add esp, 0x8
add esp, esp, 8

;ret 0x8
POP tmp1
add esp, esp, 8
tcall tmp1
endp

proc loc_409975
;mov eax, [esp+0x4]
add tmpadr, esp, 4
load eax, tmpadr, 4

;mov dword [ecx], 0x0
store 0, ecx, 1

;fstp dword [ecx+0xc]
FSTP_FLOAT
add tmpadr, ecx, 12
store tmp0, tmpadr, 1

;mov [ecx+0x10], eax
add tmpadr, ecx, 16
store eax, tmpadr, 1

;add esp, 0x8
add esp, esp, 8

;ret 0x8
POP tmp1
add esp, esp, 8
tcall tmp1
endp

proc loc_409990
;mov eax, [edx+0x14]
add tmpadr, edx, 20
load eax, tmpadr, 1

;movsx ecx, byte [ecx+0x56]
add tmpadr, ecx, 86
load8s ecx, tmpadr, 1

;movsx eax, byte [eax+0x22]
add tmpadr, eax, 34
load8s eax, tmpadr, 1

;add eax, ecx
add eax, eax, ecx
cmovslt eax, 0, tmpcnd, 0, 1

;jns short loc_4099AC
ctcallnz tmpcnd, loc_4099AC

tcall loc_40999F
endp

proc loc_40999F
;xor eax, eax
xor eax, eax, eax

;fld dword [eax*4+loc_4193AC]
mov tmpadr, loc_4193AC
shl tmp0, eax, 2
add tmpadr, tmpadr, tmp0
load tmp1, tmpadr, 4
FLD_FLOAT tmp1

;fmul dword [edx+0x28]
add tmpadr, edx, 40
load tmp1, tmpadr, 1
FMUL_FLOAT tmp1

;ret
POP tmp1
tcall tmp1
endp

proc loc_4099AC
;cmp eax, 0x7f
cmovsgt eax, 127, tmpcnd, 0, 1

;jle short loc_4099B6
ctcallnz tmpcnd, loc_4099B6

tcall loc_4099B1
endp

proc loc_4099B1
;mov eax, 0x7f
mov eax, 0x7f

tcall loc_4099B6
endp

proc loc_4099B6
;fld dword [eax*4+loc_4193AC]
mov tmpadr, loc_4193AC
shl tmp0, eax, 2
add tmpadr, tmpadr, tmp0
load tmp1, tmpadr, 4
FLD_FLOAT tmp1

;fmul dword [edx+0x28]
add tmpadr, edx, 40
load tmp1, tmpadr, 1
FMUL_FLOAT tmp1

;ret
POP tmp1
tcall tmp1
endp

proc InitializeDataFile_asm global c_InitializeDataFile_asm
;mov eax, [loc_455FEC]
load eax, loc_455FEC, 4

;test eax, eax
mov tmpcnd, eax

;jnz short loc_409C2E
ctcallnz tmpcnd, loc_409C2E

tcall loc_409C29
endp

proc loc_409C29
;jmp loc_4056C0
tcall loc_4056C0
endp

proc loc_409C2E
;xor eax, eax
xor eax, eax, eax

;ret
POP tmp1
tcall tmp1
endp

proc InitializeSynth_asm global c_InitializeSynth_asm
;mov eax, [loc_455FEC]
load eax, loc_455FEC, 4

;mov [loc_41B72C], ecx
store ecx, loc_41B72C, 4

;test eax, eax
mov tmpcnd, eax

;mov [loc_41B730], edx
store edx, loc_41B730, 4

;jnz short loc_409CA6
ctcallnz tmpcnd, loc_409CA6

tcall loc_409C65
endp

proc loc_409C65
;call loc_405990
PUSH loc_409C6A
tcall loc_405990
endp

proc loc_409C6A
;mov ecx, [loc_41B730]
load ecx, loc_41B730, 4

;call loc_401000
PUSH loc_409C75
tcall loc_401000
endp

proc loc_409C75
;mov eax, [loc_41B738]
load eax, loc_41B738, 4

;mov ecx, [loc_41B734]
load ecx, loc_41B734, 4

;push eax
PUSH eax

;push ecx
PUSH ecx

;mov ecx, [loc_41B72C]
load ecx, loc_41B72C, 4

;mov edx, 0x1
mov edx, 0x1

;call loc_407B20
PUSH loc_409C92
tcall loc_407B20
endp

proc loc_409C92
;mov eax, 0x1
mov eax, 0x1

;mov dword [loc_41B728], 0xffffffff
mov tmp1, 0xffffffff
store tmp1, loc_41B728, 4

;mov [loc_455FEC], eax
store eax, loc_455FEC, 4

tcall loc_409CA6
endp

proc loc_409CA6
;mov dword [loc_455D10], 0x1
mov tmp1, 0x1
store tmp1, loc_455D10, 4

;mov dword [loc_455D14], 0x1
mov tmp1, 0x1
store tmp1, loc_455D14, 4

;ret 0x4
POP tmp1
add esp, esp, 4
tcall tmp1
endp

proc MidiMessageShort_asm global c_MidiMessageShort_asm
;mov eax, [loc_455FEC]
load eax, loc_455FEC, 4

;sub esp, 0x8
sub esp, esp, 8

;test eax, eax
mov tmpcnd, eax

;jz near loc_40A110
ctcallz tmpcnd, loc_40A110

tcall loc_409CF0
endp

proc loc_409CF0
;mov eax, [loc_41B728]
load eax, loc_41B728, 4

;inc eax
add eax, eax, 1
mov tmpcnd, eax

;mov [loc_41B728], eax
store eax, loc_41B728, 4

;jnz near loc_40A10A
ctcallnz tmpcnd, loc_40A10A

tcall loc_409D01
endp

proc loc_409D01
;and ecx, 0x7f7fff
and ecx, ecx, 0x7f7fff

;push ebx
PUSH ebx

;mov [esp+0x4], ecx
add tmpadr, esp, 4
store ecx, tmpadr, 4

;and ecx, 0xff
and ecx, ecx, 0xff

;mov eax, ecx
mov eax, ecx

;and ecx, 0xf0
and ecx, ecx, 0xf0

;add ecx, 0xffffff80
add ecx, ecx, -128

;and eax, 0xf
and eax, eax, 0xf

;cmp ecx, 0x60
cmovugt ecx, 96, tmpcnd, 0, 1

;push esi
PUSH esi

;ja near loc_40A0F4
ctcallz tmpcnd, loc_40A0F4

tcall loc_409D2A
endp

proc loc_409D2A
;mov edx, [esp+0x9]
add tmpadr, esp, 9
load edx, tmpadr, 1

;xor ebx, ebx
xor ebx, ebx, ebx

;mov bl, [ecx+loc_40A134]
mov tmpadr, loc_40A134
add tmpadr, tmpadr, ecx
load8z tmp0, tmpadr, 1
and ebx, ebx, 0xffffff00
or ebx, ebx, tmp0

;jmp dword [ebx*4+loc_40A118]
mov tmpadr, loc_40A118
shl tmp0, ebx, 2
add tmpadr, tmpadr, tmp0
load tmp1, tmpadr, 4
tcall tmp1
endp

proc loc_409D3D
;test dh, dh
and tmpcnd, edx, 0xff00

;jz short loc_409D64
ctcallz tmpcnd, loc_409D64

tcall loc_409D41
endp

proc loc_409D41
;mov ecx, [esp+0xa]
add tmpadr, esp, 10
load ecx, tmpadr, 2

;lea eax, [eax+eax*2]
shl tmpadr, eax, 1
add eax, tmpadr, eax

;push ecx
PUSH ecx

;mov dword [loc_455FF0], 0x1
mov tmp1, 0x1
store tmp1, loc_455FF0, 4

;mov ecx, [eax*4+loc_42B948]
mov tmpadr, loc_42B948
shl tmp0, eax, 2
add tmpadr, tmpadr, tmp0
load ecx, tmpadr, 4

;call loc_401080
PUSH loc_409D5F
tcall loc_401080
endp

proc loc_409D5F
;jmp loc_40A0F4
tcall loc_40A0F4
endp

proc loc_409D64
;lea ecx, [eax+eax*2]
shl tmpadr, eax, 1
add ecx, tmpadr, eax

;mov dword [loc_455FF0], 0x1
mov tmp1, 0x1
store tmp1, loc_455FF0, 4

;mov ecx, [ecx*4+loc_42B948]
mov tmpadr, loc_42B948
shl tmp0, ecx, 2
add tmpadr, tmpadr, tmp0
load ecx, tmpadr, 4

;call loc_401440
PUSH loc_409D7D
tcall loc_401440
endp

proc loc_409D7D
;jmp loc_40A0F4
tcall loc_40A0F4
endp

proc loc_409D82
;mov edx, [esp+0x9]
add tmpadr, esp, 9
load edx, tmpadr, 1

;lea esi, [eax+eax*2]
shl tmpadr, eax, 1
add esi, tmpadr, eax

;mov eax, edx
mov eax, edx

;and eax, 0xff
and eax, eax, 0xff

;cmp eax, 0x7f
cmovugt eax, 127, tmpcnd, 0, 1

;ja near loc_40A0F4
ctcallz tmpcnd, loc_40A0F4

tcall loc_409D99
endp

proc loc_409D99
;xor ecx, ecx
xor ecx, ecx, ecx

;mov cl, [eax+loc_40A1E0]
mov tmpadr, loc_40A1E0
add tmpadr, tmpadr, eax
load8z tmp0, tmpadr, 1
and ecx, ecx, 0xffffff00
or ecx, ecx, tmp0

;jmp dword [ecx*4+loc_40A198]
mov tmpadr, loc_40A198
shl tmp0, ecx, 2
add tmpadr, tmpadr, tmp0
load tmp1, tmpadr, 4
tcall tmp1
endp

proc loc_409DA8
;mov ecx, [esi*4+loc_42B948]
mov tmpadr, loc_42B948
shl tmp0, esi, 2
add tmpadr, tmpadr, tmp0
load ecx, tmpadr, 4

;mov dl, dh
ins8lh edx, edx, edx

;call loc_406020
PUSH loc_409DB6
tcall loc_406020
endp

proc loc_409DB6
;jmp loc_40A0F4
tcall loc_40A0F4
endp

proc loc_409DBB
;mov ecx, [esi*4+loc_42B948]
mov tmpadr, loc_42B948
shl tmp0, esi, 2
add tmpadr, tmpadr, tmp0
load ecx, tmpadr, 4

;mov dl, dh
ins8lh edx, edx, edx

;call loc_4060C0
PUSH loc_409DC9
tcall loc_4060C0
endp

proc loc_409DC9
;jmp loc_40A0F4
tcall loc_40A0F4
endp

proc loc_409DCE
;mov ecx, [esi*4+loc_42B948]
mov tmpadr, loc_42B948
shl tmp0, esi, 2
add tmpadr, tmpadr, tmp0
load ecx, tmpadr, 4

;mov dl, dh
ins8lh edx, edx, edx

;call loc_406130
PUSH loc_409DDC
tcall loc_406130
endp

proc loc_409DDC
;jmp loc_40A0F4
tcall loc_40A0F4
endp

proc loc_409DE1
;mov ecx, [esi*4+loc_42B948]
mov tmpadr, loc_42B948
shl tmp0, esi, 2
add tmpadr, tmpadr, tmp0
load ecx, tmpadr, 4

;mov eax, [ecx+0x1c]
add tmpadr, ecx, 28
load eax, tmpadr, 1

;test eax, eax
mov tmpcnd, eax

;jnz near loc_40A0F4
ctcallnz tmpcnd, loc_40A0F4

tcall loc_409DF3
endp

proc loc_409DF3
;mov dl, dh
ins8lh edx, edx, edx

;call loc_401590
PUSH loc_409DFA
tcall loc_401590
endp

proc loc_409DFA
;jmp loc_40A0F4
tcall loc_40A0F4
endp

proc loc_409DFF
;mov ecx, [esi*4+loc_42B948]
mov tmpadr, loc_42B948
shl tmp0, esi, 2
add tmpadr, tmpadr, tmp0
load ecx, tmpadr, 4

;mov dl, dh
ins8lh edx, edx, edx

;call loc_4061D0
PUSH loc_409E0D
tcall loc_4061D0
endp

proc loc_409E0D
;jmp loc_40A0F4
tcall loc_40A0F4
endp

proc loc_409E12
;mov edx, [esp+0xa]
add tmpadr, esp, 10
load edx, tmpadr, 2

;mov eax, [esi*4+loc_42B948]
mov tmpadr, loc_42B948
shl tmp0, esi, 2
add tmpadr, tmpadr, tmp0
load eax, tmpadr, 4

;and edx, 0xff
and edx, edx, 0xff

;mov [esp+0x8], edx
add tmpadr, esp, 8
store edx, tmpadr, 4

;fild dword [esp+0x8]
add tmpadr, esp, 8
load tmp1, tmpadr, 4
FILD_INT32 tmp1

;fmul dword [loc_4189B8]
load tmp1, loc_4189B8, 4
FMUL_FLOAT tmp1

;fstp dword [eax+0x4c]
FSTP_FLOAT
add tmpadr, eax, 76
store tmp0, tmpadr, 1

;jmp loc_40A0F4
tcall loc_40A0F4
endp

proc loc_409E39
;mov ecx, [esp+0xa]
add tmpadr, esp, 10
load ecx, tmpadr, 2

;mov edx, [esi*4+loc_42B948]
mov tmpadr, loc_42B948
shl tmp0, esi, 2
add tmpadr, tmpadr, tmp0
load edx, tmpadr, 4

;and ecx, 0xff
and ecx, ecx, 0xff

;mov [esp+0x8], ecx
add tmpadr, esp, 8
store ecx, tmpadr, 4

;fild dword [esp+0x8]
add tmpadr, esp, 8
load tmp1, tmpadr, 4
FILD_INT32 tmp1

;fmul dword [loc_4181E0]
load tmp1, loc_4181E0, 4
FMUL_FLOAT tmp1

;fstp dword [edx+0x50]
FSTP_FLOAT
add tmpadr, edx, 80
store tmp0, tmpadr, 1

;jmp loc_40A0F4
tcall loc_40A0F4
endp

proc loc_409E60
;mov ecx, [esi*4+loc_42B948]
mov tmpadr, loc_42B948
shl tmp0, esi, 2
add tmpadr, tmpadr, tmp0
load ecx, tmpadr, 4

;call loc_405DD0
PUSH loc_409E6C
tcall loc_405DD0
endp

proc loc_409E6C
;jmp loc_40A0F4
tcall loc_40A0F4
endp

proc loc_409E71
;mov ecx, [esi*4+loc_42B948]
mov tmpadr, loc_42B948
shl tmp0, esi, 2
add tmpadr, tmpadr, tmp0
load ecx, tmpadr, 4

;call loc_4015F0
PUSH loc_409E7D
tcall loc_4015F0
endp

proc loc_409E7D
;jmp loc_40A0F4
tcall loc_40A0F4
endp

proc loc_409E82
;mov ecx, [esi*4+loc_42B948]
mov tmpadr, loc_42B948
shl tmp0, esi, 2
add tmpadr, tmpadr, tmp0
load ecx, tmpadr, 4

;call loc_401680
PUSH loc_409E8E
tcall loc_401680
endp

proc loc_409E8E
;jmp loc_40A0F4
tcall loc_40A0F4
endp

proc loc_409E93
;mov eax, [esi*4+loc_42B948]
mov tmpadr, loc_42B948
shl tmp0, esi, 2
add tmpadr, tmpadr, tmp0
load eax, tmpadr, 4

;mov [eax+0x5d], dh
add tmpadr, eax, 93
lshr tmp0, edx, 8
store8 tmp0, tmpadr, 1

;jmp loc_40A0F4
tcall loc_40A0F4
endp

proc loc_409EA2
;mov word [esi*4+loc_42B94E], 0x3fff
mov tmpadr, loc_42B94E
shl tmp0, esi, 2
add tmpadr, tmpadr, tmp0
mov tmp1, 0x3fff
store16 tmp1, tmpadr, 2

;lea eax, [esi*4+loc_42B94C]
mov tmpadr, loc_42B94C
shl tmp0, esi, 2
add eax, tmpadr, tmp0

tcall loc_409EB3
endp

proc loc_409EB3
;mov dl, dh
ins8lh edx, edx, edx

;xor ecx, ecx
xor ecx, ecx, ecx

;and dl, 0x7f
and edx, edx, 0xffffff7f

;mov ch, dl
ins8hl ecx, ecx, edx

;mov dl, [eax]
load8z tmp0, eax, 1
and edx, edx, 0xffffff00
or edx, edx, tmp0

;and edx, 0x7f
and edx, edx, 0x7f

;or ecx, edx
or ecx, ecx, edx

;mov [eax], cx
store16 ecx, eax, 1

;jmp loc_40A0F4
tcall loc_40A0F4
endp

proc loc_409ECB
;mov dl, dh
ins8lh edx, edx, edx

;lea eax, [esi*4+loc_42B94C]
mov tmpadr, loc_42B94C
shl tmp0, esi, 2
add eax, tmpadr, tmp0

;and dl, 0x7f
and edx, edx, 0xffffff7f

;xor cx, cx
and ecx, ecx, 0xffff0000

;mov cl, dl
ins8ll ecx, ecx, edx

;mov dx, [eax]
load16z tmp0, eax, 1
and edx, edx, 0xffff0000
or edx, edx, tmp0

;and edx, 0x7f00
and edx, edx, 0x7f00

;mov word [esi*4+loc_42B94E], 0x3fff
mov tmpadr, loc_42B94E
shl tmp0, esi, 2
add tmpadr, tmpadr, tmp0
mov tmp1, 0x3fff
store16 tmp1, tmpadr, 2

;or ecx, edx
or ecx, ecx, edx

;mov [eax], cx
store16 ecx, eax, 1

;jmp loc_40A0F4
tcall loc_40A0F4
endp

proc loc_409EF9
;mov word [esi*4+loc_42B94C], 0x3fff
mov tmpadr, loc_42B94C
shl tmp0, esi, 2
add tmpadr, tmpadr, tmp0
mov tmp1, 0x3fff
store16 tmp1, tmpadr, 4

;lea eax, [esi*4+loc_42B94E]
mov tmpadr, loc_42B94E
shl tmp0, esi, 2
add eax, tmpadr, tmp0

;jmp short loc_409EB3
tcall loc_409EB3
endp

proc loc_409F0C
;mov dl, dh
ins8lh edx, edx, edx

;lea eax, [esi*4+loc_42B94E]
mov tmpadr, loc_42B94E
shl tmp0, esi, 2
add eax, tmpadr, tmp0

;and dl, 0x7f
and edx, edx, 0xffffff7f

;xor cx, cx
and ecx, ecx, 0xffff0000

;mov cl, dl
ins8ll ecx, ecx, edx

;mov dx, [eax]
load16z tmp0, eax, 1
and edx, edx, 0xffff0000
or edx, edx, tmp0

;and edx, 0x7f00
and edx, edx, 0x7f00

;mov word [esi*4+loc_42B94C], 0x3fff
mov tmpadr, loc_42B94C
shl tmp0, esi, 2
add tmpadr, tmpadr, tmp0
mov tmp1, 0x3fff
store16 tmp1, tmpadr, 4

;or ecx, edx
or ecx, ecx, edx

;mov [eax], cx
store16 ecx, eax, 1

;jmp loc_40A0F4
tcall loc_40A0F4
endp

proc loc_409F3A
;mov dl, dh
ins8lh edx, edx, edx

;lea eax, [esi*4+loc_42B950]
mov tmpadr, loc_42B950
shl tmp0, esi, 2
add eax, tmpadr, tmp0

;and dl, 0x7f
and edx, edx, 0xffffff7f

;xor cx, cx
and ecx, ecx, 0xffff0000

;mov cl, dl
ins8ll ecx, ecx, edx

;mov dx, [eax]
load16z tmp0, eax, 1
and edx, edx, 0xffff0000
or edx, edx, tmp0

;and edx, 0x3f80
and edx, edx, 0x3f80

;or ecx, edx
or ecx, ecx, edx

;mov [eax], cx
store16 ecx, eax, 1

;jmp loc_40A0F4
tcall loc_40A0F4
endp

proc loc_409F5E
;mov al, [esi*4+loc_42B950]
mov tmpadr, loc_42B950
shl tmp0, esi, 2
add tmpadr, tmpadr, tmp0
load8z tmp0, tmpadr, 4
and eax, eax, 0xffffff00
or eax, eax, tmp0

;mov dl, dh
ins8lh edx, edx, edx

;and dl, 0x7f
and edx, edx, 0xffffff7f

;and eax, 0x7f
and eax, eax, 0x7f

;movzx dx, dl
and edx, edx, 0xffff00ff

;shl edx, 0x7
shl edx, edx, 7

;or edx, eax
or edx, edx, eax

;xor eax, eax
xor eax, eax, eax

;mov ax, [esi*4+loc_42B94E]
mov tmpadr, loc_42B94E
shl tmp0, esi, 2
add tmpadr, tmpadr, tmp0
load16z tmp0, tmpadr, 2
and eax, eax, 0xffff0000
or eax, eax, tmp0

;mov [esi*4+loc_42B950], dx
mov tmpadr, loc_42B950
shl tmp0, esi, 2
add tmpadr, tmpadr, tmp0
store16 edx, tmpadr, 4

;sub eax, 0x0
sub eax, eax, 0
mov tmpcnd, eax

;jz short loc_409FAF
ctcallz tmpcnd, loc_409FAF

tcall loc_409F8D
endp

proc loc_409F8D
;dec eax
sub eax, eax, 1
mov tmpcnd, eax

;jz short loc_409FA1
ctcallz tmpcnd, loc_409FA1

tcall loc_409F90
endp

proc loc_409F90
;dec eax
sub eax, eax, 1
mov tmpcnd, eax

;jnz short loc_409FBB
ctcallnz tmpcnd, loc_409FBB

tcall loc_409F93
endp

proc loc_409F93
;mov ecx, [esi*4+loc_42B948]
mov tmpadr, loc_42B948
shl tmp0, esi, 2
add tmpadr, tmpadr, tmp0
load ecx, tmpadr, 4

;call loc_406360
PUSH loc_409F9F
tcall loc_406360
endp

proc loc_409F9F
;jmp short loc_409FBB
tcall loc_409FBB
endp

proc loc_409FA1
;mov ecx, [esi*4+loc_42B948]
mov tmpadr, loc_42B948
shl tmp0, esi, 2
add tmpadr, tmpadr, tmp0
load ecx, tmpadr, 4

;call loc_406420
PUSH loc_409FAD
tcall loc_406420
endp

proc loc_409FAD
;jmp short loc_409FBB
tcall loc_409FBB
endp

proc loc_409FAF
;mov ecx, [esi*4+loc_42B948]
mov tmpadr, loc_42B948
shl tmp0, esi, 2
add tmpadr, tmpadr, tmp0
load ecx, tmpadr, 4

;call loc_4062B0
PUSH loc_409FBB
tcall loc_4062B0
endp

proc loc_409FBB
;xor eax, eax
xor eax, eax, eax

;mov ax, [esi*4+loc_42B94C]
mov tmpadr, loc_42B94C
shl tmp0, esi, 2
add tmpadr, tmpadr, tmp0
load16z tmp0, tmpadr, 4
and eax, eax, 0xffff0000
or eax, eax, tmp0

;mov ecx, eax
mov ecx, eax

;sub ecx, 0x120
sub ecx, ecx, 288
mov tmpcnd, ecx

;jz near loc_40A09C
ctcallz tmpcnd, loc_40A09C

tcall loc_409FD3
endp

proc loc_409FD3
;dec ecx
sub ecx, ecx, 1
mov tmpcnd, ecx

;jz near loc_40A086
ctcallz tmpcnd, loc_40A086

tcall loc_409FDA
endp

proc loc_409FDA
;and eax, 0xff00
and eax, eax, 0xff00

;cmp eax, 0x1c00
and eflags, eflags, ~(ZF|SF|OF)
cmovslt eax, -2147476480, tmp3, OF, 0
or eflags, eflags, tmp3
sub tmp1, eax, 7168
cmovz tmp1, tmp0, ZF, 0
or eflags, eflags, tmp0
and tmp0, tmp1, 0x80000000
cmovz tmp0, tmp0, 0, SF
or eflags, eflags, tmp0

;jg short loc_40A05D
lshr tmp1, eflags, SF_SHIFT - ZF_SHIFT
lshr tmp2, eflags, OF_SHIFT - ZF_SHIFT
xor tmp1, tmp1, tmp2
or tmp1, tmp1, eflags
and tmp1, tmp1, ZF
ctcallz tmp1, loc_40A05D

tcall loc_409FE6
endp

proc loc_409FE6
;jz short loc_40A03C
and tmp1, eflags, ZF
ctcallnz tmp1, loc_40A03C

tcall loc_409FE8
endp

proc loc_409FE8
;cmp eax, 0x1800
cmoveq eax, 6144, tmpcnd, 0, 1

;jz short loc_40A01B
ctcallz tmpcnd, loc_40A01B

tcall loc_409FEF
endp

proc loc_409FEF
;cmp eax, 0x1a00
cmoveq eax, 6656, tmpcnd, 0, 1

;jnz near loc_40A0F4
ctcallnz tmpcnd, loc_40A0F4

tcall loc_409FFA
endp

proc loc_409FFA
;mov cx, [esi*4+loc_42B950]
mov tmpadr, loc_42B950
shl tmp0, esi, 2
add tmpadr, tmpadr, tmp0
load16z tmp0, tmpadr, 4
and ecx, ecx, 0xffff0000
or ecx, ecx, tmp0

;mov dl, [esi*4+loc_42B94C]
mov tmpadr, loc_42B94C
shl tmp0, esi, 2
add tmpadr, tmpadr, tmp0
load8z tmp0, tmpadr, 4
and edx, edx, 0xffffff00
or edx, edx, tmp0

;push ecx
PUSH ecx

;mov ecx, [esi*4+loc_42B948]
mov tmpadr, loc_42B948
shl tmp0, esi, 2
add tmpadr, tmpadr, tmp0
load ecx, tmpadr, 4

;call loc_4067F0
PUSH loc_40A016
tcall loc_4067F0
endp

proc loc_40A016
;jmp loc_40A0F4
tcall loc_40A0F4
endp

proc loc_40A01B
;mov dx, [esi*4+loc_42B950]
mov tmpadr, loc_42B950
shl tmp0, esi, 2
add tmpadr, tmpadr, tmp0
load16z tmp0, tmpadr, 4
and edx, edx, 0xffff0000
or edx, edx, tmp0

;mov ecx, [esi*4+loc_42B948]
mov tmpadr, loc_42B948
shl tmp0, esi, 2
add tmpadr, tmpadr, tmp0
load ecx, tmpadr, 4

;push edx
PUSH edx

;mov dl, [esi*4+loc_42B94C]
mov tmpadr, loc_42B94C
shl tmp0, esi, 2
add tmpadr, tmpadr, tmp0
load8z tmp0, tmpadr, 4
and edx, edx, 0xffffff00
or edx, edx, tmp0

;call loc_4067C0
PUSH loc_40A037
tcall loc_4067C0
endp

proc loc_40A037
;jmp loc_40A0F4
tcall loc_40A0F4
endp

proc loc_40A03C
;mov ax, [esi*4+loc_42B950]
mov tmpadr, loc_42B950
shl tmp0, esi, 2
add tmpadr, tmpadr, tmp0
load16z tmp0, tmpadr, 4
and eax, eax, 0xffff0000
or eax, eax, tmp0

;mov dl, [esi*4+loc_42B94C]
mov tmpadr, loc_42B94C
shl tmp0, esi, 2
add tmpadr, tmpadr, tmp0
load8z tmp0, tmpadr, 4
and edx, edx, 0xffffff00
or edx, edx, tmp0

;mov ecx, [esi*4+loc_42B948]
mov tmpadr, loc_42B948
shl tmp0, esi, 2
add tmpadr, tmpadr, tmp0
load ecx, tmpadr, 4

;push eax
PUSH eax

;call loc_406820
PUSH loc_40A058
tcall loc_406820
endp

proc loc_40A058
;jmp loc_40A0F4
tcall loc_40A0F4
endp

proc loc_40A05D
;cmp eax, 0x1d00
cmoveq eax, 7424, tmpcnd, 0, 1

;jnz near loc_40A0F4
ctcallnz tmpcnd, loc_40A0F4

tcall loc_40A068
endp

proc loc_40A068
;mov cx, [esi*4+loc_42B950]
mov tmpadr, loc_42B950
shl tmp0, esi, 2
add tmpadr, tmpadr, tmp0
load16z tmp0, tmpadr, 4
and ecx, ecx, 0xffff0000
or ecx, ecx, tmp0

;mov dl, [esi*4+loc_42B94C]
mov tmpadr, loc_42B94C
shl tmp0, esi, 2
add tmpadr, tmpadr, tmp0
load8z tmp0, tmpadr, 4
and edx, edx, 0xffffff00
or edx, edx, tmp0

;push ecx
PUSH ecx

;mov ecx, [esi*4+loc_42B948]
mov tmpadr, loc_42B948
shl tmp0, esi, 2
add tmpadr, tmpadr, tmp0
load ecx, tmpadr, 4

;call loc_406850
PUSH loc_40A084
tcall loc_406850
endp

proc loc_40A084
;jmp short loc_40A0F4
tcall loc_40A0F4
endp

proc loc_40A086
;mov dx, [esi*4+loc_42B950]
mov tmpadr, loc_42B950
shl tmp0, esi, 2
add tmpadr, tmpadr, tmp0
load16z tmp0, tmpadr, 4
and edx, edx, 0xffff0000
or edx, edx, tmp0

;mov ecx, [esi*4+loc_42B948]
mov tmpadr, loc_42B948
shl tmp0, esi, 2
add tmpadr, tmpadr, tmp0
load ecx, tmpadr, 4

;call loc_4068F0
PUSH loc_40A09A
tcall loc_4068F0
endp

proc loc_40A09A
;jmp short loc_40A0F4
tcall loc_40A0F4
endp

proc loc_40A09C
;mov dx, [esi*4+loc_42B950]
mov tmpadr, loc_42B950
shl tmp0, esi, 2
add tmpadr, tmpadr, tmp0
load16z tmp0, tmpadr, 4
and edx, edx, 0xffff0000
or edx, edx, tmp0

;mov ecx, [esi*4+loc_42B948]
mov tmpadr, loc_42B948
shl tmp0, esi, 2
add tmpadr, tmpadr, tmp0
load ecx, tmpadr, 4

;call loc_406880
PUSH loc_40A0B0
tcall loc_406880
endp

proc loc_40A0B0
;jmp short loc_40A0F4
tcall loc_40A0F4
endp

proc loc_40A0B2
;mov dl, [esp+0x9]
add tmpadr, esp, 9
load8z tmp0, tmpadr, 1
and edx, edx, 0xffffff00
or edx, edx, tmp0

;lea eax, [eax+eax*2]
shl tmpadr, eax, 1
add eax, tmpadr, eax

;mov ecx, [eax*4+loc_42B948]
mov tmpadr, loc_42B948
shl tmp0, eax, 2
add tmpadr, tmpadr, tmp0
load ecx, tmpadr, 4

;call loc_4064E0
PUSH loc_40A0C5
tcall loc_4064E0
endp

proc loc_40A0C5
;jmp short loc_40A0F4
tcall loc_40A0F4
endp

proc loc_40A0C7
;mov ecx, [esp+0xa]
add tmpadr, esp, 10
load ecx, tmpadr, 2

;mov dl, [esp+0x9]
add tmpadr, esp, 9
load8z tmp0, tmpadr, 1
and edx, edx, 0xffffff00
or edx, edx, tmp0

;lea eax, [eax+eax*2]
shl tmpadr, eax, 1
add eax, tmpadr, eax

;push ecx
PUSH ecx

;mov ecx, [eax*4+loc_42B948]
mov tmpadr, loc_42B948
shl tmp0, eax, 2
add tmpadr, tmpadr, tmp0
load ecx, tmpadr, 4

;call loc_405D10
PUSH loc_40A0DF
tcall loc_405D10
endp

proc loc_40A0DF
;jmp short loc_40A0F4
tcall loc_40A0F4
endp

proc loc_40A0E1
;mov dl, [esp+0x9]
add tmpadr, esp, 9
load8z tmp0, tmpadr, 1
and edx, edx, 0xffffff00
or edx, edx, tmp0

;lea ecx, [eax+eax*2]
shl tmpadr, eax, 1
add ecx, tmpadr, eax

;mov ecx, [ecx*4+loc_42B948]
mov tmpadr, loc_42B948
shl tmp0, ecx, 2
add tmpadr, tmpadr, tmp0
load ecx, tmpadr, 4

;call loc_406930
PUSH loc_40A0F4
tcall loc_406930
endp

proc loc_40A0F4
;mov eax, [loc_41B728]
load eax, loc_41B728, 4

;pop esi
POP esi

;dec eax
sub eax, eax, 1

;pop ebx
POP ebx

;mov [loc_41B728], eax
store eax, loc_41B728, 4

;mov eax, 0x1
mov eax, 0x1

;add esp, 0x8
add esp, esp, 8

;ret
POP tmp1
tcall tmp1
endp

proc loc_40A10A
;dec dword [loc_41B728]
load tmp1, loc_41B728, 4
sub tmp1, tmp1, 1
store tmp1, loc_41B728, 4

tcall loc_40A110
endp

proc loc_40A110
;xor eax, eax
xor eax, eax, eax

;add esp, 0x8
add esp, esp, 8

;ret
POP tmp1
tcall tmp1
endp

proc MidiMessageLong_asm global c_MidiMessageLong_asm
;mov eax, [loc_455FEC]
load eax, loc_455FEC, 4

;test eax, eax
mov tmpcnd, eax

;jz near loc_40A2F8
ctcallz tmpcnd, loc_40A2F8

tcall loc_40A26D
endp

proc loc_40A26D
;mov eax, [loc_41B728]
load eax, loc_41B728, 4

;inc eax
add eax, eax, 1
mov tmpcnd, eax

;mov [loc_41B728], eax
store eax, loc_41B728, 4

;jnz short loc_40A2F2
ctcallnz tmpcnd, loc_40A2F2

tcall loc_40A27A
endp

proc loc_40A27A
;mov al, [ecx]
load8z tmp0, ecx, 1
and eax, eax, 0xffffff00
or eax, eax, tmp0

;push esi
PUSH esi

;cmp al, 0xf0
sub tmp1, eax, -16
and tmpcnd, tmp1, 0xff

;jnz short loc_40A2DE
ctcallnz tmpcnd, loc_40A2DE

tcall loc_40A281
endp

proc loc_40A281
;cmp byte [ecx+edx-0x1], 0xf7
add tmpadr, ecx, edx
add tmpadr, tmpadr, -1
load8z tmp1, tmpadr, 1
sub tmp1, tmp1, -9
and tmpcnd, tmp1, 0xff

;jnz short loc_40A2DE
ctcallnz tmpcnd, loc_40A2DE

tcall loc_40A288
endp

proc loc_40A288
;xor eax, eax
xor eax, eax, eax

;mov al, [ecx+0x1]
add tmpadr, ecx, 1
load8z tmp0, tmpadr, 1
and eax, eax, 0xffffff00
or eax, eax, tmp0

;lea esi, [eax-0x41]
add esi, eax, -65

;cmp esi, 0x3e
cmovugt esi, 62, tmpcnd, 0, 1

;ja short loc_40A2DE
ctcallz tmpcnd, loc_40A2DE

tcall loc_40A295
endp

proc loc_40A295
;xor eax, eax
xor eax, eax, eax

;mov al, [esi+loc_40A314]
mov tmpadr, loc_40A314
add tmpadr, tmpadr, esi
load8z tmp0, tmpadr, 1
and eax, eax, 0xffffff00
or eax, eax, tmp0

;jmp dword [eax*4+loc_40A300]
mov tmpadr, loc_40A300
shl tmp0, eax, 2
add tmpadr, tmpadr, tmp0
load tmp1, tmpadr, 4
tcall tmp1
endp

proc loc_40A2A4
;push 0x0
PUSH 0x0

;add edx, 0xfffffffe
add edx, edx, -2

;add ecx, 0x2
add ecx, ecx, 2

;call loc_404760
PUSH loc_40A2B1
tcall loc_404760
endp

proc loc_40A2B1
;jmp short loc_40A2DE
tcall loc_40A2DE
endp

proc loc_40A2B3
;push 0x0
PUSH 0x0

;add edx, 0xfffffffe
add edx, edx, -2

;add ecx, 0x2
add ecx, ecx, 2

;call loc_404790
PUSH loc_40A2C0
tcall loc_404790
endp

proc loc_40A2C0
;jmp short loc_40A2DE
tcall loc_40A2DE
endp

proc loc_40A2C2
;push 0x0
PUSH 0x0

;add edx, 0xfffffffe
add edx, edx, -2

;add ecx, 0x2
add ecx, ecx, 2

;call loc_4047F0
PUSH loc_40A2CF
tcall loc_4047F0
endp

proc loc_40A2CF
;jmp short loc_40A2DE
tcall loc_40A2DE
endp

proc loc_40A2D1
;push 0x0
PUSH 0x0

;add edx, 0xfffffffe
add edx, edx, -2

;add ecx, 0x2
add ecx, ecx, 2

;call loc_404840
PUSH loc_40A2DE
tcall loc_404840
endp

proc loc_40A2DE
;mov eax, [loc_41B728]
load eax, loc_41B728, 4

;pop esi
POP esi

;dec eax
sub eax, eax, 1

;mov [loc_41B728], eax
store eax, loc_41B728, 4

;mov eax, 0x1
mov eax, 0x1

;ret 0x4
POP tmp1
add esp, esp, 4
tcall tmp1
endp

proc loc_40A2F2
;dec dword [loc_41B728]
load tmp1, loc_41B728, 4
sub tmp1, tmp1, 1
store tmp1, loc_41B728, 4

tcall loc_40A2F8
endp

proc loc_40A2F8
;xor eax, eax
xor eax, eax, eax

;ret 0x4
POP tmp1
add esp, esp, 4
tcall tmp1
endp

;
proc RenderSamples_asm global c_RenderSamples_asm
;mov eax, [loc_455FEC]
load eax, loc_455FEC, 4

;test eax, eax
mov tmpcnd, eax

;jz short loc_40A3AF
ctcallz tmpcnd, loc_40A3AF

tcall loc_40A369
endp

proc loc_40A369
;mov eax, [loc_41B728]
load eax, loc_41B728, 4

;inc eax
add eax, eax, 1
mov tmpcnd, eax

;mov [loc_41B728], eax
store eax, loc_41B728, 4

;jnz short loc_40A3A9
ctcallnz tmpcnd, loc_40A3A9

tcall loc_40A376
endp

proc loc_40A376
;mov edx, 0x400
mov edx, 0x400

;call loc_406A60
PUSH loc_40A380
tcall loc_406A60
endp

proc loc_40A380
;mov eax, [loc_455FF0]
load eax, loc_455FF0, 4

;test eax, eax
mov tmpcnd, eax

;jz short loc_40A398
ctcallz tmpcnd, loc_40A398

tcall loc_40A389
endp

proc loc_40A389
;mov dword [loc_455FF0], 0x0
store 0, loc_455FF0, 4

;call loc_4069B0
PUSH loc_40A398
tcall loc_4069B0
endp

proc loc_40A398
;mov eax, [loc_41B728]
load eax, loc_41B728, 4

;dec eax
sub eax, eax, 1

;mov [loc_41B728], eax
store eax, loc_41B728, 4

;mov eax, 0x1
mov eax, 0x1

;ret
POP tmp1
tcall tmp1
endp

proc loc_40A3A9
;dec dword [loc_41B728]
load tmp1, loc_41B728, 4
sub tmp1, tmp1, 1
store tmp1, loc_41B728, 4

tcall loc_40A3AF
endp

proc loc_40A3AF
;xor eax, eax
xor eax, eax, eax

;ret
POP tmp1
tcall tmp1
endp

proc InitializeMasterVolume_asm global c_InitializeMasterVolume_asm
;mov eax, [loc_455FEC]
load eax, loc_455FEC, 4

;sub esp, 0x8
sub esp, esp, 8

;test eax, eax
mov tmpcnd, eax

;jz short loc_40A3FA
ctcallz tmpcnd, loc_40A3FA

tcall loc_40A3CC
endp

proc loc_40A3CC
;mov [esp], ecx
store ecx, esp, 4

;mov dword [esp+0x4], 0x0
add tmpadr, esp, 4
store 0, tmpadr, 4

;fild qword [esp]
load tmp1, esp, 4
add tmp3, esp, 4
load tmp2, tmp3, 4
FILD_INT64 tmp1, tmp2

;fmul dword [loc_4189F0]
load tmp1, loc_4189F0, 4
FMUL_FLOAT tmp1

;fstp dword [loc_41B6BC]
FSTP_FLOAT
store tmp0, loc_41B6BC, 4

;fld dword [loc_41B6B8]
load tmp1, loc_41B6B8, 4
FLD_FLOAT tmp1

;fmul dword [loc_41B6BC]
load tmp1, loc_41B6BC, 4
FMUL_FLOAT tmp1

;fstp dword [loc_41B6FC]
FSTP_FLOAT
store tmp0, loc_41B6FC, 4

tcall loc_40A3FA
endp

proc loc_40A3FA
;add esp, 0x8
add esp, esp, 8

;ret
POP tmp1
tcall tmp1
endp

proc InitializeEffect_asm global c_InitializeEffect_asm
;mov eax, ecx
mov eax, ecx

;push esi
PUSH esi

;mov ecx, [loc_455FEC]
load ecx, loc_455FEC, 4

;mov esi, edx
mov esi, edx

;test ecx, ecx
mov tmpcnd, ecx

;jz short loc_40A4C9
ctcallz tmpcnd, loc_40A4C9

tcall loc_40A48F
endp

proc loc_40A48F
;sub eax, 0x0
sub eax, eax, 0
mov tmpcnd, eax

;jz short loc_40A4B1
ctcallz tmpcnd, loc_40A4B1

tcall loc_40A494
endp

proc loc_40A494
;dec eax
sub eax, eax, 1
mov tmpcnd, eax

;jnz short loc_40A4C9
ctcallnz tmpcnd, loc_40A4C9

tcall loc_40A497
endp

proc loc_40A497
;test esi, esi
mov tmpcnd, esi

;jz short loc_40A4A9
ctcallz tmpcnd, loc_40A4A9

tcall loc_40A49B
endp

proc loc_40A49B
;mov eax, [loc_455D10]
load eax, loc_455D10, 4

;test eax, eax
mov tmpcnd, eax

;jnz short loc_40A4A9
ctcallnz tmpcnd, loc_40A4A9

tcall loc_40A4A4
endp

proc loc_40A4A4
;call loc_408C80
PUSH loc_40A4A9
tcall loc_408C80
endp

proc loc_40A4A9
;mov [loc_455D10], esi
store esi, loc_455D10, 4

;pop esi
POP esi

;ret
POP tmp1
tcall tmp1
endp

proc loc_40A4B1
;test esi, esi
mov tmpcnd, esi

;jz short loc_40A4C3
ctcallz tmpcnd, loc_40A4C3

tcall loc_40A4B5
endp

proc loc_40A4B5
;mov eax, [loc_455D14]
load eax, loc_455D14, 4

;test eax, eax
mov tmpcnd, eax

;jnz short loc_40A4C3
ctcallnz tmpcnd, loc_40A4C3

tcall loc_40A4BE
endp

proc loc_40A4BE
;call loc_4087A0
PUSH loc_40A4C3
tcall loc_4087A0
endp

proc loc_40A4C3
;mov [loc_455D14], esi
store esi, loc_455D14, 4

tcall loc_40A4C9
endp

proc loc_40A4C9
;pop esi
POP esi

;ret
POP tmp1
tcall tmp1
endp

proc InitializeUnknown_asm global c_InitializeUnknown_asm
;mov eax, [loc_455FEC]
load eax, loc_455FEC, 4

;test eax, eax
mov tmpcnd, eax

;jz short loc_40A4DE
ctcallz tmpcnd, loc_40A4DE

tcall loc_40A4D9
endp

proc loc_40A4D9
;jmp loc_4089C0
tcall loc_4089C0
endp

proc loc_40A4DE
;ret
POP tmp1
tcall tmp1
endp

proc InitializeCpuLoad_asm global c_InitializeCpuLoad_asm
;sub esp, 0x8
sub esp, esp, 8

;xor eax, eax
xor eax, eax, eax

;push esi
PUSH esi

;mov esi, [loc_455FEC]
load esi, loc_455FEC, 4

;cmp esi, eax
cmoveq esi, eax, tmpcnd, 0, 1

;pop esi
POP esi

;jz short loc_40A593
ctcallz tmpcnd, loc_40A593

tcall loc_40A551
endp

proc loc_40A551
;mov [esp], edx
store edx, esp, 4

;mov [esp+0x4], eax
add tmpadr, esp, 4
store eax, tmpadr, 4

;fild qword [esp]
load tmp1, esp, 4
add tmp3, esp, 4
load tmp2, tmp3, 4
FILD_INT64 tmp1, tmp2

;mov [esp], ecx
store ecx, esp, 4

;mov [esp+0x4], eax
add tmpadr, esp, 4
store eax, tmpadr, 4

;fmul dword [loc_4189F0]
load tmp1, loc_4189F0, 4
FMUL_FLOAT tmp1

;fstp dword [loc_41B734]
FSTP_FLOAT
store tmp0, loc_41B734, 4

;fild qword [esp]
load tmp1, esp, 4
add tmp3, esp, 4
load tmp2, tmp3, 4
FILD_INT64 tmp1, tmp2

;mov eax, [loc_41B734]
load eax, loc_41B734, 4

;push eax
PUSH eax

;fmul dword [loc_4189F0]
load tmp1, loc_4189F0, 4
FMUL_FLOAT tmp1

;fstp dword [loc_41B738]
FSTP_FLOAT
store tmp0, loc_41B738, 4

;mov ecx, [loc_41B738]
load ecx, loc_41B738, 4

;push ecx
PUSH ecx

;call loc_407E60
PUSH loc_40A593
tcall loc_407E60
endp

proc loc_40A593
;add esp, 0x8
add esp, esp, 8

;ret
POP tmp1
tcall tmp1
endp

proc InitializeParameters_asm global c_InitializeParameters_asm
;push ecx
PUSH ecx

;mov eax, [loc_455FEC]
load eax, loc_455FEC, 4

;push esi
PUSH esi

;test eax, eax
mov tmpcnd, eax

;mov esi, ecx
mov esi, ecx

;jz near loc_40A64F
ctcallz tmpcnd, loc_40A64F

tcall loc_40A5B1
endp

proc loc_40A5B1
;xor eax, eax
xor eax, eax, eax

;xor ecx, ecx
xor ecx, ecx, ecx

;mov ax, [esi+0x2]
add tmpadr, esi, 2
load16z tmp0, tmpadr, 1
and eax, eax, 0xffff0000
or eax, eax, tmp0

;xor edx, edx
xor edx, edx, edx

;mov [esp+0x4], eax
add tmpadr, esp, 4
store eax, tmpadr, 4

;xor eax, eax
xor eax, eax, eax

;fild dword [esp+0x4]
add tmpadr, esp, 4
load tmp1, tmpadr, 4
FILD_INT32 tmp1

;fmul dword [loc_4189F0]
load tmp1, loc_4189F0, 4
FMUL_FLOAT tmp1

;fstp dword [loc_41B70C]
FSTP_FLOAT
store tmp0, loc_41B70C, 4

;mov cx, [esi+0x4]
add tmpadr, esi, 4
load16z tmp0, tmpadr, 1
and ecx, ecx, 0xffff0000
or ecx, ecx, tmp0

;mov [esp+0x4], ecx
add tmpadr, esp, 4
store ecx, tmpadr, 4

;push ecx
PUSH ecx

;fild dword [esp+0x8]
add tmpadr, esp, 8
load tmp1, tmpadr, 4
FILD_INT32 tmp1

;fmul dword [loc_4189F0]
load tmp1, loc_4189F0, 4
FMUL_FLOAT tmp1

;fstp dword [loc_41B710]
FSTP_FLOAT
store tmp0, loc_41B710, 4

;mov dx, [esi]
load16z tmp0, esi, 1
and edx, edx, 0xffff0000
or edx, edx, tmp0

;mov [esp+0x8], edx
add tmpadr, esp, 8
store edx, tmpadr, 4

;fild dword [esp+0x8]
add tmpadr, esp, 8
load tmp1, tmpadr, 4
FILD_INT32 tmp1

;fmul dword [loc_4189F0]
load tmp1, loc_4189F0, 4
FMUL_FLOAT tmp1

;fstp dword [loc_41B714]
FSTP_FLOAT
store tmp0, loc_41B714, 4

;mov ax, [esi+0x6]
add tmpadr, esi, 6
load16z tmp0, tmpadr, 1
and eax, eax, 0xffff0000
or eax, eax, tmp0

;mov [esp+0x8], eax
add tmpadr, esp, 8
store eax, tmpadr, 4

;fild dword [esp+0x8]
add tmpadr, esp, 8
load tmp1, tmpadr, 4
FILD_INT32 tmp1

;fmul dword [loc_4189F0]
load tmp1, loc_4189F0, 4
FMUL_FLOAT tmp1

;fstp dword [esp]
FSTP_FLOAT
store tmp0, esp, 4

;call loc_4087D0
PUSH loc_40A61B
tcall loc_4087D0
endp

proc loc_40A61B
;xor ecx, ecx
xor ecx, ecx, ecx

;xor edx, edx
xor edx, edx, edx

;mov cx, [esi+0x8]
add tmpadr, esi, 8
load16z tmp0, tmpadr, 1
and ecx, ecx, 0xffff0000
or ecx, ecx, tmp0

;mov [esp+0x4], ecx
add tmpadr, esp, 4
store ecx, tmpadr, 4

;fild dword [esp+0x4]
add tmpadr, esp, 4
load tmp1, tmpadr, 4
FILD_INT32 tmp1

;fmul dword [loc_4189F0]
load tmp1, loc_4189F0, 4
FMUL_FLOAT tmp1

;fstp dword [loc_41B718]
FSTP_FLOAT
store tmp0, loc_41B718, 4

;mov dx, [esi+0xa]
add tmpadr, esi, 10
load16z tmp0, tmpadr, 1
and edx, edx, 0xffff0000
or edx, edx, tmp0

;mov [esp+0x4], edx
add tmpadr, esp, 4
store edx, tmpadr, 4

;fild dword [esp+0x4]
add tmpadr, esp, 4
load tmp1, tmpadr, 4
FILD_INT32 tmp1

;fmul dword [loc_4189F0]
load tmp1, loc_4189F0, 4
FMUL_FLOAT tmp1

;fstp dword [loc_41B6C0]
FSTP_FLOAT
store tmp0, loc_41B6C0, 4

tcall loc_40A64F
endp

proc loc_40A64F
;pop esi
POP esi

;pop ecx
POP ecx

;ret
POP tmp1
tcall tmp1
endp

proc loc_40A660
;jmp loc_4017E0
tcall loc_4017E0
endp

proc loc_40A670
;mov eax, [esp+0x4]
add tmpadr, esp, 4
load eax, tmpadr, 4

;push eax
PUSH eax

;call loc_4018A0
PUSH loc_40A67A
tcall loc_4018A0
endp

proc loc_40A67A
;ret 0x4
POP tmp1
add esp, esp, 4
tcall tmp1
endp

proc loc_40A680
;ret
POP tmp1
tcall tmp1
endp

proc ValidateSettings_asm global c_ValidateSettings_asm
;mov eax, [ecx]
load eax, ecx, 1

;cmp eax, 0x5622
cmoveq eax, 22050, tmpcnd, 0, 1

;jz short loc_40A907
ctcallz tmpcnd, loc_40A907

tcall loc_40A8F9
endp

proc loc_40A8F9
;cmp eax, 0xac44
cmoveq eax, 44100, tmpcnd, 0, 1

;jz short loc_40A907
ctcallz tmpcnd, loc_40A907

tcall loc_40A900
endp

proc loc_40A900
;mov eax, [loc_41B740]
load eax, loc_41B740, 4

;mov [ecx], eax
store eax, ecx, 1

tcall loc_40A907
endp

proc loc_40A907
;mov eax, [ecx+0x4]
add tmpadr, ecx, 4
load eax, tmpadr, 1

;cmp eax, 0x8
cmovult eax, 8, tmpcnd, 0, 1

;jae short loc_40A918
ctcallnz tmpcnd, loc_40A918

tcall loc_40A90F
endp

proc loc_40A90F
;mov dword [ecx+0x4], 0x8
add tmpadr, ecx, 4
mov tmp1, 0x8
store tmp1, tmpadr, 1

;jmp short loc_40A926
tcall loc_40A926
endp

proc loc_40A918
;cmp eax, 0x100
cmovugt eax, 256, tmpcnd, 0, 1

;jbe short loc_40A926
ctcallnz tmpcnd, loc_40A926

tcall loc_40A91F
endp

proc loc_40A91F
;mov dword [ecx+0x4], 0x100
add tmpadr, ecx, 4
mov tmp1, 0x100
store tmp1, tmpadr, 1

tcall loc_40A926
endp

proc loc_40A926
;mov eax, [ecx+0x8]
add tmpadr, ecx, 8
load eax, tmpadr, 1

;cmp eax, 0x14
cmovult eax, 20, tmpcnd, 0, 1

;jae short loc_40A937
ctcallnz tmpcnd, loc_40A937

tcall loc_40A92E
endp

proc loc_40A92E
;mov dword [ecx+0x8], 0x14
add tmpadr, ecx, 8
mov tmp1, 0x14
store tmp1, tmpadr, 1

;jmp short loc_40A943
tcall loc_40A943
endp

proc loc_40A937
;cmp eax, 0x55
cmovugt eax, 85, tmpcnd, 0, 1

;jbe short loc_40A943
ctcallnz tmpcnd, loc_40A943

tcall loc_40A93C
endp

proc loc_40A93C
;mov dword [ecx+0x8], 0x55
add tmpadr, ecx, 8
mov tmp1, 0x55
store tmp1, tmpadr, 1

tcall loc_40A943
endp

proc loc_40A943
;mov eax, [ecx+0xc]
add tmpadr, ecx, 12
load eax, tmpadr, 1

;mov edx, 0x5a
mov edx, 0x5a

;cmp eax, edx
and eflags, eflags, ~(CF|ZF)
cmovult eax, edx, tmp3, CF, 0
or eflags, eflags, tmp3
sub tmp1, eax, edx
cmovz tmp1, tmp0, ZF, 0
or eflags, eflags, tmp0

;jb short loc_40A951
and tmp1, eflags, CF
ctcallnz tmp1, loc_40A951

tcall loc_40A94F
endp

proc loc_40A94F
;jbe short loc_40A954
and tmp1, eflags, ZF | CF
ctcallnz tmp1, loc_40A954

tcall loc_40A951
endp

proc loc_40A951
;mov [ecx+0xc], edx
add tmpadr, ecx, 12
store edx, tmpadr, 1

tcall loc_40A954
endp

proc loc_40A954
;mov eax, [ecx+0x10]
add tmpadr, ecx, 16
load eax, tmpadr, 1

;mov edx, 0x1
mov edx, 0x1

;cmp eax, edx
cmovugt eax, edx, tmpcnd, 0, 1

;jbe short loc_40A963
ctcallnz tmpcnd, loc_40A963

tcall loc_40A960
endp

proc loc_40A960
;mov [ecx+0x10], edx
add tmpadr, ecx, 16
store edx, tmpadr, 1

tcall loc_40A963
endp

proc loc_40A963
;cmp [ecx+0x14], edx
add tmpadr, ecx, 20
load tmp1, tmpadr, 1
cmovugt tmp1, edx, tmpcnd, 0, 1

;jbe short loc_40A96B
ctcallnz tmpcnd, loc_40A96B

tcall loc_40A968
endp

proc loc_40A968
;mov [ecx+0x14], edx
add tmpadr, ecx, 20
store edx, tmpadr, 1

tcall loc_40A96B
endp

proc loc_40A96B
;push edi
PUSH edi

;mov edi, [ecx+0x18]
add tmpadr, ecx, 24
load edi, tmpadr, 1

;mov eax, 0xc8
mov eax, 0xc8

;cmp edi, eax
cmovugt edi, eax, tmpcnd, 0, 1

;jbe short loc_40A97B
ctcallnz tmpcnd, loc_40A97B

tcall loc_40A978
endp

proc loc_40A978
;mov [ecx+0x18], eax
add tmpadr, ecx, 24
store eax, tmpadr, 1

tcall loc_40A97B
endp

proc loc_40A97B
;cmp [ecx+0x1c], eax
add tmpadr, ecx, 28
load tmp1, tmpadr, 1
cmovugt tmp1, eax, tmpcnd, 0, 1

;jbe short loc_40A983
ctcallnz tmpcnd, loc_40A983

tcall loc_40A980
endp

proc loc_40A980
;mov [ecx+0x1c], eax
add tmpadr, ecx, 28
store eax, tmpadr, 1

tcall loc_40A983
endp

proc loc_40A983
;cmp [ecx+0x20], eax
add tmpadr, ecx, 32
load tmp1, tmpadr, 1
cmovugt tmp1, eax, tmpcnd, 0, 1

;jbe short loc_40A98B
ctcallnz tmpcnd, loc_40A98B

tcall loc_40A988
endp

proc loc_40A988
;mov [ecx+0x20], eax
add tmpadr, ecx, 32
store eax, tmpadr, 1

tcall loc_40A98B
endp

proc loc_40A98B
;cmp [ecx+0x24], eax
add tmpadr, ecx, 36
load tmp1, tmpadr, 1
cmovugt tmp1, eax, tmpcnd, 0, 1

;jbe short loc_40A993
ctcallnz tmpcnd, loc_40A993

tcall loc_40A990
endp

proc loc_40A990
;mov [ecx+0x24], eax
add tmpadr, ecx, 36
store eax, tmpadr, 1

tcall loc_40A993
endp

proc loc_40A993
;cmp [ecx+0x28], eax
add tmpadr, ecx, 40
load tmp1, tmpadr, 1
cmovugt tmp1, eax, tmpcnd, 0, 1

;jbe short loc_40A99B
ctcallnz tmpcnd, loc_40A99B

tcall loc_40A998
endp

proc loc_40A998
;mov [ecx+0x28], eax
add tmpadr, ecx, 40
store eax, tmpadr, 1

tcall loc_40A99B
endp

proc loc_40A99B
;cmp [ecx+0x2c], eax
add tmpadr, ecx, 44
load tmp1, tmpadr, 1
cmovugt tmp1, eax, tmpcnd, 0, 1

;jbe short loc_40A9A3
ctcallnz tmpcnd, loc_40A9A3

tcall loc_40A9A0
endp

proc loc_40A9A0
;mov [ecx+0x2c], eax
add tmpadr, ecx, 44
store eax, tmpadr, 1

tcall loc_40A9A3
endp

proc loc_40A9A3
;mov edi, [ecx+0x30]
add tmpadr, ecx, 48
load edi, tmpadr, 1

;mov eax, 0x64
mov eax, 0x64

;cmp edi, eax
cmovugt edi, eax, tmpcnd, 0, 1

;pop edi
POP edi

;jbe short loc_40A9B3
ctcallnz tmpcnd, loc_40A9B3

tcall loc_40A9B0
endp

proc loc_40A9B0
;mov [ecx+0x30], eax
add tmpadr, ecx, 48
store eax, tmpadr, 1

tcall loc_40A9B3
endp

proc loc_40A9B3
;mov eax, [ecx+0x34]
add tmpadr, ecx, 52
load eax, tmpadr, 1

;cmp eax, edx
cmovult eax, edx, tmpcnd, 0, 1

;jae short loc_40A9BF
ctcallnz tmpcnd, loc_40A9BF

tcall loc_40A9BA
endp

proc loc_40A9BA
;mov [ecx+0x34], edx
add tmpadr, ecx, 52
store edx, tmpadr, 1

;jmp short loc_40A9CB
tcall loc_40A9CB
endp

proc loc_40A9BF
;cmp eax, 0x14
cmovugt eax, 20, tmpcnd, 0, 1

;jbe short loc_40A9CB
ctcallnz tmpcnd, loc_40A9CB

tcall loc_40A9C4
endp

proc loc_40A9C4
;mov dword [ecx+0x34], 0x14
add tmpadr, ecx, 52
mov tmp1, 0x14
store tmp1, tmpadr, 1

tcall loc_40A9CB
endp

proc loc_40A9CB
;mov eax, [ecx+0x38]
add tmpadr, ecx, 56
load eax, tmpadr, 1

;cmp eax, 0x28
cmoveq eax, 40, tmpcnd, 0, 1

;jz short loc_40A9E1
ctcallz tmpcnd, loc_40A9E1

tcall loc_40A9D3
endp

proc loc_40A9D3
;cmp eax, 0x50
cmoveq eax, 80, tmpcnd, 0, 1

;jz short loc_40A9E1
ctcallz tmpcnd, loc_40A9E1

tcall loc_40A9D8
endp

proc loc_40A9D8
;mov edx, [loc_41B778]
load edx, loc_41B778, 4

;mov [ecx+0x38], edx
add tmpadr, ecx, 56
store edx, tmpadr, 1

tcall loc_40A9E1
endp

proc loc_40A9E1
;ret
POP tmp1
tcall tmp1
endp

proc loc_40AEB0
;push edx
PUSH edx

;fld dword [ecx+0x30]
add tmpadr, ecx, 48
load tmp1, tmpadr, 1
FLD_FLOAT tmp1

;fld dword [ecx+0x2c]
add tmpadr, ecx, 44
load tmp1, tmpadr, 1
FLD_FLOAT tmp1

;fld dword [ecx+0x3c]
add tmpadr, ecx, 60
load tmp1, tmpadr, 1
FLD_FLOAT tmp1

;fld dword [ecx+0x38]
add tmpadr, ecx, 56
load tmp1, tmpadr, 1
FLD_FLOAT tmp1

;fld dword [ecx+0x44]
add tmpadr, ecx, 68
load tmp1, tmpadr, 1
FLD_FLOAT tmp1

;fld dword [ecx+0x40]
add tmpadr, ecx, 64
load tmp1, tmpadr, 1
FLD_FLOAT tmp1

;mov eax, [loc_441848]
load eax, loc_441848, 4

;lea edx, [eax*4+loc_455904]
mov tmpadr, loc_455904
shl tmp0, eax, 2
add edx, tmpadr, tmp0

;mov eax, loc_455904
mov eax, loc_455904

;jmp short loc_40AEE1
tcall loc_40AEE1
endp

;
proc loc_40AEE1
;fld st0
FLD_ST 0

;fmul st0, st3
FMUL_ST 3

;fld st2
FLD_ST 2

;fmul st0, st5
FMUL_ST 5

;faddp st1, st0
FADDP_ST 1

;fadd dword [eax]
load tmp1, eax, 1
FADD_FLOAT tmp1

;fxch st0, st1
FXCH_ST 1

;fxch st0, st2
FXCH_ST 2

;fadd st0, st1
FADD_ST 1

;fmul st0, st5
FMUL_ST 5

;fld st2
FLD_ST 2

;fmul st0, st7
FMUL_ST 7

;faddp st1, st0
FADDP_ST 1

;fstp dword [eax]
FSTP_FLOAT
store tmp0, eax, 1

;lea eax, [eax+0x4]
add eax, eax, 4

;fld st0
FLD_ST 0

;fmul st0, st3
FMUL_ST 3

;fld st2
FLD_ST 2

;fmul st0, st5
FMUL_ST 5

;faddp st1, st0
FADDP_ST 1

;fadd dword [eax]
load tmp1, eax, 1
FADD_FLOAT tmp1

;fxch st0, st1
FXCH_ST 1

;fxch st0, st2
FXCH_ST 2

;fadd st0, st1
FADD_ST 1

;fmul st0, st5
FMUL_ST 5

;fld st2
FLD_ST 2

;fmul st0, st7
FMUL_ST 7

;faddp st1, st0
FADDP_ST 1

;fstp dword [eax]
FSTP_FLOAT
store tmp0, eax, 1

;lea eax, [eax+0x4]
add eax, eax, 4

;fld st0
FLD_ST 0

;fmul st0, st3
FMUL_ST 3

;fld st2
FLD_ST 2

;fmul st0, st5
FMUL_ST 5

;faddp st1, st0
FADDP_ST 1

;fadd dword [eax]
load tmp1, eax, 1
FADD_FLOAT tmp1

;fxch st0, st1
FXCH_ST 1

;fxch st0, st2
FXCH_ST 2

;fadd st0, st1
FADD_ST 1

;fmul st0, st5
FMUL_ST 5

;fld st2
FLD_ST 2

;fmul st0, st7
FMUL_ST 7

;faddp st1, st0
FADDP_ST 1

;fstp dword [eax]
FSTP_FLOAT
store tmp0, eax, 1

;lea eax, [eax+0x4]
add eax, eax, 4

;fld st0
FLD_ST 0

;fmul st0, st3
FMUL_ST 3

;fld st2
FLD_ST 2

;fmul st0, st5
FMUL_ST 5

;faddp st1, st0
FADDP_ST 1

;fadd dword [eax]
load tmp1, eax, 1
FADD_FLOAT tmp1

;fxch st0, st1
FXCH_ST 1

;fxch st0, st2
FXCH_ST 2

;fadd st0, st1
FADD_ST 1

;fmul st0, st5
FMUL_ST 5

;fld st2
FLD_ST 2

;fmul st0, st7
FMUL_ST 7

;faddp st1, st0
FADDP_ST 1

;fstp dword [eax]
FSTP_FLOAT
store tmp0, eax, 1

;lea eax, [eax+0x4]
add eax, eax, 4

;fld st0
FLD_ST 0

;fmul st0, st3
FMUL_ST 3

;fld st2
FLD_ST 2

;fmul st0, st5
FMUL_ST 5

;faddp st1, st0
FADDP_ST 1

;fadd dword [eax]
load tmp1, eax, 1
FADD_FLOAT tmp1

;fxch st0, st1
FXCH_ST 1

;fxch st0, st2
FXCH_ST 2

;fadd st0, st1
FADD_ST 1

;fmul st0, st5
FMUL_ST 5

;fld st2
FLD_ST 2

;fmul st0, st7
FMUL_ST 7

;faddp st1, st0
FADDP_ST 1

;fstp dword [eax]
FSTP_FLOAT
store tmp0, eax, 1

;lea eax, [eax+0x4]
add eax, eax, 4

;fld st0
FLD_ST 0

;fmul st0, st3
FMUL_ST 3

;fld st2
FLD_ST 2

;fmul st0, st5
FMUL_ST 5

;faddp st1, st0
FADDP_ST 1

;fadd dword [eax]
load tmp1, eax, 1
FADD_FLOAT tmp1

;fxch st0, st1
FXCH_ST 1

;fxch st0, st2
FXCH_ST 2

;fadd st0, st1
FADD_ST 1

;fmul st0, st5
FMUL_ST 5

;fld st2
FLD_ST 2

;fmul st0, st7
FMUL_ST 7

;faddp st1, st0
FADDP_ST 1

;fstp dword [eax]
FSTP_FLOAT
store tmp0, eax, 1

;lea eax, [eax+0x4]
add eax, eax, 4

;fld st0
FLD_ST 0

;fmul st0, st3
FMUL_ST 3

;fld st2
FLD_ST 2

;fmul st0, st5
FMUL_ST 5

;faddp st1, st0
FADDP_ST 1

;fadd dword [eax]
load tmp1, eax, 1
FADD_FLOAT tmp1

;fxch st0, st1
FXCH_ST 1

;fxch st0, st2
FXCH_ST 2

;fadd st0, st1
FADD_ST 1

;fmul st0, st5
FMUL_ST 5

;fld st2
FLD_ST 2

;fmul st0, st7
FMUL_ST 7

;faddp st1, st0
FADDP_ST 1

;fstp dword [eax]
FSTP_FLOAT
store tmp0, eax, 1

;lea eax, [eax+0x4]
add eax, eax, 4

;fld st0
FLD_ST 0

;fmul st0, st3
FMUL_ST 3

;fld st2
FLD_ST 2

;fmul st0, st5
FMUL_ST 5

;faddp st1, st0
FADDP_ST 1

;fadd dword [eax]
load tmp1, eax, 1
FADD_FLOAT tmp1

;fxch st0, st1
FXCH_ST 1

;fxch st0, st2
FXCH_ST 2

;fadd st0, st1
FADD_ST 1

;fmul st0, st5
FMUL_ST 5

;fld st2
FLD_ST 2

;fmul st0, st7
FMUL_ST 7

;faddp st1, st0
FADDP_ST 1

;fstp dword [eax]
FSTP_FLOAT
store tmp0, eax, 1

;lea eax, [eax+0x4]
add eax, eax, 4

;cmp eax, edx
cmovult eax, edx, tmpcnd, 0, 1

;jb near loc_40AEE1
ctcallz tmpcnd, loc_40AEE1

tcall loc_40AFE1
endp

proc loc_40AFE1
;fstp dword [ecx+0x40]
FSTP_FLOAT
add tmpadr, ecx, 64
store tmp0, tmpadr, 1

;fstp dword [ecx+0x44]
FSTP_FLOAT
add tmpadr, ecx, 68
store tmp0, tmpadr, 1

;fstp st0
FSTP_ST 0

;fstp st0
FSTP_ST 0

;fstp st0
FSTP_ST 0

;fstp st0
FSTP_ST 0

;mov eax, [ecx+0x24]
add tmpadr, ecx, 36
load eax, tmpadr, 1

;mov [ecx+0x28], eax
add tmpadr, ecx, 40
store eax, tmpadr, 1

;pop edx
POP edx

;ret
POP tmp1
tcall tmp1
endp

proc loc_40B000
;push edx
PUSH edx

;fld dword [ecx+0x3c]
add tmpadr, ecx, 60
load tmp1, tmpadr, 1
FLD_FLOAT tmp1

;fld dword [ecx+0x38]
add tmpadr, ecx, 56
load tmp1, tmpadr, 1
FLD_FLOAT tmp1

;fld dword [ecx+0x34]
add tmpadr, ecx, 52
load tmp1, tmpadr, 1
FLD_FLOAT tmp1

;fld dword [ecx+0x2c]
add tmpadr, ecx, 44
load tmp1, tmpadr, 1
FLD_FLOAT tmp1

;fld dword [ecx+0x44]
add tmpadr, ecx, 68
load tmp1, tmpadr, 1
FLD_FLOAT tmp1

;fld dword [ecx+0x40]
add tmpadr, ecx, 64
load tmp1, tmpadr, 1
FLD_FLOAT tmp1

;mov eax, [loc_441848]
load eax, loc_441848, 4

;lea edx, [eax*4+loc_455904]
mov tmpadr, loc_455904
shl tmp0, eax, 2
add edx, tmpadr, tmp0

;mov eax, loc_455904
mov eax, loc_455904

;jmp short loc_40B031
tcall loc_40B031
endp

;
proc loc_40B031
;fld st0
FLD_ST 0

;fmul st0, st5
FMUL_ST 5

;fld st2
FLD_ST 2

;fmul st0, st7
FMUL_ST 7

;faddp st1, st0
FADDP_ST 1

;fadd dword [eax]
load tmp1, eax, 1
FADD_FLOAT tmp1

;fxch st0, st1
FXCH_ST 1

;fxch st0, st2
FXCH_ST 2

;fmul st0, st4
FMUL_ST 4

;fld st1
FLD_ST 1

;fmul st0, st4
FMUL_ST 4

;faddp st1, st0
FADDP_ST 1

;fstp dword [eax]
FSTP_FLOAT
store tmp0, eax, 1

;lea eax, [eax+0x4]
add eax, eax, 4

;fld st0
FLD_ST 0

;fmul st0, st5
FMUL_ST 5

;fld st2
FLD_ST 2

;fmul st0, st7
FMUL_ST 7

;faddp st1, st0
FADDP_ST 1

;fadd dword [eax]
load tmp1, eax, 1
FADD_FLOAT tmp1

;fxch st0, st1
FXCH_ST 1

;fxch st0, st2
FXCH_ST 2

;fmul st0, st4
FMUL_ST 4

;fld st1
FLD_ST 1

;fmul st0, st4
FMUL_ST 4

;faddp st1, st0
FADDP_ST 1

;fstp dword [eax]
FSTP_FLOAT
store tmp0, eax, 1

;lea eax, [eax+0x4]
add eax, eax, 4

;fld st0
FLD_ST 0

;fmul st0, st5
FMUL_ST 5

;fld st2
FLD_ST 2

;fmul st0, st7
FMUL_ST 7

;faddp st1, st0
FADDP_ST 1

;fadd dword [eax]
load tmp1, eax, 1
FADD_FLOAT tmp1

;fxch st0, st1
FXCH_ST 1

;fxch st0, st2
FXCH_ST 2

;fmul st0, st4
FMUL_ST 4

;fld st1
FLD_ST 1

;fmul st0, st4
FMUL_ST 4

;faddp st1, st0
FADDP_ST 1

;fstp dword [eax]
FSTP_FLOAT
store tmp0, eax, 1

;lea eax, [eax+0x4]
add eax, eax, 4

;fld st0
FLD_ST 0

;fmul st0, st5
FMUL_ST 5

;fld st2
FLD_ST 2

;fmul st0, st7
FMUL_ST 7

;faddp st1, st0
FADDP_ST 1

;fadd dword [eax]
load tmp1, eax, 1
FADD_FLOAT tmp1

;fxch st0, st1
FXCH_ST 1

;fxch st0, st2
FXCH_ST 2

;fmul st0, st4
FMUL_ST 4

;fld st1
FLD_ST 1

;fmul st0, st4
FMUL_ST 4

;faddp st1, st0
FADDP_ST 1

;fstp dword [eax]
FSTP_FLOAT
store tmp0, eax, 1

;lea eax, [eax+0x4]
add eax, eax, 4

;fld st0
FLD_ST 0

;fmul st0, st5
FMUL_ST 5

;fld st2
FLD_ST 2

;fmul st0, st7
FMUL_ST 7

;faddp st1, st0
FADDP_ST 1

;fadd dword [eax]
load tmp1, eax, 1
FADD_FLOAT tmp1

;fxch st0, st1
FXCH_ST 1

;fxch st0, st2
FXCH_ST 2

;fmul st0, st4
FMUL_ST 4

;fld st1
FLD_ST 1

;fmul st0, st4
FMUL_ST 4

;faddp st1, st0
FADDP_ST 1

;fstp dword [eax]
FSTP_FLOAT
store tmp0, eax, 1

;lea eax, [eax+0x4]
add eax, eax, 4

;fld st0
FLD_ST 0

;fmul st0, st5
FMUL_ST 5

;fld st2
FLD_ST 2

;fmul st0, st7
FMUL_ST 7

;faddp st1, st0
FADDP_ST 1

;fadd dword [eax]
load tmp1, eax, 1
FADD_FLOAT tmp1

;fxch st0, st1
FXCH_ST 1

;fxch st0, st2
FXCH_ST 2

;fmul st0, st4
FMUL_ST 4

;fld st1
FLD_ST 1

;fmul st0, st4
FMUL_ST 4

;faddp st1, st0
FADDP_ST 1

;fstp dword [eax]
FSTP_FLOAT
store tmp0, eax, 1

;lea eax, [eax+0x4]
add eax, eax, 4

;fld st0
FLD_ST 0

;fmul st0, st5
FMUL_ST 5

;fld st2
FLD_ST 2

;fmul st0, st7
FMUL_ST 7

;faddp st1, st0
FADDP_ST 1

;fadd dword [eax]
load tmp1, eax, 1
FADD_FLOAT tmp1

;fxch st0, st1
FXCH_ST 1

;fxch st0, st2
FXCH_ST 2

;fmul st0, st4
FMUL_ST 4

;fld st1
FLD_ST 1

;fmul st0, st4
FMUL_ST 4

;faddp st1, st0
FADDP_ST 1

;fstp dword [eax]
FSTP_FLOAT
store tmp0, eax, 1

;lea eax, [eax+0x4]
add eax, eax, 4

;fld st0
FLD_ST 0

;fmul st0, st5
FMUL_ST 5

;fld st2
FLD_ST 2

;fmul st0, st7
FMUL_ST 7

;faddp st1, st0
FADDP_ST 1

;fadd dword [eax]
load tmp1, eax, 1
FADD_FLOAT tmp1

;fxch st0, st1
FXCH_ST 1

;fxch st0, st2
FXCH_ST 2

;fmul st0, st4
FMUL_ST 4

;fld st1
FLD_ST 1

;fmul st0, st4
FMUL_ST 4

;faddp st1, st0
FADDP_ST 1

;fstp dword [eax]
FSTP_FLOAT
store tmp0, eax, 1

;lea eax, [eax+0x4]
add eax, eax, 4

;cmp eax, edx
cmovult eax, edx, tmpcnd, 0, 1

;jb near loc_40B031
ctcallz tmpcnd, loc_40B031

tcall loc_40B121
endp

proc loc_40B121
;fstp dword [ecx+0x40]
FSTP_FLOAT
add tmpadr, ecx, 64
store tmp0, tmpadr, 1

;fstp dword [ecx+0x44]
FSTP_FLOAT
add tmpadr, ecx, 68
store tmp0, tmpadr, 1

;fstp st0
FSTP_ST 0

;fstp st0
FSTP_ST 0

;fstp st0
FSTP_ST 0

;fstp st0
FSTP_ST 0

;mov eax, [ecx+0x24]
add tmpadr, ecx, 36
load eax, tmpadr, 1

;mov [ecx+0x28], eax
add tmpadr, ecx, 40
store eax, tmpadr, 1

;pop edx
POP edx

;ret
POP tmp1
tcall tmp1
endp

proc loc_40B140
;push ebx
PUSH ebx

;push edx
PUSH edx

;push eax
PUSH eax

;fld dword [ecx+0x44]
add tmpadr, ecx, 68
load tmp1, tmpadr, 1
FLD_FLOAT tmp1

;fld dword [ecx+0x40]
add tmpadr, ecx, 64
load tmp1, tmpadr, 1
FLD_FLOAT tmp1

;fld dword [ecx+0x24]
add tmpadr, ecx, 36
load tmp1, tmpadr, 1
FLD_FLOAT tmp1

;fsub dword [ecx+0x28]
add tmpadr, ecx, 40
load tmp1, tmpadr, 1
FSUB_FLOAT tmp1

;fmul dword [loc_455D08]
load tmp1, loc_455D08, 4
FMUL_FLOAT tmp1

;fstp dword [esp]
FSTP_FLOAT
store tmp0, esp, 4

;mov eax, [loc_441848]
load eax, loc_441848, 4

;lea edx, [eax*4+loc_455904]
mov tmpadr, loc_455904
shl tmp0, eax, 2
add edx, tmpadr, tmp0

;mov eax, loc_455904
mov eax, loc_455904

;jmp loc_40B207
tcall loc_40B207
endp

;
proc loc_40B173
;fld st4
FLD_ST 4

;fmul st0, st3
FMUL_ST 3

;fld st6
FLD_ST 6

;fmul st0, st5
FMUL_ST 5

;faddp st1, st0
FADDP_ST 1

;fadd dword [eax]
load tmp1, eax, 1
FADD_FLOAT tmp1

;fld st5
FLD_ST 5

;fxch st0, st7
FXCH_ST 7

;fadd st0, st1
FADD_ST 1

;fmul st0, st3
FMUL_ST 3

;fxch st0, st1
FXCH_ST 1

;fxch st0, st6
FXCH_ST 6

;fmul st0, st2
FMUL_ST 2

;faddp st1, st0
FADDP_ST 1

;fstp dword [eax]
FSTP_FLOAT
store tmp0, eax, 1

;fld st4
FLD_ST 4

;fmul st0, st3
FMUL_ST 3

;fld st6
FLD_ST 6

;fmul st0, st5
FMUL_ST 5

;faddp st1, st0
FADDP_ST 1

;fadd dword [eax+0x4]
add tmpadr, eax, 4
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;fld st5
FLD_ST 5

;fxch st0, st7
FXCH_ST 7

;fadd st0, st1
FADD_ST 1

;fmul st0, st3
FMUL_ST 3

;fxch st0, st1
FXCH_ST 1

;fxch st0, st6
FXCH_ST 6

;fmul st0, st2
FMUL_ST 2

;faddp st1, st0
FADDP_ST 1

;fstp dword [eax+0x4]
FSTP_FLOAT
add tmpadr, eax, 4
store tmp0, tmpadr, 1

;fld st4
FLD_ST 4

;fmul st0, st3
FMUL_ST 3

;fld st6
FLD_ST 6

;fmul st0, st5
FMUL_ST 5

;faddp st1, st0
FADDP_ST 1

;fadd dword [eax+0x8]
add tmpadr, eax, 8
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;fld st5
FLD_ST 5

;fxch st0, st7
FXCH_ST 7

;fadd st0, st1
FADD_ST 1

;fmul st0, st3
FMUL_ST 3

;fxch st0, st1
FXCH_ST 1

;fxch st0, st6
FXCH_ST 6

;fmul st0, st2
FMUL_ST 2

;faddp st1, st0
FADDP_ST 1

;fstp dword [eax+0x8]
FSTP_FLOAT
add tmpadr, eax, 8
store tmp0, tmpadr, 1

;fld st4
FLD_ST 4

;fmul st0, st3
FMUL_ST 3

;fld st6
FLD_ST 6

;fmul st0, st5
FMUL_ST 5

;faddp st1, st0
FADDP_ST 1

;fadd dword [eax+0xc]
add tmpadr, eax, 12
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;fld st5
FLD_ST 5

;fxch st0, st7
FXCH_ST 7

;fadd st0, st1
FADD_ST 1

;fmul st0, st3
FMUL_ST 3

;fxch st0, st1
FXCH_ST 1

;fxch st0, st6
FXCH_ST 6

;fmul st0, st2
FMUL_ST 2

;faddp st1, st0
FADDP_ST 1

;fstp dword [eax+0xc]
FSTP_FLOAT
add tmpadr, eax, 12
store tmp0, tmpadr, 1

;dec ebx
sub ebx, ebx, 1
mov tmpcnd, ebx

;lea eax, [eax+0x10]
add eax, eax, 16

;jnz near loc_40B173
ctcallnz tmpcnd, loc_40B173

tcall loc_40B1FB
endp

proc loc_40B1FB
;cmp eax, edx
cmovult eax, edx, tmpcnd, 0, 1

;jae short loc_40B25B
ctcallnz tmpcnd, loc_40B25B

tcall loc_40B1FF
endp

proc loc_40B1FF
;fstp st0
FSTP_ST 0

;fstp st0
FSTP_ST 0

;fstp st0
FSTP_ST 0

;fstp st0
FSTP_ST 0

tcall loc_40B207
endp

proc loc_40B207
;mov ebx, [loc_455D0C]
load ebx, loc_455D0C, 4

;shr ebx, 0x2
lshr ebx, ebx, 2

;fld dword [ecx+0x28]
add tmpadr, ecx, 40
load tmp1, tmpadr, 1
FLD_FLOAT tmp1

;fadd dword [esp]
load tmp1, esp, 4
FADD_FLOAT tmp1

;fst dword [ecx+0x28]
FST_FLOAT
add tmpadr, ecx, 40
store tmp0, tmpadr, 1

;fld st0
FLD_ST 0

;fmul st1, st0
FMUL_TO_ST 1

;fmul dword [ecx+0x48]
add tmpadr, ecx, 72
load tmp1, tmpadr, 1
FMUL_FLOAT tmp1

;fld dword [loc_419670]
load tmp1, loc_419670, 4
FLD_FLOAT tmp1

;fld dword [loc_419678]
load tmp1, loc_419678, 4
FLD_FLOAT tmp1

;fmul st3, st0
FMUL_TO_ST 3

;fadd st0, st2
FADD_ST 2

;fadd st0, st3
FADD_ST 3

;fdivp st1, st0
FDIVP_ST 1

;fld st2
FLD_ST 2

;fadd st0, st3
FADD_ST 3

;fld dword [loc_41967C]
load tmp1, loc_41967C, 4
FLD_FLOAT tmp1

;fsub st0, st1
FSUB_ST 1

;fmul st0, st2
FMUL_ST 2

;fxch st0, st3
FXCH_ST 3

;fsub st0, st4
FSUB_ST 4

;fsub dword [loc_419678]
load tmp1, loc_419678, 4
FSUB_FLOAT tmp1

;fmul st0, st2
FMUL_ST 2

;fxch st0, st4
FXCH_ST 4

;fmul st0, st2
FMUL_ST 2

;fxch st0, st2
FXCH_ST 2

;fmulp st1, st0
FMULP_ST 1

;jmp loc_40B173
tcall loc_40B173
endp

proc loc_40B25B
;xor eax, eax
xor eax, eax, eax

;mov [ecx+0xc], eax
add tmpadr, ecx, 12
store eax, tmpadr, 1

;fstp dword [ecx+0x30]
FSTP_FLOAT
add tmpadr, ecx, 48
store tmp0, tmpadr, 1

;fstp dword [ecx+0x2c]
FSTP_FLOAT
add tmpadr, ecx, 44
store tmp0, tmpadr, 1

;fstp dword [ecx+0x38]
FSTP_FLOAT
add tmpadr, ecx, 56
store tmp0, tmpadr, 1

;fstp dword [ecx+0x3c]
FSTP_FLOAT
add tmpadr, ecx, 60
store tmp0, tmpadr, 1

;fstp dword [ecx+0x40]
FSTP_FLOAT
add tmpadr, ecx, 64
store tmp0, tmpadr, 1

;fstp dword [ecx+0x44]
FSTP_FLOAT
add tmpadr, ecx, 68
store tmp0, tmpadr, 1

;pop eax
POP eax

;pop edx
POP edx

;pop ebx
POP ebx

;ret
POP tmp1
tcall tmp1
endp

proc loc_40B280
;push ebx
PUSH ebx

;push edx
PUSH edx

;push eax
PUSH eax

;fld dword [ecx+0x44]
add tmpadr, ecx, 68
load tmp1, tmpadr, 1
FLD_FLOAT tmp1

;fld dword [ecx+0x40]
add tmpadr, ecx, 64
load tmp1, tmpadr, 1
FLD_FLOAT tmp1

;fld dword [ecx+0x24]
add tmpadr, ecx, 36
load tmp1, tmpadr, 1
FLD_FLOAT tmp1

;fsub dword [ecx+0x28]
add tmpadr, ecx, 40
load tmp1, tmpadr, 1
FSUB_FLOAT tmp1

;fmul dword [loc_455D08]
load tmp1, loc_455D08, 4
FMUL_FLOAT tmp1

;fstp dword [esp]
FSTP_FLOAT
store tmp0, esp, 4

;mov eax, [loc_441848]
load eax, loc_441848, 4

;lea edx, [eax*4+loc_455904]
mov tmpadr, loc_455904
shl tmp0, eax, 2
add edx, tmpadr, tmp0

;mov eax, loc_455904
mov eax, loc_455904

;jmp loc_40B347
tcall loc_40B347
endp

;
proc loc_40B2B3
;fld st4
FLD_ST 4

;fmul st0, st3
FMUL_ST 3

;fld st6
FLD_ST 6

;fmul st0, st5
FMUL_ST 5

;faddp st1, st0
FADDP_ST 1

;fadd dword [eax]
load tmp1, eax, 1
FADD_FLOAT tmp1

;fld st5
FLD_ST 5

;fxch st0, st7
FXCH_ST 7

;fadd st0, st1
FADD_ST 1

;fmul st0, st3
FMUL_ST 3

;fxch st0, st1
FXCH_ST 1

;fxch st0, st6
FXCH_ST 6

;fmul st0, st2
FMUL_ST 2

;faddp st1, st0
FADDP_ST 1

;fstp dword [eax]
FSTP_FLOAT
store tmp0, eax, 1

;fld st4
FLD_ST 4

;fmul st0, st3
FMUL_ST 3

;fld st6
FLD_ST 6

;fmul st0, st5
FMUL_ST 5

;faddp st1, st0
FADDP_ST 1

;fadd dword [eax+0x4]
add tmpadr, eax, 4
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;fld st5
FLD_ST 5

;fxch st0, st7
FXCH_ST 7

;fadd st0, st1
FADD_ST 1

;fmul st0, st3
FMUL_ST 3

;fxch st0, st1
FXCH_ST 1

;fxch st0, st6
FXCH_ST 6

;fmul st0, st2
FMUL_ST 2

;faddp st1, st0
FADDP_ST 1

;fstp dword [eax+0x4]
FSTP_FLOAT
add tmpadr, eax, 4
store tmp0, tmpadr, 1

;fld st4
FLD_ST 4

;fmul st0, st3
FMUL_ST 3

;fld st6
FLD_ST 6

;fmul st0, st5
FMUL_ST 5

;faddp st1, st0
FADDP_ST 1

;fadd dword [eax+0x8]
add tmpadr, eax, 8
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;fld st5
FLD_ST 5

;fxch st0, st7
FXCH_ST 7

;fadd st0, st1
FADD_ST 1

;fmul st0, st3
FMUL_ST 3

;fxch st0, st1
FXCH_ST 1

;fxch st0, st6
FXCH_ST 6

;fmul st0, st2
FMUL_ST 2

;faddp st1, st0
FADDP_ST 1

;fstp dword [eax+0x8]
FSTP_FLOAT
add tmpadr, eax, 8
store tmp0, tmpadr, 1

;fld st4
FLD_ST 4

;fmul st0, st3
FMUL_ST 3

;fld st6
FLD_ST 6

;fmul st0, st5
FMUL_ST 5

;faddp st1, st0
FADDP_ST 1

;fadd dword [eax+0xc]
add tmpadr, eax, 12
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;fld st5
FLD_ST 5

;fxch st0, st7
FXCH_ST 7

;fadd st0, st1
FADD_ST 1

;fmul st0, st3
FMUL_ST 3

;fxch st0, st1
FXCH_ST 1

;fxch st0, st6
FXCH_ST 6

;fmul st0, st2
FMUL_ST 2

;faddp st1, st0
FADDP_ST 1

;fstp dword [eax+0xc]
FSTP_FLOAT
add tmpadr, eax, 12
store tmp0, tmpadr, 1

;dec ebx
sub ebx, ebx, 1
mov tmpcnd, ebx

;lea eax, [eax+0x10]
add eax, eax, 16

;jnz near loc_40B2B3
ctcallnz tmpcnd, loc_40B2B3

tcall loc_40B33B
endp

proc loc_40B33B
;cmp eax, edx
cmovult eax, edx, tmpcnd, 0, 1

;jae short loc_40B3A3
ctcallnz tmpcnd, loc_40B3A3

tcall loc_40B33F
endp

proc loc_40B33F
;fstp st0
FSTP_ST 0

;fstp st0
FSTP_ST 0

;fstp st0
FSTP_ST 0

;fstp st0
FSTP_ST 0

tcall loc_40B347
endp

proc loc_40B347
;mov ebx, [loc_455D0C]
load ebx, loc_455D0C, 4

;shr ebx, 0x2
lshr ebx, ebx, 2

;fld dword [ecx+0x28]
add tmpadr, ecx, 40
load tmp1, tmpadr, 1
FLD_FLOAT tmp1

;fadd dword [esp]
load tmp1, esp, 4
FADD_FLOAT tmp1

;fst dword [ecx+0x28]
FST_FLOAT
add tmpadr, ecx, 40
store tmp0, tmpadr, 1

;fld st0
FLD_ST 0

;fmul st1, st0
FMUL_TO_ST 1

;fmul dword [ecx+0x48]
add tmpadr, ecx, 72
load tmp1, tmpadr, 1
FMUL_FLOAT tmp1

;fld dword [loc_419670]
load tmp1, loc_419670, 4
FLD_FLOAT tmp1

;fld dword [loc_419678]
load tmp1, loc_419678, 4
FLD_FLOAT tmp1

;fmul st3, st0
FMUL_TO_ST 3

;fadd st0, st2
FADD_ST 2

;fadd st0, st3
FADD_ST 3

;fdivp st1, st0
FDIVP_ST 1

;fld dword [loc_41967C]
load tmp1, loc_41967C, 4
FLD_FLOAT tmp1

;fsub st0, st3
FSUB_ST 3

;fsub st0, st3
FSUB_ST 3

;fmul st0, st1
FMUL_ST 1

;fxch st0, st2
FXCH_ST 2

;fsub st0, st3
FSUB_ST 3

;fsub dword [loc_419678]
load tmp1, loc_419678, 4
FSUB_FLOAT tmp1

;fmul st0, st1
FMUL_ST 1

;fstp st3
FSTP_ST 3

;fld st0
FLD_ST 0

;fmul dword [loc_419678]
load tmp1, loc_419678, 4
FMUL_FLOAT tmp1

;fxch st0, st1
FXCH_ST 1

;fmul dword [loc_419680]
load tmp1, loc_419680, 4
FMUL_FLOAT tmp1

;jmp loc_40B2B3
tcall loc_40B2B3
endp

proc loc_40B3A3
;xor eax, eax
xor eax, eax, eax

;mov [ecx+0xc], eax
add tmpadr, ecx, 12
store eax, tmpadr, 1

;fstp dword [ecx+0x30]
FSTP_FLOAT
add tmpadr, ecx, 48
store tmp0, tmpadr, 1

;fstp dword [ecx+0x2c]
FSTP_FLOAT
add tmpadr, ecx, 44
store tmp0, tmpadr, 1

;fstp dword [ecx+0x38]
FSTP_FLOAT
add tmpadr, ecx, 56
store tmp0, tmpadr, 1

;fstp dword [ecx+0x3c]
FSTP_FLOAT
add tmpadr, ecx, 60
store tmp0, tmpadr, 1

;fstp dword [ecx+0x40]
FSTP_FLOAT
add tmpadr, ecx, 64
store tmp0, tmpadr, 1

;fstp dword [ecx+0x44]
FSTP_FLOAT
add tmpadr, ecx, 68
store tmp0, tmpadr, 1

;pop eax
POP eax

;pop edx
POP edx

;pop ebx
POP ebx

;ret
POP tmp1
tcall tmp1
endp

proc loc_40B3C0
;push ebx
PUSH ebx

;push edx
PUSH edx

;push eax
PUSH eax

;fld dword [ecx+0x44]
add tmpadr, ecx, 68
load tmp1, tmpadr, 1
FLD_FLOAT tmp1

;fld dword [ecx+0x40]
add tmpadr, ecx, 64
load tmp1, tmpadr, 1
FLD_FLOAT tmp1

;fld dword [ecx+0x24]
add tmpadr, ecx, 36
load tmp1, tmpadr, 1
FLD_FLOAT tmp1

;fsub dword [ecx+0x28]
add tmpadr, ecx, 40
load tmp1, tmpadr, 1
FSUB_FLOAT tmp1

;fmul dword [loc_455D08]
load tmp1, loc_455D08, 4
FMUL_FLOAT tmp1

;fstp dword [esp]
FSTP_FLOAT
store tmp0, esp, 4

;mov eax, [loc_441848]
load eax, loc_441848, 4

;lea edx, [eax*4+loc_455904]
mov tmpadr, loc_455904
shl tmp0, eax, 2
add edx, tmpadr, tmp0

;mov eax, loc_455904
mov eax, loc_455904

;jmp loc_40B47B
tcall loc_40B47B
endp

;
proc loc_40B3F3
;fld st4
FLD_ST 4

;fmul st0, st3
FMUL_ST 3

;fld st6
FLD_ST 6

;fmul st0, st5
FMUL_ST 5

;faddp st1, st0
FADDP_ST 1

;fadd dword [eax]
load tmp1, eax, 1
FADD_FLOAT tmp1

;fld st5
FLD_ST 5

;fxch st0, st7
FXCH_ST 7

;fmul st0, st2
FMUL_ST 2

;fxch st0, st1
FXCH_ST 1

;fst st6
FST_ST 6

;fmul st0, st3
FMUL_ST 3

;faddp st1, st0
FADDP_ST 1

;fstp dword [eax]
FSTP_FLOAT
store tmp0, eax, 1

;fld st4
FLD_ST 4

;fmul st0, st3
FMUL_ST 3

;fld st6
FLD_ST 6

;fmul st0, st5
FMUL_ST 5

;faddp st1, st0
FADDP_ST 1

;fadd dword [eax+0x4]
add tmpadr, eax, 4
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;fld st5
FLD_ST 5

;fxch st0, st7
FXCH_ST 7

;fmul st0, st2
FMUL_ST 2

;fxch st0, st1
FXCH_ST 1

;fst st6
FST_ST 6

;fmul st0, st3
FMUL_ST 3

;faddp st1, st0
FADDP_ST 1

;fstp dword [eax+0x4]
FSTP_FLOAT
add tmpadr, eax, 4
store tmp0, tmpadr, 1

;fld st4
FLD_ST 4

;fmul st0, st3
FMUL_ST 3

;fld st6
FLD_ST 6

;fmul st0, st5
FMUL_ST 5

;faddp st1, st0
FADDP_ST 1

;fadd dword [eax+0x8]
add tmpadr, eax, 8
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;fld st5
FLD_ST 5

;fxch st0, st7
FXCH_ST 7

;fmul st0, st2
FMUL_ST 2

;fxch st0, st1
FXCH_ST 1

;fst st6
FST_ST 6

;fmul st0, st3
FMUL_ST 3

;faddp st1, st0
FADDP_ST 1

;fstp dword [eax+0x8]
FSTP_FLOAT
add tmpadr, eax, 8
store tmp0, tmpadr, 1

;fld st4
FLD_ST 4

;fmul st0, st3
FMUL_ST 3

;fld st6
FLD_ST 6

;fmul st0, st5
FMUL_ST 5

;faddp st1, st0
FADDP_ST 1

;fadd dword [eax+0xc]
add tmpadr, eax, 12
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;fld st5
FLD_ST 5

;fxch st0, st7
FXCH_ST 7

;fmul st0, st2
FMUL_ST 2

;fxch st0, st1
FXCH_ST 1

;fst st6
FST_ST 6

;fmul st0, st3
FMUL_ST 3

;faddp st1, st0
FADDP_ST 1

;fstp dword [eax+0xc]
FSTP_FLOAT
add tmpadr, eax, 12
store tmp0, tmpadr, 1

;dec ebx
sub ebx, ebx, 1
mov tmpcnd, ebx

;lea eax, [eax+0x10]
add eax, eax, 16

;jnz short loc_40B3F3
ctcallnz tmpcnd, loc_40B3F3

tcall loc_40B46F
endp

proc loc_40B46F
;cmp eax, edx
cmovult eax, edx, tmpcnd, 0, 1

;jae short loc_40B4CF
ctcallnz tmpcnd, loc_40B4CF

tcall loc_40B473
endp

proc loc_40B473
;fstp st0
FSTP_ST 0

;fstp st0
FSTP_ST 0

;fstp st0
FSTP_ST 0

;fstp st0
FSTP_ST 0

tcall loc_40B47B
endp

proc loc_40B47B
;mov ebx, [loc_455D0C]
load ebx, loc_455D0C, 4

;shr ebx, 0x2
lshr ebx, ebx, 2

;fld dword [ecx+0x28]
add tmpadr, ecx, 40
load tmp1, tmpadr, 1
FLD_FLOAT tmp1

;fadd dword [esp]
load tmp1, esp, 4
FADD_FLOAT tmp1

;fst dword [ecx+0x28]
FST_FLOAT
add tmpadr, ecx, 40
store tmp0, tmpadr, 1

;fld st0
FLD_ST 0

;fmul st1, st0
FMUL_TO_ST 1

;fmul dword [ecx+0x48]
add tmpadr, ecx, 72
load tmp1, tmpadr, 1
FMUL_FLOAT tmp1

;fld dword [loc_419670]
load tmp1, loc_419670, 4
FLD_FLOAT tmp1

;fld dword [loc_419678]
load tmp1, loc_419678, 4
FLD_FLOAT tmp1

;fmul st3, st0
FMUL_TO_ST 3

;fadd st0, st2
FADD_ST 2

;fadd st0, st3
FADD_ST 3

;fdivp st1, st0
FDIVP_ST 1

;fld dword [loc_41967C]
load tmp1, loc_41967C, 4
FLD_FLOAT tmp1

;fsub st0, st3
FSUB_ST 3

;fsub st0, st3
FSUB_ST 3

;fmul st0, st1
FMUL_ST 1

;fxch st0, st2
FXCH_ST 2

;fld st0
FLD_ST 0

;fsub st0, st4
FSUB_ST 4

;fsub dword [loc_419678]
load tmp1, loc_419678, 4
FSUB_FLOAT tmp1

;fmul st0, st2
FMUL_ST 2

;fstp st4
FSTP_ST 4

;fmulp st1, st0
FMULP_ST 1

;fld st0
FLD_ST 0

;fchs
FCHS_VOID

;jmp loc_40B3F3
tcall loc_40B3F3
endp

proc loc_40B4CF
;xor eax, eax
xor eax, eax, eax

;mov [ecx+0xc], eax
add tmpadr, ecx, 12
store eax, tmpadr, 1

;fstp dword [ecx+0x34]
FSTP_FLOAT
add tmpadr, ecx, 52
store tmp0, tmpadr, 1

;fstp dword [ecx+0x2c]
FSTP_FLOAT
add tmpadr, ecx, 44
store tmp0, tmpadr, 1

;fstp dword [ecx+0x38]
FSTP_FLOAT
add tmpadr, ecx, 56
store tmp0, tmpadr, 1

;fstp dword [ecx+0x3c]
FSTP_FLOAT
add tmpadr, ecx, 60
store tmp0, tmpadr, 1

;fstp dword [ecx+0x40]
FSTP_FLOAT
add tmpadr, ecx, 64
store tmp0, tmpadr, 1

;fstp dword [ecx+0x44]
FSTP_FLOAT
add tmpadr, ecx, 68
store tmp0, tmpadr, 1

;pop eax
POP eax

;pop edx
POP edx

;pop ebx
POP ebx

;ret
POP tmp1
tcall tmp1
endp

proc loc_40B4F0
;push ebx
PUSH ebx

;push esi
PUSH esi

;push edi
PUSH edi

;push ecx
PUSH ecx

;fld dword [loc_445880]
load tmp1, loc_445880, 4
FLD_FLOAT tmp1

;fld dword [loc_445878]
load tmp1, loc_445878, 4
FLD_FLOAT tmp1

;fld dword [loc_445874]
load tmp1, loc_445874, 4
FLD_FLOAT tmp1

;fld dword [loc_445870]
load tmp1, loc_445870, 4
FLD_FLOAT tmp1

;mov ecx, loc_441048
mov ecx, loc_441048

;mov ebx, 0xfff
mov ebx, 0xfff

;mov edx, [loc_44585C]
load edx, loc_44585C, 4

;dec edx
sub edx, edx, 1

;sub edx, [loc_445860]
load tmp1, loc_445860, 4
sub edx, edx, tmp1

;mov edi, loc_441850
mov edi, loc_441850

;mov eax, [loc_441848]
load eax, loc_441848, 4

;lea esi, [ecx+eax*4]
shl tmpadr, eax, 2
add esi, tmpadr, ecx

;jmp short loc_40B548
tcall loc_40B548
endp

proc loc_40B540
;cmp ecx, esi
cmovult ecx, esi, tmpcnd, 0, 1

;jae near loc_40B5D1
ctcallnz tmpcnd, loc_40B5D1

tcall loc_40B548
endp

proc loc_40B548
;fld st0
FLD_ST 0

;fabs
FABS_VOID

;fist dword [esp]
FIST_INT32
store tmp0, esp, 4

;mov eax, edx
mov eax, edx

;sub eax, [esp]
load tmp1, esp, 4
sub eax, eax, tmp1

;and eax, ebx
and eax, eax, ebx

;lea eax, [edi+eax*4]
shl tmpadr, eax, 2
add eax, tmpadr, edi

;fild dword [esp]
load tmp1, esp, 4
FILD_INT32 tmp1

;fld st1
FLD_ST 1

;fxch st0, st1
FXCH_ST 1

;fsubp st1, st0
FSUBP_ST 1

;fld dword [eax+0x4]
add tmpadr, eax, 4
load tmp1, tmpadr, 1
FLD_FLOAT tmp1

;fld dword [eax]
load tmp1, eax, 1
FLD_FLOAT tmp1

;fsub st0, st1
FSUB_ST 1

;fmulp st2, st0
FMULP_ST 2

;faddp st1, st0
FADDP_ST 1

;fadd dword [ecx]
load tmp1, ecx, 1
FADD_FLOAT tmp1

;fstp dword [ecx]
FSTP_FLOAT
store tmp0, ecx, 1

;fld st3
FLD_ST 3

;fxch st0, st1
FXCH_ST 1

;fsubp st1, st0
FSUBP_ST 1

;fist dword [esp]
FIST_INT32
store tmp0, esp, 4

;mov eax, edx
mov eax, edx

;sub eax, [esp]
load tmp1, esp, 4
sub eax, eax, tmp1

;and eax, ebx
and eax, eax, ebx

;lea eax, [edi+eax*4]
shl tmpadr, eax, 2
add eax, tmpadr, edi

;fild dword [esp]
load tmp1, esp, 4
FILD_INT32 tmp1

;fsubp st1, st0
FSUBP_ST 1

;fld dword [eax+0x4]
add tmpadr, eax, 4
load tmp1, tmpadr, 1
FLD_FLOAT tmp1

;fld dword [eax]
load tmp1, eax, 1
FLD_FLOAT tmp1

;fsub st0, st1
FSUB_ST 1

;fmulp st2, st0
FMULP_ST 2

;faddp st1, st0
FADDP_ST 1

;fld st0
FLD_ST 0

;fadd dword [ecx+0x400]
add tmpadr, ecx, 1024
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;fstp dword [ecx+0x400]
FSTP_FLOAT
add tmpadr, ecx, 1024
store tmp0, tmpadr, 1

;fmul st0, st4
FMUL_ST 4

;mov eax, [loc_445860]
load eax, loc_445860, 4

;inc edx
add edx, edx, 1

;add eax, edx
add eax, eax, edx

;lea eax, [edi+eax*4]
shl tmpadr, eax, 2
add eax, tmpadr, edi

;fadd dword [eax]
load tmp1, eax, 1
FADD_FLOAT tmp1

;fstp dword [eax]
FSTP_FLOAT
store tmp0, eax, 1

;lea ecx, [ecx+0x4]
add ecx, ecx, 4

;fadd st0, st1
FADD_ST 1

;fcom st0, st2
FCOM_ST 2

;fnstsw ax
FNSTSW_VOID
and eax, eax, 0xffff0000
or eax, eax, tmp0

;test ah, 0x41
and tmpcnd, eax, 0x4100

;jnz near loc_40B540
ctcallnz tmpcnd, loc_40B540

tcall loc_40B5C5
endp

proc loc_40B5C5
;fsub st0, st2
FSUB_ST 2

;fsub st0, st2
FSUB_ST 2

;cmp ecx, esi
cmovult ecx, esi, tmpcnd, 0, 1

;jb near loc_40B548
ctcallz tmpcnd, loc_40B548

tcall loc_40B5D1
endp

proc loc_40B5D1
;fstp dword [loc_445870]
FSTP_FLOAT
store tmp0, loc_445870, 4

;fstp st0
FSTP_ST 0

;fstp st0
FSTP_ST 0

;fstp st0
FSTP_ST 0

;pop ecx
POP ecx

;pop edi
POP edi

;pop esi
POP esi

;pop ebx
POP ebx

;ret
POP tmp1
tcall tmp1
endp

proc loc_40B5F0
;push ebx
PUSH ebx

;push esi
PUSH esi

;push edi
PUSH edi

;push ecx
PUSH ecx

;fld dword [loc_445880]
load tmp1, loc_445880, 4
FLD_FLOAT tmp1

;fld dword [loc_445878]
load tmp1, loc_445878, 4
FLD_FLOAT tmp1

;fld dword [loc_445874]
load tmp1, loc_445874, 4
FLD_FLOAT tmp1

;fld dword [loc_445870]
load tmp1, loc_445870, 4
FLD_FLOAT tmp1

;mov ecx, loc_441048
mov ecx, loc_441048

;mov ebx, [loc_445860]
load ebx, loc_445860, 4

;mov edx, [loc_44585C]
load edx, loc_44585C, 4

;dec edx
sub edx, edx, 1

;sub edx, ebx
sub edx, edx, ebx

;mov edi, loc_441850
mov edi, loc_441850

;mov eax, [loc_441848]
load eax, loc_441848, 4

;lea esi, [ecx+eax*4]
shl tmpadr, eax, 2
add esi, tmpadr, ecx

;jmp short loc_40B634
tcall loc_40B634
endp

proc loc_40B630
;cmp ecx, esi
cmovult ecx, esi, tmpcnd, 0, 1

;jae short loc_40B6AE
ctcallnz tmpcnd, loc_40B6AE

tcall loc_40B634
endp

proc loc_40B634
;fld st0
FLD_ST 0

;fabs
FABS_VOID

;fist dword [esp]
FIST_INT32
store tmp0, esp, 4

;mov eax, edx
mov eax, edx

;sub eax, [esp]
load tmp1, esp, 4
sub eax, eax, tmp1

;lea eax, [edi+eax*4]
shl tmpadr, eax, 2
add eax, tmpadr, edi

;fild dword [esp]
load tmp1, esp, 4
FILD_INT32 tmp1

;fld st1
FLD_ST 1

;fxch st0, st1
FXCH_ST 1

;fsubp st1, st0
FSUBP_ST 1

;fld dword [eax+0x4]
add tmpadr, eax, 4
load tmp1, tmpadr, 1
FLD_FLOAT tmp1

;fld dword [eax]
load tmp1, eax, 1
FLD_FLOAT tmp1

;fsub st0, st1
FSUB_ST 1

;fmulp st2, st0
FMULP_ST 2

;faddp st1, st0
FADDP_ST 1

;fadd dword [ecx]
load tmp1, ecx, 1
FADD_FLOAT tmp1

;fstp dword [ecx]
FSTP_FLOAT
store tmp0, ecx, 1

;fld st3
FLD_ST 3

;fxch st0, st1
FXCH_ST 1

;fsubp st1, st0
FSUBP_ST 1

;fist dword [esp]
FIST_INT32
store tmp0, esp, 4

;mov eax, edx
mov eax, edx

;sub eax, [esp]
load tmp1, esp, 4
sub eax, eax, tmp1

;lea eax, [edi+eax*4]
shl tmpadr, eax, 2
add eax, tmpadr, edi

;fild dword [esp]
load tmp1, esp, 4
FILD_INT32 tmp1

;fsubp st1, st0
FSUBP_ST 1

;fld dword [eax+0x4]
add tmpadr, eax, 4
load tmp1, tmpadr, 1
FLD_FLOAT tmp1

;fld dword [eax]
load tmp1, eax, 1
FLD_FLOAT tmp1

;fsub st0, st1
FSUB_ST 1

;fmulp st2, st0
FMULP_ST 2

;faddp st1, st0
FADDP_ST 1

;fld st0
FLD_ST 0

;fadd dword [ecx+0x400]
add tmpadr, ecx, 1024
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;fstp dword [ecx+0x400]
FSTP_FLOAT
add tmpadr, ecx, 1024
store tmp0, tmpadr, 1

;fmul st0, st4
FMUL_ST 4

;inc edx
add edx, edx, 1

;mov eax, ebx
mov eax, ebx

;add eax, edx
add eax, eax, edx

;lea eax, [edi+eax*4]
shl tmpadr, eax, 2
add eax, tmpadr, edi

;fadd dword [eax]
load tmp1, eax, 1
FADD_FLOAT tmp1

;fstp dword [eax]
FSTP_FLOAT
store tmp0, eax, 1

;lea ecx, [ecx+0x4]
add ecx, ecx, 4

;fadd st0, st1
FADD_ST 1

;fcom st0, st2
FCOM_ST 2

;fnstsw ax
FNSTSW_VOID
and eax, eax, 0xffff0000
or eax, eax, tmp0

;test ah, 0x41
and tmpcnd, eax, 0x4100

;jnz short loc_40B630
ctcallnz tmpcnd, loc_40B630

tcall loc_40B6A6
endp

proc loc_40B6A6
;fsub st0, st2
FSUB_ST 2

;fsub st0, st2
FSUB_ST 2

;cmp ecx, esi
cmovult ecx, esi, tmpcnd, 0, 1

;jb short loc_40B634
ctcallz tmpcnd, loc_40B634

tcall loc_40B6AE
endp

proc loc_40B6AE
;fstp dword [loc_445870]
FSTP_FLOAT
store tmp0, loc_445870, 4

;fstp st0
FSTP_ST 0

;fstp st0
FSTP_ST 0

;fstp st0
FSTP_ST 0

;pop ecx
POP ecx

;pop edi
POP edi

;pop esi
POP esi

;pop ebx
POP ebx

;ret
POP tmp1
tcall tmp1
endp

proc loc_40B6C0
;push ebx
PUSH ebx

;push esi
PUSH esi

;push edi
PUSH edi

;push ecx
PUSH ecx

;fld dword [loc_445878]
load tmp1, loc_445878, 4
FLD_FLOAT tmp1

;fld dword [loc_445874]
load tmp1, loc_445874, 4
FLD_FLOAT tmp1

;fld dword [loc_445870]
load tmp1, loc_445870, 4
FLD_FLOAT tmp1

;mov ecx, loc_441048
mov ecx, loc_441048

;mov ebx, 0xfff
mov ebx, 0xfff

;mov edx, [loc_44585C]
load edx, loc_44585C, 4

;dec edx
sub edx, edx, 1

;sub edx, [loc_445860]
load tmp1, loc_445860, 4
sub edx, edx, tmp1

;mov edi, loc_441850
mov edi, loc_441850

;mov eax, [loc_441848]
load eax, loc_441848, 4

;lea esi, [ecx+eax*4]
shl tmpadr, eax, 2
add esi, tmpadr, ecx

;jmp short loc_40B704
tcall loc_40B704
endp

proc loc_40B700
;cmp ecx, esi
cmovult ecx, esi, tmpcnd, 0, 1

;jae short loc_40B773
ctcallnz tmpcnd, loc_40B773

tcall loc_40B704
endp

proc loc_40B704
;fld st0
FLD_ST 0

;fabs
FABS_VOID

;fist dword [esp]
FIST_INT32
store tmp0, esp, 4

;mov eax, edx
mov eax, edx

;sub eax, [esp]
load tmp1, esp, 4
sub eax, eax, tmp1

;and eax, ebx
and eax, eax, ebx

;lea eax, [edi+eax*4]
shl tmpadr, eax, 2
add eax, tmpadr, edi

;fild dword [esp]
load tmp1, esp, 4
FILD_INT32 tmp1

;fld st1
FLD_ST 1

;fxch st0, st1
FXCH_ST 1

;fsubp st1, st0
FSUBP_ST 1

;fld dword [eax+0x4]
add tmpadr, eax, 4
load tmp1, tmpadr, 1
FLD_FLOAT tmp1

;fld dword [eax]
load tmp1, eax, 1
FLD_FLOAT tmp1

;fsub st0, st1
FSUB_ST 1

;fmulp st2, st0
FMULP_ST 2

;faddp st1, st0
FADDP_ST 1

;fadd dword [ecx]
load tmp1, ecx, 1
FADD_FLOAT tmp1

;fstp dword [ecx]
FSTP_FLOAT
store tmp0, ecx, 1

;fld st3
FLD_ST 3

;fxch st0, st1
FXCH_ST 1

;fsubp st1, st0
FSUBP_ST 1

;fist dword [esp]
FIST_INT32
store tmp0, esp, 4

;mov eax, edx
mov eax, edx

;sub eax, [esp]
load tmp1, esp, 4
sub eax, eax, tmp1

;and eax, ebx
and eax, eax, ebx

;lea eax, [edi+eax*4]
shl tmpadr, eax, 2
add eax, tmpadr, edi

;fild dword [esp]
load tmp1, esp, 4
FILD_INT32 tmp1

;fsubp st1, st0
FSUBP_ST 1

;fld dword [eax+0x4]
add tmpadr, eax, 4
load tmp1, tmpadr, 1
FLD_FLOAT tmp1

;fld dword [eax]
load tmp1, eax, 1
FLD_FLOAT tmp1

;fsub st0, st1
FSUB_ST 1

;fmulp st2, st0
FMULP_ST 2

;faddp st1, st0
FADDP_ST 1

;fadd dword [ecx+0x400]
add tmpadr, ecx, 1024
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;fstp dword [ecx+0x400]
FSTP_FLOAT
add tmpadr, ecx, 1024
store tmp0, tmpadr, 1

;inc edx
add edx, edx, 1

;lea ecx, [ecx+0x4]
add ecx, ecx, 4

;fadd st0, st1
FADD_ST 1

;fcom st0, st2
FCOM_ST 2

;fnstsw ax
FNSTSW_VOID
and eax, eax, 0xffff0000
or eax, eax, tmp0

;test ah, 0x41
and tmpcnd, eax, 0x4100

;jnz short loc_40B700
ctcallnz tmpcnd, loc_40B700

tcall loc_40B76B
endp

proc loc_40B76B
;fsub st0, st2
FSUB_ST 2

;fsub st0, st2
FSUB_ST 2

;cmp ecx, esi
cmovult ecx, esi, tmpcnd, 0, 1

;jb short loc_40B704
ctcallz tmpcnd, loc_40B704

tcall loc_40B773
endp

proc loc_40B773
;fstp dword [loc_445870]
FSTP_FLOAT
store tmp0, loc_445870, 4

;fstp st0
FSTP_ST 0

;fstp st0
FSTP_ST 0

;pop ecx
POP ecx

;pop edi
POP edi

;pop esi
POP esi

;pop ebx
POP ebx

;ret
POP tmp1
tcall tmp1
endp

proc loc_40B790
;push ebx
PUSH ebx

;push esi
PUSH esi

;push ecx
PUSH ecx

;fld dword [loc_445878]
load tmp1, loc_445878, 4
FLD_FLOAT tmp1

;fld dword [loc_445874]
load tmp1, loc_445874, 4
FLD_FLOAT tmp1

;fld dword [loc_445870]
load tmp1, loc_445870, 4
FLD_FLOAT tmp1

;mov ecx, loc_441048
mov ecx, loc_441048

;mov edx, [loc_44585C]
load edx, loc_44585C, 4

;dec edx
sub edx, edx, 1

;sub edx, [loc_445860]
load tmp1, loc_445860, 4
sub edx, edx, tmp1

;mov ebx, loc_441850
mov ebx, loc_441850

;mov eax, [loc_441848]
load eax, loc_441848, 4

;lea esi, [ecx+eax*4]
shl tmpadr, eax, 2
add esi, tmpadr, ecx

;jmp short loc_40B7D4
tcall loc_40B7D4
endp

proc loc_40B7D0
;cmp ecx, esi
cmovult ecx, esi, tmpcnd, 0, 1

;jae short loc_40B83F
ctcallnz tmpcnd, loc_40B83F

tcall loc_40B7D4
endp

proc loc_40B7D4
;fld st0
FLD_ST 0

;fabs
FABS_VOID

;fist dword [esp]
FIST_INT32
store tmp0, esp, 4

;mov eax, edx
mov eax, edx

;sub eax, [esp]
load tmp1, esp, 4
sub eax, eax, tmp1

;lea eax, [ebx+eax*4]
shl tmpadr, eax, 2
add eax, tmpadr, ebx

;fild dword [esp]
load tmp1, esp, 4
FILD_INT32 tmp1

;fld st1
FLD_ST 1

;fxch st0, st1
FXCH_ST 1

;fsubp st1, st0
FSUBP_ST 1

;fld dword [eax+0x4]
add tmpadr, eax, 4
load tmp1, tmpadr, 1
FLD_FLOAT tmp1

;fld dword [eax]
load tmp1, eax, 1
FLD_FLOAT tmp1

;fsub st0, st1
FSUB_ST 1

;fmulp st2, st0
FMULP_ST 2

;faddp st1, st0
FADDP_ST 1

;fadd dword [ecx]
load tmp1, ecx, 1
FADD_FLOAT tmp1

;fstp dword [ecx]
FSTP_FLOAT
store tmp0, ecx, 1

;fld st3
FLD_ST 3

;fxch st0, st1
FXCH_ST 1

;fsubp st1, st0
FSUBP_ST 1

;fist dword [esp]
FIST_INT32
store tmp0, esp, 4

;mov eax, edx
mov eax, edx

;sub eax, [esp]
load tmp1, esp, 4
sub eax, eax, tmp1

;lea eax, [ebx+eax*4]
shl tmpadr, eax, 2
add eax, tmpadr, ebx

;fild dword [esp]
load tmp1, esp, 4
FILD_INT32 tmp1

;fsubp st1, st0
FSUBP_ST 1

;fld dword [eax+0x4]
add tmpadr, eax, 4
load tmp1, tmpadr, 1
FLD_FLOAT tmp1

;fld dword [eax]
load tmp1, eax, 1
FLD_FLOAT tmp1

;fsub st0, st1
FSUB_ST 1

;fmulp st2, st0
FMULP_ST 2

;faddp st1, st0
FADDP_ST 1

;fadd dword [ecx+0x400]
add tmpadr, ecx, 1024
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;fstp dword [ecx+0x400]
FSTP_FLOAT
add tmpadr, ecx, 1024
store tmp0, tmpadr, 1

;inc edx
add edx, edx, 1

;lea ecx, [ecx+0x4]
add ecx, ecx, 4

;fadd st0, st1
FADD_ST 1

;fcom st0, st2
FCOM_ST 2

;fnstsw ax
FNSTSW_VOID
and eax, eax, 0xffff0000
or eax, eax, tmp0

;test ah, 0x41
and tmpcnd, eax, 0x4100

;jnz short loc_40B7D0
ctcallnz tmpcnd, loc_40B7D0

tcall loc_40B837
endp

proc loc_40B837
;fsub st0, st2
FSUB_ST 2

;fsub st0, st2
FSUB_ST 2

;cmp ecx, esi
cmovult ecx, esi, tmpcnd, 0, 1

;jb short loc_40B7D4
ctcallz tmpcnd, loc_40B7D4

tcall loc_40B83F
endp

proc loc_40B83F
;fstp dword [loc_445870]
FSTP_FLOAT
store tmp0, loc_445870, 4

;fstp st0
FSTP_ST 0

;fstp st0
FSTP_ST 0

;pop ecx
POP ecx

;pop esi
POP esi

;pop ebx
POP ebx

;ret
POP tmp1
tcall tmp1
endp

proc loc_40B850
;push ebx
PUSH ebx

;push edx
PUSH edx

;push ebp
PUSH ebp

;push esi
PUSH esi

;push edi
PUSH edi

;fld dword [loc_419690]
load tmp1, loc_419690, 4
FLD_FLOAT tmp1

;fld dword [loc_419694]
load tmp1, loc_419694, 4
FLD_FLOAT tmp1

;mov ebx, ecx
mov ebx, ecx

;mov edx, ecx
mov edx, ecx

;mov ebp, ecx
mov ebp, ecx

;add ebx, [loc_45588C]
load tmp1, loc_45588C, 4
add ebx, ebx, tmp1

;add ecx, [loc_455890]
load tmp1, loc_455890, 4
add ecx, ecx, tmp1

;add edx, [loc_455894]
load tmp1, loc_455894, 4
add edx, edx, tmp1

;add ebp, [loc_455898]
load tmp1, loc_455898, 4
add ebp, ebp, tmp1

;mov esi, loc_445888
mov esi, loc_445888

;mov eax, [loc_44184C]
load eax, loc_44184C, 4

;shr eax, 0x2
lshr eax, eax, 2

;push eax
PUSH eax

;jmp short loc_40B894
tcall loc_40B894
endp

proc loc_40B890
;inc ebx
add ebx, ebx, 1

;inc ecx
add ecx, ecx, 1

;inc edx
add edx, edx, 1

;inc ebp
add ebp, ebp, 1

tcall loc_40B894
endp

proc loc_40B894
;and ebx, 0x3fff
and ebx, ebx, 0x3fff

;and ecx, 0x3fff
and ecx, ecx, 0x3fff

;and edx, 0x3fff
and edx, edx, 0x3fff

;and ebp, 0x3fff
and ebp, ebp, 0x3fff

;lea eax, [esi+ecx*4]
shl tmpadr, ecx, 2
add eax, tmpadr, esi

;lea edi, [esi+ebx*4]
shl tmpadr, ebx, 2
add edi, tmpadr, esi

;fld dword [eax]
load tmp1, eax, 1
FLD_FLOAT tmp1

;fld st0
FLD_ST 0

;fmul st0, st3
FMUL_ST 3

;fadd dword [edi]
load tmp1, edi, 1
FADD_FLOAT tmp1

;fst dword [edi]
FST_FLOAT
store tmp0, edi, 1

;fmul st0, st2
FMUL_ST 2

;faddp st1, st0
FADDP_ST 1

;lea edi, [esi+edx*4]
shl tmpadr, edx, 2
add edi, tmpadr, esi

;fld dword [edi]
load tmp1, edi, 1
FLD_FLOAT tmp1

;fxch st0, st1
FXCH_ST 1

;fld st1
FLD_ST 1

;fmul st0, st4
FMUL_ST 4

;faddp st1, st0
FADDP_ST 1

;fst dword [eax]
FST_FLOAT
store tmp0, eax, 1

;fmul st0, st2
FMUL_ST 2

;faddp st1, st0
FADDP_ST 1

;lea eax, [esi+ebp*4]
shl tmpadr, ebp, 2
add eax, tmpadr, esi

;fld dword [eax]
load tmp1, eax, 1
FLD_FLOAT tmp1

;fxch st0, st1
FXCH_ST 1

;fld st1
FLD_ST 1

;fmul st0, st4
FMUL_ST 4

;faddp st1, st0
FADDP_ST 1

;fst dword [edi]
FST_FLOAT
store tmp0, edi, 1

;fmul st0, st2
FMUL_ST 2

;faddp st1, st0
FADDP_ST 1

;fstp dword [eax]
FSTP_FLOAT
store tmp0, eax, 1

;inc ebx
add ebx, ebx, 1

;inc ecx
add ecx, ecx, 1

;inc edx
add edx, edx, 1

;inc ebp
add ebp, ebp, 1

;and ebx, 0x3fff
and ebx, ebx, 0x3fff

;and ecx, 0x3fff
and ecx, ecx, 0x3fff

;and edx, 0x3fff
and edx, edx, 0x3fff

;and ebp, 0x3fff
and ebp, ebp, 0x3fff

;lea eax, [esi+ecx*4]
shl tmpadr, ecx, 2
add eax, tmpadr, esi

;lea edi, [esi+ebx*4]
shl tmpadr, ebx, 2
add edi, tmpadr, esi

;fld dword [eax]
load tmp1, eax, 1
FLD_FLOAT tmp1

;fld st0
FLD_ST 0

;fmul st0, st3
FMUL_ST 3

;fadd dword [edi]
load tmp1, edi, 1
FADD_FLOAT tmp1

;fst dword [edi]
FST_FLOAT
store tmp0, edi, 1

;fmul st0, st2
FMUL_ST 2

;faddp st1, st0
FADDP_ST 1

;lea edi, [esi+edx*4]
shl tmpadr, edx, 2
add edi, tmpadr, esi

;fld dword [edi]
load tmp1, edi, 1
FLD_FLOAT tmp1

;fxch st0, st1
FXCH_ST 1

;fld st1
FLD_ST 1

;fmul st0, st4
FMUL_ST 4

;faddp st1, st0
FADDP_ST 1

;fst dword [eax]
FST_FLOAT
store tmp0, eax, 1

;fmul st0, st2
FMUL_ST 2

;faddp st1, st0
FADDP_ST 1

;lea eax, [esi+ebp*4]
shl tmpadr, ebp, 2
add eax, tmpadr, esi

;fld dword [eax]
load tmp1, eax, 1
FLD_FLOAT tmp1

;fxch st0, st1
FXCH_ST 1

;fld st1
FLD_ST 1

;fmul st0, st4
FMUL_ST 4

;faddp st1, st0
FADDP_ST 1

;fst dword [edi]
FST_FLOAT
store tmp0, edi, 1

;fmul st0, st2
FMUL_ST 2

;faddp st1, st0
FADDP_ST 1

;fstp dword [eax]
FSTP_FLOAT
store tmp0, eax, 1

;inc ebx
add ebx, ebx, 1

;inc ecx
add ecx, ecx, 1

;inc edx
add edx, edx, 1

;inc ebp
add ebp, ebp, 1

;and ebx, 0x3fff
and ebx, ebx, 0x3fff

;and ecx, 0x3fff
and ecx, ecx, 0x3fff

;and edx, 0x3fff
and edx, edx, 0x3fff

;and ebp, 0x3fff
and ebp, ebp, 0x3fff

;lea eax, [esi+ecx*4]
shl tmpadr, ecx, 2
add eax, tmpadr, esi

;lea edi, [esi+ebx*4]
shl tmpadr, ebx, 2
add edi, tmpadr, esi

;fld dword [eax]
load tmp1, eax, 1
FLD_FLOAT tmp1

;fld st0
FLD_ST 0

;fmul st0, st3
FMUL_ST 3

;fadd dword [edi]
load tmp1, edi, 1
FADD_FLOAT tmp1

;fst dword [edi]
FST_FLOAT
store tmp0, edi, 1

;fmul st0, st2
FMUL_ST 2

;faddp st1, st0
FADDP_ST 1

;lea edi, [esi+edx*4]
shl tmpadr, edx, 2
add edi, tmpadr, esi

;fld dword [edi]
load tmp1, edi, 1
FLD_FLOAT tmp1

;fxch st0, st1
FXCH_ST 1

;fld st1
FLD_ST 1

;fmul st0, st4
FMUL_ST 4

;faddp st1, st0
FADDP_ST 1

;fst dword [eax]
FST_FLOAT
store tmp0, eax, 1

;fmul st0, st2
FMUL_ST 2

;faddp st1, st0
FADDP_ST 1

;lea eax, [esi+ebp*4]
shl tmpadr, ebp, 2
add eax, tmpadr, esi

;fld dword [eax]
load tmp1, eax, 1
FLD_FLOAT tmp1

;fxch st0, st1
FXCH_ST 1

;fld st1
FLD_ST 1

;fmul st0, st4
FMUL_ST 4

;faddp st1, st0
FADDP_ST 1

;fst dword [edi]
FST_FLOAT
store tmp0, edi, 1

;fmul st0, st2
FMUL_ST 2

;faddp st1, st0
FADDP_ST 1

;fstp dword [eax]
FSTP_FLOAT
store tmp0, eax, 1

;inc ebx
add ebx, ebx, 1

;inc ecx
add ecx, ecx, 1

;inc edx
add edx, edx, 1

;inc ebp
add ebp, ebp, 1

;and ebx, 0x3fff
and ebx, ebx, 0x3fff

;and ecx, 0x3fff
and ecx, ecx, 0x3fff

;and edx, 0x3fff
and edx, edx, 0x3fff

;and ebp, 0x3fff
and ebp, ebp, 0x3fff

;lea eax, [esi+ecx*4]
shl tmpadr, ecx, 2
add eax, tmpadr, esi

;lea edi, [esi+ebx*4]
shl tmpadr, ebx, 2
add edi, tmpadr, esi

;fld dword [eax]
load tmp1, eax, 1
FLD_FLOAT tmp1

;fld st0
FLD_ST 0

;fmul st0, st3
FMUL_ST 3

;fadd dword [edi]
load tmp1, edi, 1
FADD_FLOAT tmp1

;fst dword [edi]
FST_FLOAT
store tmp0, edi, 1

;fmul st0, st2
FMUL_ST 2

;faddp st1, st0
FADDP_ST 1

;lea edi, [esi+edx*4]
shl tmpadr, edx, 2
add edi, tmpadr, esi

;fld dword [edi]
load tmp1, edi, 1
FLD_FLOAT tmp1

;fxch st0, st1
FXCH_ST 1

;fld st1
FLD_ST 1

;fmul st0, st4
FMUL_ST 4

;faddp st1, st0
FADDP_ST 1

;fst dword [eax]
FST_FLOAT
store tmp0, eax, 1

;fmul st0, st2
FMUL_ST 2

;faddp st1, st0
FADDP_ST 1

;lea eax, [esi+ebp*4]
shl tmpadr, ebp, 2
add eax, tmpadr, esi

;fld dword [eax]
load tmp1, eax, 1
FLD_FLOAT tmp1

;fxch st0, st1
FXCH_ST 1

;fld st1
FLD_ST 1

;fmul st0, st4
FMUL_ST 4

;faddp st1, st0
FADDP_ST 1

;fst dword [edi]
FST_FLOAT
store tmp0, edi, 1

;fmul st0, st2
FMUL_ST 2

;faddp st1, st0
FADDP_ST 1

;fstp dword [eax]
FSTP_FLOAT
store tmp0, eax, 1

;dec dword [esp]
load tmp1, esp, 4
sub tmp1, tmp1, 1
mov tmpcnd, tmp1
store tmp1, esp, 4

;jnz near loc_40B890
ctcallnz tmpcnd, loc_40B890

tcall loc_40B9F9
endp

proc loc_40B9F9
;pop eax
POP eax

;fstp st0
FSTP_ST 0

;fstp st0
FSTP_ST 0

;pop edi
POP edi

;pop esi
POP esi

;pop ebp
POP ebp

;pop edx
POP edx

;pop ebx
POP ebx

;ret
POP tmp1
tcall tmp1
endp

proc loc_40BA10
;push ebx
PUSH ebx

;push edx
PUSH edx

;push esi
PUSH esi

;fld dword [loc_419690]
load tmp1, loc_419690, 4
FLD_FLOAT tmp1

;fld dword [loc_419694]
load tmp1, loc_419694, 4
FLD_FLOAT tmp1

;mov eax, ecx
mov eax, ecx

;mov ebx, ecx
mov ebx, ecx

;mov edx, ecx
mov edx, ecx

;add eax, [loc_45588C]
load tmp1, loc_45588C, 4
add eax, eax, tmp1

;add ebx, [loc_455890]
load tmp1, loc_455890, 4
add ebx, ebx, tmp1

;add ecx, [loc_455894]
load tmp1, loc_455894, 4
add ecx, ecx, tmp1

;add edx, [loc_455898]
load tmp1, loc_455898, 4
add edx, edx, tmp1

;mov esi, loc_445888
mov esi, loc_445888

;lea eax, [esi+eax*4]
shl tmpadr, eax, 2
add eax, tmpadr, esi

;lea ebx, [esi+ebx*4]
shl tmpadr, ebx, 2
add ebx, tmpadr, esi

;lea ecx, [esi+ecx*4]
shl tmpadr, ecx, 2
add ecx, tmpadr, esi

;lea edx, [esi+edx*4]
shl tmpadr, edx, 2
add edx, tmpadr, esi

;mov esi, [loc_44184C]
load esi, loc_44184C, 4

;shr esi, 0x2
lshr esi, esi, 2

;jmp short loc_40BA6C
tcall loc_40BA6C
endp

proc loc_40BA60
;lea eax, [eax+0x4]
add eax, eax, 4

;lea ebx, [ebx+0x4]
add ebx, ebx, 4

;lea ecx, [ecx+0x4]
add ecx, ecx, 4

;lea edx, [edx+0x4]
add edx, edx, 4

tcall loc_40BA6C
endp

proc loc_40BA6C
;fld dword [ebx]
load tmp1, ebx, 1
FLD_FLOAT tmp1

;fld st0
FLD_ST 0

;fmul st0, st3
FMUL_ST 3

;fadd dword [eax]
load tmp1, eax, 1
FADD_FLOAT tmp1

;fst dword [eax]
FST_FLOAT
store tmp0, eax, 1

;fmul st0, st2
FMUL_ST 2

;faddp st1, st0
FADDP_ST 1

;fld dword [ecx]
load tmp1, ecx, 1
FLD_FLOAT tmp1

;fxch st0, st1
FXCH_ST 1

;fld st1
FLD_ST 1

;fmul st0, st4
FMUL_ST 4

;faddp st1, st0
FADDP_ST 1

;fst dword [ebx]
FST_FLOAT
store tmp0, ebx, 1

;fmul st0, st2
FMUL_ST 2

;faddp st1, st0
FADDP_ST 1

;fld dword [edx]
load tmp1, edx, 1
FLD_FLOAT tmp1

;fxch st0, st1
FXCH_ST 1

;fld st1
FLD_ST 1

;fmul st0, st4
FMUL_ST 4

;faddp st1, st0
FADDP_ST 1

;fst dword [ecx]
FST_FLOAT
store tmp0, ecx, 1

;fmul st0, st2
FMUL_ST 2

;faddp st1, st0
FADDP_ST 1

;fstp dword [edx]
FSTP_FLOAT
store tmp0, edx, 1

;lea eax, [eax+0x4]
add eax, eax, 4

;lea ebx, [ebx+0x4]
add ebx, ebx, 4

;lea ecx, [ecx+0x4]
add ecx, ecx, 4

;lea edx, [edx+0x4]
add edx, edx, 4

;fld dword [ebx]
load tmp1, ebx, 1
FLD_FLOAT tmp1

;fld st0
FLD_ST 0

;fmul st0, st3
FMUL_ST 3

;fadd dword [eax]
load tmp1, eax, 1
FADD_FLOAT tmp1

;fst dword [eax]
FST_FLOAT
store tmp0, eax, 1

;fmul st0, st2
FMUL_ST 2

;faddp st1, st0
FADDP_ST 1

;fld dword [ecx]
load tmp1, ecx, 1
FLD_FLOAT tmp1

;fxch st0, st1
FXCH_ST 1

;fld st1
FLD_ST 1

;fmul st0, st4
FMUL_ST 4

;faddp st1, st0
FADDP_ST 1

;fst dword [ebx]
FST_FLOAT
store tmp0, ebx, 1

;fmul st0, st2
FMUL_ST 2

;faddp st1, st0
FADDP_ST 1

;fld dword [edx]
load tmp1, edx, 1
FLD_FLOAT tmp1

;fxch st0, st1
FXCH_ST 1

;fld st1
FLD_ST 1

;fmul st0, st4
FMUL_ST 4

;faddp st1, st0
FADDP_ST 1

;fst dword [ecx]
FST_FLOAT
store tmp0, ecx, 1

;fmul st0, st2
FMUL_ST 2

;faddp st1, st0
FADDP_ST 1

;fstp dword [edx]
FSTP_FLOAT
store tmp0, edx, 1

;lea eax, [eax+0x4]
add eax, eax, 4

;lea ebx, [ebx+0x4]
add ebx, ebx, 4

;lea ecx, [ecx+0x4]
add ecx, ecx, 4

;lea edx, [edx+0x4]
add edx, edx, 4

;fld dword [ebx]
load tmp1, ebx, 1
FLD_FLOAT tmp1

;fld st0
FLD_ST 0

;fmul st0, st3
FMUL_ST 3

;fadd dword [eax]
load tmp1, eax, 1
FADD_FLOAT tmp1

;fst dword [eax]
FST_FLOAT
store tmp0, eax, 1

;fmul st0, st2
FMUL_ST 2

;faddp st1, st0
FADDP_ST 1

;fld dword [ecx]
load tmp1, ecx, 1
FLD_FLOAT tmp1

;fxch st0, st1
FXCH_ST 1

;fld st1
FLD_ST 1

;fmul st0, st4
FMUL_ST 4

;faddp st1, st0
FADDP_ST 1

;fst dword [ebx]
FST_FLOAT
store tmp0, ebx, 1

;fmul st0, st2
FMUL_ST 2

;faddp st1, st0
FADDP_ST 1

;fld dword [edx]
load tmp1, edx, 1
FLD_FLOAT tmp1

;fxch st0, st1
FXCH_ST 1

;fld st1
FLD_ST 1

;fmul st0, st4
FMUL_ST 4

;faddp st1, st0
FADDP_ST 1

;fst dword [ecx]
FST_FLOAT
store tmp0, ecx, 1

;fmul st0, st2
FMUL_ST 2

;faddp st1, st0
FADDP_ST 1

;fstp dword [edx]
FSTP_FLOAT
store tmp0, edx, 1

;lea eax, [eax+0x4]
add eax, eax, 4

;lea ebx, [ebx+0x4]
add ebx, ebx, 4

;lea ecx, [ecx+0x4]
add ecx, ecx, 4

;lea edx, [edx+0x4]
add edx, edx, 4

;fld dword [ebx]
load tmp1, ebx, 1
FLD_FLOAT tmp1

;fld st0
FLD_ST 0

;fmul st0, st3
FMUL_ST 3

;fadd dword [eax]
load tmp1, eax, 1
FADD_FLOAT tmp1

;fst dword [eax]
FST_FLOAT
store tmp0, eax, 1

;fmul st0, st2
FMUL_ST 2

;faddp st1, st0
FADDP_ST 1

;fld dword [ecx]
load tmp1, ecx, 1
FLD_FLOAT tmp1

;fxch st0, st1
FXCH_ST 1

;fld st1
FLD_ST 1

;fmul st0, st4
FMUL_ST 4

;faddp st1, st0
FADDP_ST 1

;fst dword [ebx]
FST_FLOAT
store tmp0, ebx, 1

;fmul st0, st2
FMUL_ST 2

;faddp st1, st0
FADDP_ST 1

;fld dword [edx]
load tmp1, edx, 1
FLD_FLOAT tmp1

;fxch st0, st1
FXCH_ST 1

;fld st1
FLD_ST 1

;fmul st0, st4
FMUL_ST 4

;faddp st1, st0
FADDP_ST 1

;fst dword [ecx]
FST_FLOAT
store tmp0, ecx, 1

;fmul st0, st2
FMUL_ST 2

;faddp st1, st0
FADDP_ST 1

;fstp dword [edx]
FSTP_FLOAT
store tmp0, edx, 1

;dec esi
sub esi, esi, 1
mov tmpcnd, esi

;jnz near loc_40BA60
ctcallnz tmpcnd, loc_40BA60

tcall loc_40BB57
endp

proc loc_40BB57
;fstp st0
FSTP_ST 0

;fstp st0
FSTP_ST 0

;pop esi
POP esi

;pop edx
POP edx

;pop ebx
POP ebx

;ret
POP tmp1
tcall tmp1
endp

proc loc_40BB60
;fld dword [loc_419690]
load tmp1, loc_419690, 4
FLD_FLOAT tmp1

;fld dword [loc_419694]
load tmp1, loc_419694, 4
FLD_FLOAT tmp1

;fld dword [loc_4558A4]
load tmp1, loc_4558A4, 4
FLD_FLOAT tmp1

;fld dword [loc_4558A8]
load tmp1, loc_4558A8, 4
FLD_FLOAT tmp1

;add ecx, [loc_455898]
load tmp1, loc_455898, 4
add ecx, ecx, tmp1

;lea edx, [edx*4+loc_445888]
mov tmpadr, loc_445888
shl tmp0, edx, 2
add edx, tmpadr, tmp0

;push ebx
PUSH ebx

;mov ebx, [esp+0x8]
add tmpadr, esp, 8
load ebx, tmpadr, 4

;lea ebx, [ebx*4+loc_445888]
mov tmpadr, loc_445888
shl tmp0, ebx, 2
add ebx, tmpadr, tmp0

;push ebp
PUSH ebp

;push esi
PUSH esi

;push edi
PUSH edi

;mov ebp, loc_441048
mov ebp, loc_441048

;mov eax, [loc_441848]
load eax, loc_441848, 4

;lea esi, [ebp+eax*4]
shl tmpadr, eax, 2
add esi, tmpadr, ebp

;jmp short loc_40BBB0
tcall loc_40BBB0
endp

proc loc_40BBB0
;and ecx, 0x3fff
and ecx, ecx, 0x3fff

;fld dword [ecx*4+loc_445888]
mov tmpadr, loc_445888
shl tmp0, ecx, 2
add tmpadr, tmpadr, tmp0
load tmp1, tmpadr, 4
FLD_FLOAT tmp1

;fld st1
FLD_ST 1

;fmul dword [loc_4558AC]
load tmp1, loc_4558AC, 4
FMUL_FLOAT tmp1

;mov eax, [loc_4558B4]
load eax, loc_4558B4, 4

;fld dword [ebx+eax*4]
shl tmpadr, eax, 2
add tmpadr, tmpadr, ebx
load tmp1, tmpadr, 1
FLD_FLOAT tmp1

;fmul dword [loc_4558B0]
load tmp1, loc_4558B0, 4
FMUL_FLOAT tmp1

;faddp st1, st0
FADDP_ST 1

;fst st2
FST_ST 2

;mov eax, [loc_4558B8]
load eax, loc_4558B8, 4

;lea eax, [edx+eax*4]
shl tmpadr, eax, 2
add eax, tmpadr, edx

;fld dword [eax]
load tmp1, eax, 1
FLD_FLOAT tmp1

;fxch st0, st1
FXCH_ST 1

;fld st1
FLD_ST 1

;fmul st0, st7
FMUL_ST 7

;faddp st1, st0
FADDP_ST 1

;fadd st0, st2
FADD_ST 2

;fst dword [edx]
FST_FLOAT
store tmp0, edx, 1

;fmul st0, st5
FMUL_ST 5

;faddp st1, st0
FADDP_ST 1

;fstp dword [eax]
FSTP_FLOAT
store tmp0, eax, 1

;mov eax, [loc_4558BC]
load eax, loc_4558BC, 4

;lea edi, [edx+eax*4]
shl tmpadr, eax, 2
add edi, tmpadr, edx

;mov eax, [loc_4558C0]
load eax, loc_4558C0, 4

;lea eax, [edx+eax*4]
shl tmpadr, eax, 2
add eax, tmpadr, edx

;fld dword [eax]
load tmp1, eax, 1
FLD_FLOAT tmp1

;fld st0
FLD_ST 0

;fmul st0, st6
FMUL_ST 6

;fadd dword [edi]
load tmp1, edi, 1
FADD_FLOAT tmp1

;fst dword [edi]
FST_FLOAT
store tmp0, edi, 1

;fmul st0, st5
FMUL_ST 5

;faddp st1, st0
FADDP_ST 1

;fstp dword [eax]
FSTP_FLOAT
store tmp0, eax, 1

;fld st2
FLD_ST 2

;fmul dword [loc_4558C8]
load tmp1, loc_4558C8, 4
FMUL_FLOAT tmp1

;mov eax, [loc_4558CC]
load eax, loc_4558CC, 4

;fld dword [edx+eax*4]
shl tmpadr, eax, 2
add tmpadr, tmpadr, edx
load tmp1, tmpadr, 1
FLD_FLOAT tmp1

;fmul dword [loc_4558C4]
load tmp1, loc_4558C4, 4
FMUL_FLOAT tmp1

;faddp st1, st0
FADDP_ST 1

;fst st3
FST_ST 3

;mov eax, [loc_4558D0]
load eax, loc_4558D0, 4

;lea eax, [ebx+eax*4]
shl tmpadr, eax, 2
add eax, tmpadr, ebx

;faddp st1, st0
FADDP_ST 1

;fld dword [eax]
load tmp1, eax, 1
FLD_FLOAT tmp1

;fld st0
FLD_ST 0

;fmul st0, st6
FMUL_ST 6

;faddp st2, st0
FADDP_ST 2

;fxch st0, st1
FXCH_ST 1

;fst dword [ebx]
FST_FLOAT
store tmp0, ebx, 1

;fmul st0, st4
FMUL_ST 4

;faddp st1, st0
FADDP_ST 1

;fstp dword [eax]
FSTP_FLOAT
store tmp0, eax, 1

;mov eax, [loc_4558D4]
load eax, loc_4558D4, 4

;lea edi, [ebx+eax*4]
shl tmpadr, eax, 2
add edi, tmpadr, ebx

;mov eax, [loc_4558D8]
load eax, loc_4558D8, 4

;lea eax, [ebx+eax*4]
shl tmpadr, eax, 2
add eax, tmpadr, ebx

;fld dword [eax]
load tmp1, eax, 1
FLD_FLOAT tmp1

;fld st0
FLD_ST 0

;fmul st0, st5
FMUL_ST 5

;fadd dword [edi]
load tmp1, edi, 1
FADD_FLOAT tmp1

;fst dword [edi]
FST_FLOAT
store tmp0, edi, 1

;fmul st0, st4
FMUL_ST 4

;faddp st1, st0
FADDP_ST 1

;fstp dword [eax]
FSTP_FLOAT
store tmp0, eax, 1

;mov eax, [loc_4558DC]
load eax, loc_4558DC, 4

;fld dword [edx+eax*4]
shl tmpadr, eax, 2
add tmpadr, tmpadr, edx
load tmp1, tmpadr, 1
FLD_FLOAT tmp1

;mov eax, [loc_4558E0]
load eax, loc_4558E0, 4

;fadd dword [edx+eax*4]
shl tmpadr, eax, 2
add tmpadr, tmpadr, edx
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;mov eax, [loc_4558E4]
load eax, loc_4558E4, 4

;fadd dword [ebx+eax*4]
shl tmpadr, eax, 2
add tmpadr, tmpadr, ebx
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;mov eax, [loc_4558E8]
load eax, loc_4558E8, 4

;fadd dword [ebx+eax*4]
shl tmpadr, eax, 2
add tmpadr, tmpadr, ebx
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;fld st0
FLD_ST 0

;fadd dword [loc_4558FC]
load tmp1, loc_4558FC, 4
FADD_FLOAT tmp1

;fmul st0, st4
FMUL_ST 4

;fadd dword [ebp]
load tmp1, ebp, 4
FADD_FLOAT tmp1

;fstp dword [ebp]
FSTP_FLOAT
store tmp0, ebp, 4

;fst dword [loc_4558FC]
FST_FLOAT
store tmp0, loc_4558FC, 4

;fadd dword [ebp+0x4]
add tmpadr, ebp, 4
load tmp1, tmpadr, 4
FADD_FLOAT tmp1

;fstp dword [ebp+0x4]
FSTP_FLOAT
add tmpadr, ebp, 4
store tmp0, tmpadr, 4

;mov eax, [loc_4558EC]
load eax, loc_4558EC, 4

;fld dword [edx+eax*4]
shl tmpadr, eax, 2
add tmpadr, tmpadr, edx
load tmp1, tmpadr, 1
FLD_FLOAT tmp1

;mov eax, [loc_4558F0]
load eax, loc_4558F0, 4

;fadd dword [edx+eax*4]
shl tmpadr, eax, 2
add tmpadr, tmpadr, edx
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;mov eax, [loc_4558F4]
load eax, loc_4558F4, 4

;fadd dword [ebx+eax*4]
shl tmpadr, eax, 2
add tmpadr, tmpadr, ebx
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;mov eax, [loc_4558F8]
load eax, loc_4558F8, 4

;fadd dword [ebx+eax*4]
shl tmpadr, eax, 2
add tmpadr, tmpadr, ebx
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;lea eax, [ebp+0x400]
add eax, ebp, 1024

;fld st0
FLD_ST 0

;fadd dword [loc_455900]
load tmp1, loc_455900, 4
FADD_FLOAT tmp1

;fmul st0, st4
FMUL_ST 4

;fadd dword [eax]
load tmp1, eax, 1
FADD_FLOAT tmp1

;fstp dword [eax]
FSTP_FLOAT
store tmp0, eax, 1

;fst dword [loc_455900]
FST_FLOAT
store tmp0, loc_455900, 4

;fadd dword [eax+0x4]
add tmpadr, eax, 4
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;fstp dword [eax+0x4]
FSTP_FLOAT
add tmpadr, eax, 4
store tmp0, tmpadr, 1

;lea ebp, [ebp+0x8]
add ebp, ebp, 8

;lea ebx, [ebx+0x4]
add ebx, ebx, 4

;lea edx, [edx+0x4]
add edx, edx, 4

;inc ecx
add ecx, ecx, 1

;cmp ebp, esi
cmovult ebp, esi, tmpcnd, 0, 1

;jb near loc_40BBB0
ctcallz tmpcnd, loc_40BBB0

tcall loc_40BCF7
endp

proc loc_40BCF7
;pop edi
POP edi

;pop esi
POP esi

;pop ebp
POP ebp

;pop ebx
POP ebx

;fstp dword [loc_4558A8]
FSTP_FLOAT
store tmp0, loc_4558A8, 4

;fstp dword [loc_4558A4]
FSTP_FLOAT
store tmp0, loc_4558A4, 4

;fstp st0
FSTP_ST 0

;fstp st0
FSTP_ST 0

;ret 0x4
POP tmp1
add esp, esp, 4
tcall tmp1
endp

proc loc_40BD10
;fld dword [loc_419690]
load tmp1, loc_419690, 4
FLD_FLOAT tmp1

;fld dword [loc_419694]
load tmp1, loc_419694, 4
FLD_FLOAT tmp1

;fld dword [loc_4558A4]
load tmp1, loc_4558A4, 4
FLD_FLOAT tmp1

;fld dword [loc_4558A8]
load tmp1, loc_4558A8, 4
FLD_FLOAT tmp1

;add ecx, [loc_455898]
load tmp1, loc_455898, 4
add ecx, ecx, tmp1

;lea ecx, [ecx*4+loc_445888]
mov tmpadr, loc_445888
shl tmp0, ecx, 2
add ecx, tmpadr, tmp0

;push ebx
PUSH ebx

;mov ebx, [esp+0x8]
add tmpadr, esp, 8
load ebx, tmpadr, 4

;lea ebx, [ebx*4+loc_445888]
mov tmpadr, loc_445888
shl tmp0, ebx, 2
add ebx, tmpadr, tmp0

;push ebp
PUSH ebp

;push esi
PUSH esi

;push edi
PUSH edi

;mov ebp, loc_441048
mov ebp, loc_441048

;mov eax, [loc_441848]
load eax, loc_441848, 4

;lea esi, [ebp+eax*4]
shl tmpadr, eax, 2
add esi, tmpadr, ebp

;jmp short loc_40BD60
tcall loc_40BD60
endp

proc loc_40BD60
;fld dword [ecx]
load tmp1, ecx, 1
FLD_FLOAT tmp1

;fld st1
FLD_ST 1

;fmul dword [loc_4558AC]
load tmp1, loc_4558AC, 4
FMUL_FLOAT tmp1

;mov eax, [loc_4558B4]
load eax, loc_4558B4, 4

;fld dword [ebx+eax*4]
shl tmpadr, eax, 2
add tmpadr, tmpadr, ebx
load tmp1, tmpadr, 1
FLD_FLOAT tmp1

;fmul dword [loc_4558B0]
load tmp1, loc_4558B0, 4
FMUL_FLOAT tmp1

;faddp st1, st0
FADDP_ST 1

;fst st2
FST_ST 2

;mov eax, edx
mov eax, edx

;and eax, 0x3fff
and eax, eax, 0x3fff

;lea edi, [eax*4+loc_445888]
mov tmpadr, loc_445888
shl tmp0, eax, 2
add edi, tmpadr, tmp0

;add eax, [loc_4558B8]
load tmp1, loc_4558B8, 4
add eax, eax, tmp1

;and eax, 0x3fff
and eax, eax, 0x3fff

;lea eax, [eax*4+loc_445888]
mov tmpadr, loc_445888
shl tmp0, eax, 2
add eax, tmpadr, tmp0

;fld dword [eax]
load tmp1, eax, 1
FLD_FLOAT tmp1

;fxch st0, st1
FXCH_ST 1

;fld st1
FLD_ST 1

;fmul st0, st7
FMUL_ST 7

;faddp st1, st0
FADDP_ST 1

;fadd st0, st2
FADD_ST 2

;fst dword [edi]
FST_FLOAT
store tmp0, edi, 1

;fmul st0, st5
FMUL_ST 5

;faddp st1, st0
FADDP_ST 1

;fstp dword [eax]
FSTP_FLOAT
store tmp0, eax, 1

;mov eax, [loc_4558BC]
load eax, loc_4558BC, 4

;add eax, edx
add eax, eax, edx

;and eax, 0x3fff
and eax, eax, 0x3fff

;lea edi, [eax*4+loc_445888]
mov tmpadr, loc_445888
shl tmp0, eax, 2
add edi, tmpadr, tmp0

;mov eax, [loc_4558C0]
load eax, loc_4558C0, 4

;add eax, edx
add eax, eax, edx

;and eax, 0x3fff
and eax, eax, 0x3fff

;lea eax, [eax*4+loc_445888]
mov tmpadr, loc_445888
shl tmp0, eax, 2
add eax, tmpadr, tmp0

;fld dword [eax]
load tmp1, eax, 1
FLD_FLOAT tmp1

;fld st0
FLD_ST 0

;fmul st0, st6
FMUL_ST 6

;fadd dword [edi]
load tmp1, edi, 1
FADD_FLOAT tmp1

;fst dword [edi]
FST_FLOAT
store tmp0, edi, 1

;fmul st0, st5
FMUL_ST 5

;faddp st1, st0
FADDP_ST 1

;fstp dword [eax]
FSTP_FLOAT
store tmp0, eax, 1

;fld st2
FLD_ST 2

;fmul dword [loc_4558C8]
load tmp1, loc_4558C8, 4
FMUL_FLOAT tmp1

;mov eax, [loc_4558CC]
load eax, loc_4558CC, 4

;add eax, edx
add eax, eax, edx

;and eax, 0x3fff
and eax, eax, 0x3fff

;fld dword [eax*4+loc_445888]
mov tmpadr, loc_445888
shl tmp0, eax, 2
add tmpadr, tmpadr, tmp0
load tmp1, tmpadr, 4
FLD_FLOAT tmp1

;fmul dword [loc_4558C4]
load tmp1, loc_4558C4, 4
FMUL_FLOAT tmp1

;faddp st1, st0
FADDP_ST 1

;fst st3
FST_ST 3

;mov eax, [loc_4558D0]
load eax, loc_4558D0, 4

;lea eax, [ebx+eax*4]
shl tmpadr, eax, 2
add eax, tmpadr, ebx

;faddp st1, st0
FADDP_ST 1

;fld dword [eax]
load tmp1, eax, 1
FLD_FLOAT tmp1

;fld st0
FLD_ST 0

;fmul st0, st6
FMUL_ST 6

;faddp st2, st0
FADDP_ST 2

;fxch st0, st1
FXCH_ST 1

;fst dword [ebx]
FST_FLOAT
store tmp0, ebx, 1

;fmul st0, st4
FMUL_ST 4

;faddp st1, st0
FADDP_ST 1

;fstp dword [eax]
FSTP_FLOAT
store tmp0, eax, 1

;mov eax, [loc_4558D4]
load eax, loc_4558D4, 4

;lea edi, [ebx+eax*4]
shl tmpadr, eax, 2
add edi, tmpadr, ebx

;mov eax, [loc_4558D8]
load eax, loc_4558D8, 4

;lea eax, [ebx+eax*4]
shl tmpadr, eax, 2
add eax, tmpadr, ebx

;fld dword [eax]
load tmp1, eax, 1
FLD_FLOAT tmp1

;fld st0
FLD_ST 0

;fmul st0, st5
FMUL_ST 5

;fadd dword [edi]
load tmp1, edi, 1
FADD_FLOAT tmp1

;fst dword [edi]
FST_FLOAT
store tmp0, edi, 1

;fmul st0, st4
FMUL_ST 4

;faddp st1, st0
FADDP_ST 1

;fstp dword [eax]
FSTP_FLOAT
store tmp0, eax, 1

;mov eax, [loc_4558DC]
load eax, loc_4558DC, 4

;add eax, edx
add eax, eax, edx

;and eax, 0x3fff
and eax, eax, 0x3fff

;fld dword [eax*4+loc_445888]
mov tmpadr, loc_445888
shl tmp0, eax, 2
add tmpadr, tmpadr, tmp0
load tmp1, tmpadr, 4
FLD_FLOAT tmp1

;mov eax, [loc_4558E0]
load eax, loc_4558E0, 4

;add eax, edx
add eax, eax, edx

;and eax, 0x3fff
and eax, eax, 0x3fff

;fadd dword [eax*4+loc_445888]
mov tmpadr, loc_445888
shl tmp0, eax, 2
add tmpadr, tmpadr, tmp0
load tmp1, tmpadr, 4
FADD_FLOAT tmp1

;mov eax, [loc_4558E4]
load eax, loc_4558E4, 4

;fadd dword [ebx+eax*4]
shl tmpadr, eax, 2
add tmpadr, tmpadr, ebx
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;mov eax, [loc_4558E8]
load eax, loc_4558E8, 4

;fadd dword [ebx+eax*4]
shl tmpadr, eax, 2
add tmpadr, tmpadr, ebx
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;fld st0
FLD_ST 0

;fadd dword [loc_4558FC]
load tmp1, loc_4558FC, 4
FADD_FLOAT tmp1

;fmul st0, st4
FMUL_ST 4

;fadd dword [ebp]
load tmp1, ebp, 4
FADD_FLOAT tmp1

;fstp dword [ebp]
FSTP_FLOAT
store tmp0, ebp, 4

;fst dword [loc_4558FC]
FST_FLOAT
store tmp0, loc_4558FC, 4

;fadd dword [ebp+0x4]
add tmpadr, ebp, 4
load tmp1, tmpadr, 4
FADD_FLOAT tmp1

;fstp dword [ebp+0x4]
FSTP_FLOAT
add tmpadr, ebp, 4
store tmp0, tmpadr, 4

;mov eax, [loc_4558EC]
load eax, loc_4558EC, 4

;add eax, edx
add eax, eax, edx

;and eax, 0x3fff
and eax, eax, 0x3fff

;fld dword [eax*4+loc_445888]
mov tmpadr, loc_445888
shl tmp0, eax, 2
add tmpadr, tmpadr, tmp0
load tmp1, tmpadr, 4
FLD_FLOAT tmp1

;mov eax, [loc_4558F0]
load eax, loc_4558F0, 4

;add eax, edx
add eax, eax, edx

;and eax, 0x3fff
and eax, eax, 0x3fff

;fadd dword [eax*4+loc_445888]
mov tmpadr, loc_445888
shl tmp0, eax, 2
add tmpadr, tmpadr, tmp0
load tmp1, tmpadr, 4
FADD_FLOAT tmp1

;mov eax, [loc_4558F4]
load eax, loc_4558F4, 4

;fadd dword [ebx+eax*4]
shl tmpadr, eax, 2
add tmpadr, tmpadr, ebx
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;mov eax, [loc_4558F8]
load eax, loc_4558F8, 4

;fadd dword [ebx+eax*4]
shl tmpadr, eax, 2
add tmpadr, tmpadr, ebx
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;lea eax, [ebp+0x400]
add eax, ebp, 1024

;fld st0
FLD_ST 0

;fadd dword [loc_455900]
load tmp1, loc_455900, 4
FADD_FLOAT tmp1

;fmul st0, st4
FMUL_ST 4

;fadd dword [eax]
load tmp1, eax, 1
FADD_FLOAT tmp1

;fstp dword [eax]
FSTP_FLOAT
store tmp0, eax, 1

;fst dword [loc_455900]
FST_FLOAT
store tmp0, loc_455900, 4

;fadd dword [eax+0x4]
add tmpadr, eax, 4
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;fstp dword [eax+0x4]
FSTP_FLOAT
add tmpadr, eax, 4
store tmp0, tmpadr, 1

;lea ebp, [ebp+0x8]
add ebp, ebp, 8

;lea ebx, [ebx+0x4]
add ebx, ebx, 4

;lea ecx, [ecx+0x4]
add ecx, ecx, 4

;inc edx
add edx, edx, 1

;cmp ebp, esi
cmovult ebp, esi, tmpcnd, 0, 1

;jb near loc_40BD60
ctcallz tmpcnd, loc_40BD60

tcall loc_40BF01
endp

proc loc_40BF01
;pop edi
POP edi

;pop esi
POP esi

;pop ebp
POP ebp

;pop ebx
POP ebx

;fstp dword [loc_4558A8]
FSTP_FLOAT
store tmp0, loc_4558A8, 4

;fstp dword [loc_4558A4]
FSTP_FLOAT
store tmp0, loc_4558A4, 4

;fstp st0
FSTP_ST 0

;fstp st0
FSTP_ST 0

;ret 0x4
POP tmp1
add esp, esp, 4
tcall tmp1
endp

proc loc_40BF20
;fld dword [loc_419690]
load tmp1, loc_419690, 4
FLD_FLOAT tmp1

;fld dword [loc_419694]
load tmp1, loc_419694, 4
FLD_FLOAT tmp1

;fld dword [loc_4558A4]
load tmp1, loc_4558A4, 4
FLD_FLOAT tmp1

;fld dword [loc_4558A8]
load tmp1, loc_4558A8, 4
FLD_FLOAT tmp1

;add ecx, [loc_455898]
load tmp1, loc_455898, 4
add ecx, ecx, tmp1

;lea ecx, [ecx*4+loc_445888]
mov tmpadr, loc_445888
shl tmp0, ecx, 2
add ecx, tmpadr, tmp0

;lea edx, [edx*4+loc_445888]
mov tmpadr, loc_445888
shl tmp0, edx, 2
add edx, tmpadr, tmp0

;push ebx
PUSH ebx

;mov ebx, [esp+0x8]
add tmpadr, esp, 8
load ebx, tmpadr, 4

;push ebp
PUSH ebp

;push esi
PUSH esi

;push edi
PUSH edi

;mov ebp, loc_441048
mov ebp, loc_441048

;mov eax, [loc_441848]
load eax, loc_441848, 4

;lea esi, [ebp+eax*4]
shl tmpadr, eax, 2
add esi, tmpadr, ebp

;jmp short loc_40BF70
tcall loc_40BF70
endp

proc loc_40BF70
;fld dword [ecx]
load tmp1, ecx, 1
FLD_FLOAT tmp1

;fld st1
FLD_ST 1

;fmul dword [loc_4558AC]
load tmp1, loc_4558AC, 4
FMUL_FLOAT tmp1

;mov eax, [loc_4558B4]
load eax, loc_4558B4, 4

;add eax, ebx
add eax, eax, ebx

;and eax, 0x3fff
and eax, eax, 0x3fff

;fld dword [eax*4+loc_445888]
mov tmpadr, loc_445888
shl tmp0, eax, 2
add tmpadr, tmpadr, tmp0
load tmp1, tmpadr, 4
FLD_FLOAT tmp1

;fmul dword [loc_4558B0]
load tmp1, loc_4558B0, 4
FMUL_FLOAT tmp1

;faddp st1, st0
FADDP_ST 1

;fst st2
FST_ST 2

;mov eax, [loc_4558B8]
load eax, loc_4558B8, 4

;lea eax, [edx+eax*4]
shl tmpadr, eax, 2
add eax, tmpadr, edx

;fld dword [eax]
load tmp1, eax, 1
FLD_FLOAT tmp1

;fxch st0, st1
FXCH_ST 1

;fld st1
FLD_ST 1

;fmul st0, st7
FMUL_ST 7

;faddp st1, st0
FADDP_ST 1

;fadd st0, st2
FADD_ST 2

;fst dword [edx]
FST_FLOAT
store tmp0, edx, 1

;fmul st0, st5
FMUL_ST 5

;faddp st1, st0
FADDP_ST 1

;fstp dword [eax]
FSTP_FLOAT
store tmp0, eax, 1

;mov eax, [loc_4558BC]
load eax, loc_4558BC, 4

;lea edi, [edx+eax*4]
shl tmpadr, eax, 2
add edi, tmpadr, edx

;mov eax, [loc_4558C0]
load eax, loc_4558C0, 4

;lea eax, [edx+eax*4]
shl tmpadr, eax, 2
add eax, tmpadr, edx

;fld dword [eax]
load tmp1, eax, 1
FLD_FLOAT tmp1

;fld st0
FLD_ST 0

;fmul st0, st6
FMUL_ST 6

;fadd dword [edi]
load tmp1, edi, 1
FADD_FLOAT tmp1

;fst dword [edi]
FST_FLOAT
store tmp0, edi, 1

;fmul st0, st5
FMUL_ST 5

;faddp st1, st0
FADDP_ST 1

;fstp dword [eax]
FSTP_FLOAT
store tmp0, eax, 1

;fld st2
FLD_ST 2

;fmul dword [loc_4558C8]
load tmp1, loc_4558C8, 4
FMUL_FLOAT tmp1

;mov eax, [loc_4558CC]
load eax, loc_4558CC, 4

;fld dword [edx+eax*4]
shl tmpadr, eax, 2
add tmpadr, tmpadr, edx
load tmp1, tmpadr, 1
FLD_FLOAT tmp1

;fmul dword [loc_4558C4]
load tmp1, loc_4558C4, 4
FMUL_FLOAT tmp1

;faddp st1, st0
FADDP_ST 1

;fst st3
FST_ST 3

;mov eax, ebx
mov eax, ebx

;and eax, 0x3fff
and eax, eax, 0x3fff

;lea edi, [eax*4+loc_445888]
mov tmpadr, loc_445888
shl tmp0, eax, 2
add edi, tmpadr, tmp0

;mov eax, [loc_4558D0]
load eax, loc_4558D0, 4

;add eax, ebx
add eax, eax, ebx

;and eax, 0x3fff
and eax, eax, 0x3fff

;lea eax, [eax*4+loc_445888]
mov tmpadr, loc_445888
shl tmp0, eax, 2
add eax, tmpadr, tmp0

;faddp st1, st0
FADDP_ST 1

;fld dword [eax]
load tmp1, eax, 1
FLD_FLOAT tmp1

;fld st0
FLD_ST 0

;fmul st0, st6
FMUL_ST 6

;faddp st2, st0
FADDP_ST 2

;fxch st0, st1
FXCH_ST 1

;fst dword [edi]
FST_FLOAT
store tmp0, edi, 1

;fmul st0, st4
FMUL_ST 4

;faddp st1, st0
FADDP_ST 1

;fstp dword [eax]
FSTP_FLOAT
store tmp0, eax, 1

;mov eax, [loc_4558D4]
load eax, loc_4558D4, 4

;add eax, ebx
add eax, eax, ebx

;and eax, 0x3fff
and eax, eax, 0x3fff

;lea edi, [eax*4+loc_445888]
mov tmpadr, loc_445888
shl tmp0, eax, 2
add edi, tmpadr, tmp0

;mov eax, [loc_4558D8]
load eax, loc_4558D8, 4

;add eax, ebx
add eax, eax, ebx

;and eax, 0x3fff
and eax, eax, 0x3fff

;lea eax, [eax*4+loc_445888]
mov tmpadr, loc_445888
shl tmp0, eax, 2
add eax, tmpadr, tmp0

;fld dword [eax]
load tmp1, eax, 1
FLD_FLOAT tmp1

;fld st0
FLD_ST 0

;fmul st0, st5
FMUL_ST 5

;fadd dword [edi]
load tmp1, edi, 1
FADD_FLOAT tmp1

;fst dword [edi]
FST_FLOAT
store tmp0, edi, 1

;fmul st0, st4
FMUL_ST 4

;faddp st1, st0
FADDP_ST 1

;fstp dword [eax]
FSTP_FLOAT
store tmp0, eax, 1

;mov eax, [loc_4558DC]
load eax, loc_4558DC, 4

;fld dword [edx+eax*4]
shl tmpadr, eax, 2
add tmpadr, tmpadr, edx
load tmp1, tmpadr, 1
FLD_FLOAT tmp1

;mov eax, [loc_4558E0]
load eax, loc_4558E0, 4

;fadd dword [edx+eax*4]
shl tmpadr, eax, 2
add tmpadr, tmpadr, edx
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;mov eax, [loc_4558E4]
load eax, loc_4558E4, 4

;add eax, ebx
add eax, eax, ebx

;and eax, 0x3fff
and eax, eax, 0x3fff

;fadd dword [eax*4+loc_445888]
mov tmpadr, loc_445888
shl tmp0, eax, 2
add tmpadr, tmpadr, tmp0
load tmp1, tmpadr, 4
FADD_FLOAT tmp1

;mov eax, [loc_4558E8]
load eax, loc_4558E8, 4

;add eax, ebx
add eax, eax, ebx

;and eax, 0x3fff
and eax, eax, 0x3fff

;fadd dword [eax*4+loc_445888]
mov tmpadr, loc_445888
shl tmp0, eax, 2
add tmpadr, tmpadr, tmp0
load tmp1, tmpadr, 4
FADD_FLOAT tmp1

;fld st0
FLD_ST 0

;fadd dword [loc_4558FC]
load tmp1, loc_4558FC, 4
FADD_FLOAT tmp1

;fmul st0, st4
FMUL_ST 4

;fadd dword [ebp]
load tmp1, ebp, 4
FADD_FLOAT tmp1

;fstp dword [ebp]
FSTP_FLOAT
store tmp0, ebp, 4

;fst dword [loc_4558FC]
FST_FLOAT
store tmp0, loc_4558FC, 4

;fadd dword [ebp+0x4]
add tmpadr, ebp, 4
load tmp1, tmpadr, 4
FADD_FLOAT tmp1

;fstp dword [ebp+0x4]
FSTP_FLOAT
add tmpadr, ebp, 4
store tmp0, tmpadr, 4

;mov eax, [loc_4558EC]
load eax, loc_4558EC, 4

;fld dword [edx+eax*4]
shl tmpadr, eax, 2
add tmpadr, tmpadr, edx
load tmp1, tmpadr, 1
FLD_FLOAT tmp1

;mov eax, [loc_4558F0]
load eax, loc_4558F0, 4

;fadd dword [edx+eax*4]
shl tmpadr, eax, 2
add tmpadr, tmpadr, edx
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;mov eax, [loc_4558F4]
load eax, loc_4558F4, 4

;add eax, ebx
add eax, eax, ebx

;and eax, 0x3fff
and eax, eax, 0x3fff

;fadd dword [eax*4+loc_445888]
mov tmpadr, loc_445888
shl tmp0, eax, 2
add tmpadr, tmpadr, tmp0
load tmp1, tmpadr, 4
FADD_FLOAT tmp1

;mov eax, [loc_4558F8]
load eax, loc_4558F8, 4

;add eax, ebx
add eax, eax, ebx

;and eax, 0x3fff
and eax, eax, 0x3fff

;fadd dword [eax*4+loc_445888]
mov tmpadr, loc_445888
shl tmp0, eax, 2
add tmpadr, tmpadr, tmp0
load tmp1, tmpadr, 4
FADD_FLOAT tmp1

;lea eax, [ebp+0x400]
add eax, ebp, 1024

;fld st0
FLD_ST 0

;fadd dword [loc_455900]
load tmp1, loc_455900, 4
FADD_FLOAT tmp1

;fmul st0, st4
FMUL_ST 4

;fadd dword [eax]
load tmp1, eax, 1
FADD_FLOAT tmp1

;fstp dword [eax]
FSTP_FLOAT
store tmp0, eax, 1

;fst dword [loc_455900]
FST_FLOAT
store tmp0, loc_455900, 4

;fadd dword [eax+0x4]
add tmpadr, eax, 4
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;fstp dword [eax+0x4]
FSTP_FLOAT
add tmpadr, eax, 4
store tmp0, tmpadr, 1

;lea ebp, [ebp+0x8]
add ebp, ebp, 8

;lea edx, [edx+0x4]
add edx, edx, 4

;lea ecx, [ecx+0x4]
add ecx, ecx, 4

;inc ebx
add ebx, ebx, 1

;cmp ebp, esi
cmovult ebp, esi, tmpcnd, 0, 1

;jb near loc_40BF70
ctcallz tmpcnd, loc_40BF70

tcall loc_40C112
endp

proc loc_40C112
;pop edi
POP edi

;pop esi
POP esi

;pop ebp
POP ebp

;pop ebx
POP ebx

;fstp dword [loc_4558A8]
FSTP_FLOAT
store tmp0, loc_4558A8, 4

;fstp dword [loc_4558A4]
FSTP_FLOAT
store tmp0, loc_4558A4, 4

;fstp st0
FSTP_ST 0

;fstp st0
FSTP_ST 0

;ret 0x4
POP tmp1
add esp, esp, 4
tcall tmp1
endp

proc loc_40C130
;fld dword [loc_419690]
load tmp1, loc_419690, 4
FLD_FLOAT tmp1

;fld dword [loc_419694]
load tmp1, loc_419694, 4
FLD_FLOAT tmp1

;fld dword [loc_4558A4]
load tmp1, loc_4558A4, 4
FLD_FLOAT tmp1

;fld dword [loc_4558A8]
load tmp1, loc_4558A8, 4
FLD_FLOAT tmp1

;add ecx, [loc_455898]
load tmp1, loc_455898, 4
add ecx, ecx, tmp1

;lea ecx, [ecx*4+loc_445888]
mov tmpadr, loc_445888
shl tmp0, ecx, 2
add ecx, tmpadr, tmp0

;lea edx, [edx*4+loc_445888]
mov tmpadr, loc_445888
shl tmp0, edx, 2
add edx, tmpadr, tmp0

;push ebx
PUSH ebx

;mov ebx, [esp+0x8]
add tmpadr, esp, 8
load ebx, tmpadr, 4

;lea ebx, [ebx*4+loc_445888]
mov tmpadr, loc_445888
shl tmp0, ebx, 2
add ebx, tmpadr, tmp0

;push ebp
PUSH ebp

;push esi
PUSH esi

;push edi
PUSH edi

;mov ebp, loc_441048
mov ebp, loc_441048

;mov eax, [loc_441848]
load eax, loc_441848, 4

;lea esi, [ebp+eax*4]
shl tmpadr, eax, 2
add esi, tmpadr, ebp

;jmp short loc_40C180
tcall loc_40C180
endp

proc loc_40C180
;fld dword [ecx]
load tmp1, ecx, 1
FLD_FLOAT tmp1

;fld st1
FLD_ST 1

;fmul dword [loc_4558AC]
load tmp1, loc_4558AC, 4
FMUL_FLOAT tmp1

;mov eax, [loc_4558B4]
load eax, loc_4558B4, 4

;fld dword [ebx+eax*4]
shl tmpadr, eax, 2
add tmpadr, tmpadr, ebx
load tmp1, tmpadr, 1
FLD_FLOAT tmp1

;fmul dword [loc_4558B0]
load tmp1, loc_4558B0, 4
FMUL_FLOAT tmp1

;faddp st1, st0
FADDP_ST 1

;fst st2
FST_ST 2

;mov eax, [loc_4558B8]
load eax, loc_4558B8, 4

;lea eax, [edx+eax*4]
shl tmpadr, eax, 2
add eax, tmpadr, edx

;fld dword [eax]
load tmp1, eax, 1
FLD_FLOAT tmp1

;fxch st0, st1
FXCH_ST 1

;fld st1
FLD_ST 1

;fmul st0, st7
FMUL_ST 7

;faddp st1, st0
FADDP_ST 1

;fadd st0, st2
FADD_ST 2

;fst dword [edx]
FST_FLOAT
store tmp0, edx, 1

;fmul st0, st5
FMUL_ST 5

;faddp st1, st0
FADDP_ST 1

;fstp dword [eax]
FSTP_FLOAT
store tmp0, eax, 1

;mov eax, [loc_4558BC]
load eax, loc_4558BC, 4

;lea edi, [edx+eax*4]
shl tmpadr, eax, 2
add edi, tmpadr, edx

;mov eax, [loc_4558C0]
load eax, loc_4558C0, 4

;lea eax, [edx+eax*4]
shl tmpadr, eax, 2
add eax, tmpadr, edx

;fld dword [eax]
load tmp1, eax, 1
FLD_FLOAT tmp1

;fld st0
FLD_ST 0

;fmul st0, st6
FMUL_ST 6

;fadd dword [edi]
load tmp1, edi, 1
FADD_FLOAT tmp1

;fst dword [edi]
FST_FLOAT
store tmp0, edi, 1

;fmul st0, st5
FMUL_ST 5

;faddp st1, st0
FADDP_ST 1

;fstp dword [eax]
FSTP_FLOAT
store tmp0, eax, 1

;fld st2
FLD_ST 2

;fmul dword [loc_4558C8]
load tmp1, loc_4558C8, 4
FMUL_FLOAT tmp1

;mov eax, [loc_4558CC]
load eax, loc_4558CC, 4

;fld dword [edx+eax*4]
shl tmpadr, eax, 2
add tmpadr, tmpadr, edx
load tmp1, tmpadr, 1
FLD_FLOAT tmp1

;fmul dword [loc_4558C4]
load tmp1, loc_4558C4, 4
FMUL_FLOAT tmp1

;faddp st1, st0
FADDP_ST 1

;fst st3
FST_ST 3

;mov eax, [loc_4558D0]
load eax, loc_4558D0, 4

;lea eax, [ebx+eax*4]
shl tmpadr, eax, 2
add eax, tmpadr, ebx

;faddp st1, st0
FADDP_ST 1

;fld dword [eax]
load tmp1, eax, 1
FLD_FLOAT tmp1

;fld st0
FLD_ST 0

;fmul st0, st6
FMUL_ST 6

;faddp st2, st0
FADDP_ST 2

;fxch st0, st1
FXCH_ST 1

;fst dword [ebx]
FST_FLOAT
store tmp0, ebx, 1

;fmul st0, st4
FMUL_ST 4

;faddp st1, st0
FADDP_ST 1

;fstp dword [eax]
FSTP_FLOAT
store tmp0, eax, 1

;mov eax, [loc_4558D4]
load eax, loc_4558D4, 4

;lea edi, [ebx+eax*4]
shl tmpadr, eax, 2
add edi, tmpadr, ebx

;mov eax, [loc_4558D8]
load eax, loc_4558D8, 4

;lea eax, [ebx+eax*4]
shl tmpadr, eax, 2
add eax, tmpadr, ebx

;fld dword [eax]
load tmp1, eax, 1
FLD_FLOAT tmp1

;fld st0
FLD_ST 0

;fmul st0, st5
FMUL_ST 5

;fadd dword [edi]
load tmp1, edi, 1
FADD_FLOAT tmp1

;fst dword [edi]
FST_FLOAT
store tmp0, edi, 1

;fmul st0, st4
FMUL_ST 4

;faddp st1, st0
FADDP_ST 1

;fstp dword [eax]
FSTP_FLOAT
store tmp0, eax, 1

;mov eax, [loc_4558DC]
load eax, loc_4558DC, 4

;fld dword [edx+eax*4]
shl tmpadr, eax, 2
add tmpadr, tmpadr, edx
load tmp1, tmpadr, 1
FLD_FLOAT tmp1

;mov eax, [loc_4558E0]
load eax, loc_4558E0, 4

;fadd dword [edx+eax*4]
shl tmpadr, eax, 2
add tmpadr, tmpadr, edx
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;mov eax, [loc_4558E4]
load eax, loc_4558E4, 4

;fadd dword [ebx+eax*4]
shl tmpadr, eax, 2
add tmpadr, tmpadr, ebx
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;mov eax, [loc_4558E8]
load eax, loc_4558E8, 4

;fadd dword [ebx+eax*4]
shl tmpadr, eax, 2
add tmpadr, tmpadr, ebx
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;fld st0
FLD_ST 0

;fadd dword [loc_4558FC]
load tmp1, loc_4558FC, 4
FADD_FLOAT tmp1

;fmul st0, st4
FMUL_ST 4

;fadd dword [ebp]
load tmp1, ebp, 4
FADD_FLOAT tmp1

;fstp dword [ebp]
FSTP_FLOAT
store tmp0, ebp, 4

;fst dword [loc_4558FC]
FST_FLOAT
store tmp0, loc_4558FC, 4

;fadd dword [ebp+0x4]
add tmpadr, ebp, 4
load tmp1, tmpadr, 4
FADD_FLOAT tmp1

;fstp dword [ebp+0x4]
FSTP_FLOAT
add tmpadr, ebp, 4
store tmp0, tmpadr, 4

;mov eax, [loc_4558EC]
load eax, loc_4558EC, 4

;fld dword [edx+eax*4]
shl tmpadr, eax, 2
add tmpadr, tmpadr, edx
load tmp1, tmpadr, 1
FLD_FLOAT tmp1

;mov eax, [loc_4558F0]
load eax, loc_4558F0, 4

;fadd dword [edx+eax*4]
shl tmpadr, eax, 2
add tmpadr, tmpadr, edx
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;mov eax, [loc_4558F4]
load eax, loc_4558F4, 4

;fadd dword [ebx+eax*4]
shl tmpadr, eax, 2
add tmpadr, tmpadr, ebx
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;mov eax, [loc_4558F8]
load eax, loc_4558F8, 4

;fadd dword [ebx+eax*4]
shl tmpadr, eax, 2
add tmpadr, tmpadr, ebx
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;lea eax, [ebp+0x400]
add eax, ebp, 1024

;fld st0
FLD_ST 0

;fadd dword [loc_455900]
load tmp1, loc_455900, 4
FADD_FLOAT tmp1

;fmul st0, st4
FMUL_ST 4

;fadd dword [eax]
load tmp1, eax, 1
FADD_FLOAT tmp1

;fstp dword [eax]
FSTP_FLOAT
store tmp0, eax, 1

;fst dword [loc_455900]
FST_FLOAT
store tmp0, loc_455900, 4

;fadd dword [eax+0x4]
add tmpadr, eax, 4
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;fstp dword [eax+0x4]
FSTP_FLOAT
add tmpadr, eax, 4
store tmp0, tmpadr, 1

;lea ebp, [ebp+0x8]
add ebp, ebp, 8

;lea ebx, [ebx+0x4]
add ebx, ebx, 4

;lea edx, [edx+0x4]
add edx, edx, 4

;lea ecx, [ecx+0x4]
add ecx, ecx, 4

;cmp ebp, esi
cmovult ebp, esi, tmpcnd, 0, 1

;jb near loc_40C180
ctcallz tmpcnd, loc_40C180

tcall loc_40C2BE
endp

proc loc_40C2BE
;pop edi
POP edi

;pop esi
POP esi

;pop ebp
POP ebp

;pop ebx
POP ebx

;fstp dword [loc_4558A8]
FSTP_FLOAT
store tmp0, loc_4558A8, 4

;fstp dword [loc_4558A4]
FSTP_FLOAT
store tmp0, loc_4558A4, 4

;fstp st0
FSTP_ST 0

;fstp st0
FSTP_ST 0

;ret 0x4
POP tmp1
add esp, esp, 4
tcall tmp1
endp

proc loc_40C950
;fld dword [loc_419690]
load tmp1, loc_419690, 4
FLD_FLOAT tmp1

;fld dword [loc_419694]
load tmp1, loc_419694, 4
FLD_FLOAT tmp1

;fld dword [loc_4558A4]
load tmp1, loc_4558A4, 4
FLD_FLOAT tmp1

;fld dword [loc_4558A8]
load tmp1, loc_4558A8, 4
FLD_FLOAT tmp1

;add ecx, [loc_455898]
load tmp1, loc_455898, 4
add ecx, ecx, tmp1

;lea edx, [edx*4+loc_445888]
mov tmpadr, loc_445888
shl tmp0, edx, 2
add edx, tmpadr, tmp0

;push ebx
PUSH ebx

;mov ebx, [esp+0x8]
add tmpadr, esp, 8
load ebx, tmpadr, 4

;lea ebx, [ebx*4+loc_445888]
mov tmpadr, loc_445888
shl tmp0, ebx, 2
add ebx, tmpadr, tmp0

;push ebp
PUSH ebp

;push esi
PUSH esi

;push edi
PUSH edi

;mov ebp, loc_441048
mov ebp, loc_441048

;mov eax, [loc_441848]
load eax, loc_441848, 4

;lea esi, [ebp+eax*4]
shl tmpadr, eax, 2
add esi, tmpadr, ebp

;jmp short loc_40C9A0
tcall loc_40C9A0
endp

proc loc_40C9A0
;and ecx, 0x3fff
and ecx, ecx, 0x3fff

;fld dword [ecx*4+loc_445888]
mov tmpadr, loc_445888
shl tmp0, ecx, 2
add tmpadr, tmpadr, tmp0
load tmp1, tmpadr, 4
FLD_FLOAT tmp1

;fld st1
FLD_ST 1

;fmul dword [loc_4558AC]
load tmp1, loc_4558AC, 4
FMUL_FLOAT tmp1

;mov eax, [loc_4558B4]
load eax, loc_4558B4, 4

;fld dword [ebx+eax*4]
shl tmpadr, eax, 2
add tmpadr, tmpadr, ebx
load tmp1, tmpadr, 1
FLD_FLOAT tmp1

;fmul dword [loc_4558B0]
load tmp1, loc_4558B0, 4
FMUL_FLOAT tmp1

;faddp st1, st0
FADDP_ST 1

;fst st2
FST_ST 2

;mov eax, [loc_4558B8]
load eax, loc_4558B8, 4

;lea eax, [edx+eax*4]
shl tmpadr, eax, 2
add eax, tmpadr, edx

;fld dword [eax]
load tmp1, eax, 1
FLD_FLOAT tmp1

;fxch st0, st1
FXCH_ST 1

;fld st1
FLD_ST 1

;fmul st0, st7
FMUL_ST 7

;faddp st1, st0
FADDP_ST 1

;fadd st0, st2
FADD_ST 2

;fst dword [edx]
FST_FLOAT
store tmp0, edx, 1

;fmul st0, st5
FMUL_ST 5

;faddp st1, st0
FADDP_ST 1

;fstp dword [eax]
FSTP_FLOAT
store tmp0, eax, 1

;mov eax, [loc_4558BC]
load eax, loc_4558BC, 4

;lea edi, [edx+eax*4]
shl tmpadr, eax, 2
add edi, tmpadr, edx

;mov eax, [loc_4558C0]
load eax, loc_4558C0, 4

;lea eax, [edx+eax*4]
shl tmpadr, eax, 2
add eax, tmpadr, edx

;fld dword [eax]
load tmp1, eax, 1
FLD_FLOAT tmp1

;fld st0
FLD_ST 0

;fmul st0, st6
FMUL_ST 6

;fadd dword [edi]
load tmp1, edi, 1
FADD_FLOAT tmp1

;fst dword [edi]
FST_FLOAT
store tmp0, edi, 1

;fmul st0, st5
FMUL_ST 5

;faddp st1, st0
FADDP_ST 1

;fstp dword [eax]
FSTP_FLOAT
store tmp0, eax, 1

;fld st2
FLD_ST 2

;fmul dword [loc_4558C8]
load tmp1, loc_4558C8, 4
FMUL_FLOAT tmp1

;mov eax, [loc_4558CC]
load eax, loc_4558CC, 4

;fld dword [edx+eax*4]
shl tmpadr, eax, 2
add tmpadr, tmpadr, edx
load tmp1, tmpadr, 1
FLD_FLOAT tmp1

;fmul dword [loc_4558C4]
load tmp1, loc_4558C4, 4
FMUL_FLOAT tmp1

;faddp st1, st0
FADDP_ST 1

;fst st3
FST_ST 3

;mov eax, [loc_4558D0]
load eax, loc_4558D0, 4

;lea eax, [ebx+eax*4]
shl tmpadr, eax, 2
add eax, tmpadr, ebx

;faddp st1, st0
FADDP_ST 1

;fld dword [eax]
load tmp1, eax, 1
FLD_FLOAT tmp1

;fld st0
FLD_ST 0

;fmul st0, st6
FMUL_ST 6

;faddp st2, st0
FADDP_ST 2

;fxch st0, st1
FXCH_ST 1

;fst dword [ebx]
FST_FLOAT
store tmp0, ebx, 1

;fmul st0, st4
FMUL_ST 4

;faddp st1, st0
FADDP_ST 1

;fstp dword [eax]
FSTP_FLOAT
store tmp0, eax, 1

;mov eax, [loc_4558D4]
load eax, loc_4558D4, 4

;lea edi, [ebx+eax*4]
shl tmpadr, eax, 2
add edi, tmpadr, ebx

;mov eax, [loc_4558D8]
load eax, loc_4558D8, 4

;lea eax, [ebx+eax*4]
shl tmpadr, eax, 2
add eax, tmpadr, ebx

;fld dword [eax]
load tmp1, eax, 1
FLD_FLOAT tmp1

;fld st0
FLD_ST 0

;fmul st0, st5
FMUL_ST 5

;fadd dword [edi]
load tmp1, edi, 1
FADD_FLOAT tmp1

;fst dword [edi]
FST_FLOAT
store tmp0, edi, 1

;fmul st0, st4
FMUL_ST 4

;faddp st1, st0
FADDP_ST 1

;fstp dword [eax]
FSTP_FLOAT
store tmp0, eax, 1

;mov eax, [loc_4558DC]
load eax, loc_4558DC, 4

;fld dword [edx+eax*4]
shl tmpadr, eax, 2
add tmpadr, tmpadr, edx
load tmp1, tmpadr, 1
FLD_FLOAT tmp1

;mov eax, [loc_4558E0]
load eax, loc_4558E0, 4

;fadd dword [edx+eax*4]
shl tmpadr, eax, 2
add tmpadr, tmpadr, edx
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;mov eax, [loc_4558E4]
load eax, loc_4558E4, 4

;fadd dword [ebx+eax*4]
shl tmpadr, eax, 2
add tmpadr, tmpadr, ebx
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;mov eax, [loc_4558E8]
load eax, loc_4558E8, 4

;fadd dword [ebx+eax*4]
shl tmpadr, eax, 2
add tmpadr, tmpadr, ebx
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;fadd dword [ebp]
load tmp1, ebp, 4
FADD_FLOAT tmp1

;fstp dword [ebp]
FSTP_FLOAT
store tmp0, ebp, 4

;mov eax, [loc_4558EC]
load eax, loc_4558EC, 4

;fld dword [edx+eax*4]
shl tmpadr, eax, 2
add tmpadr, tmpadr, edx
load tmp1, tmpadr, 1
FLD_FLOAT tmp1

;mov eax, [loc_4558F0]
load eax, loc_4558F0, 4

;fadd dword [edx+eax*4]
shl tmpadr, eax, 2
add tmpadr, tmpadr, edx
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;mov eax, [loc_4558F4]
load eax, loc_4558F4, 4

;fadd dword [ebx+eax*4]
shl tmpadr, eax, 2
add tmpadr, tmpadr, ebx
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;mov eax, [loc_4558F8]
load eax, loc_4558F8, 4

;fadd dword [ebx+eax*4]
shl tmpadr, eax, 2
add tmpadr, tmpadr, ebx
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;lea eax, [ebp+0x400]
add eax, ebp, 1024

;fadd dword [eax]
load tmp1, eax, 1
FADD_FLOAT tmp1

;fstp dword [eax]
FSTP_FLOAT
store tmp0, eax, 1

;lea ebp, [ebp+0x4]
add ebp, ebp, 4

;lea ebx, [ebx+0x4]
add ebx, ebx, 4

;lea edx, [edx+0x4]
add edx, edx, 4

;inc ecx
add ecx, ecx, 1

;cmp ebp, esi
cmovult ebp, esi, tmpcnd, 0, 1

;jb near loc_40C9A0
ctcallz tmpcnd, loc_40C9A0

tcall loc_40CABB
endp

proc loc_40CABB
;pop edi
POP edi

;pop esi
POP esi

;pop ebp
POP ebp

;pop ebx
POP ebx

;fstp dword [loc_4558A8]
FSTP_FLOAT
store tmp0, loc_4558A8, 4

;fstp dword [loc_4558A4]
FSTP_FLOAT
store tmp0, loc_4558A4, 4

;fstp st0
FSTP_ST 0

;fstp st0
FSTP_ST 0

;ret 0x4
POP tmp1
add esp, esp, 4
tcall tmp1
endp

proc loc_40CAE0
;fld dword [loc_419690]
load tmp1, loc_419690, 4
FLD_FLOAT tmp1

;fld dword [loc_419694]
load tmp1, loc_419694, 4
FLD_FLOAT tmp1

;fld dword [loc_4558A4]
load tmp1, loc_4558A4, 4
FLD_FLOAT tmp1

;fld dword [loc_4558A8]
load tmp1, loc_4558A8, 4
FLD_FLOAT tmp1

;add ecx, [loc_455898]
load tmp1, loc_455898, 4
add ecx, ecx, tmp1

;lea ecx, [ecx*4+loc_445888]
mov tmpadr, loc_445888
shl tmp0, ecx, 2
add ecx, tmpadr, tmp0

;push ebx
PUSH ebx

;mov ebx, [esp+0x8]
add tmpadr, esp, 8
load ebx, tmpadr, 4

;lea ebx, [ebx*4+loc_445888]
mov tmpadr, loc_445888
shl tmp0, ebx, 2
add ebx, tmpadr, tmp0

;push ebp
PUSH ebp

;push esi
PUSH esi

;push edi
PUSH edi

;mov ebp, loc_441048
mov ebp, loc_441048

;mov eax, [loc_441848]
load eax, loc_441848, 4

;lea esi, [ebp+eax*4]
shl tmpadr, eax, 2
add esi, tmpadr, ebp

;jmp short loc_40CB30
tcall loc_40CB30
endp

proc loc_40CB30
;fld dword [ecx]
load tmp1, ecx, 1
FLD_FLOAT tmp1

;fld st1
FLD_ST 1

;fmul dword [loc_4558AC]
load tmp1, loc_4558AC, 4
FMUL_FLOAT tmp1

;mov eax, [loc_4558B4]
load eax, loc_4558B4, 4

;fld dword [ebx+eax*4]
shl tmpadr, eax, 2
add tmpadr, tmpadr, ebx
load tmp1, tmpadr, 1
FLD_FLOAT tmp1

;fmul dword [loc_4558B0]
load tmp1, loc_4558B0, 4
FMUL_FLOAT tmp1

;faddp st1, st0
FADDP_ST 1

;fst st2
FST_ST 2

;mov eax, edx
mov eax, edx

;and eax, 0x3fff
and eax, eax, 0x3fff

;lea edi, [eax*4+loc_445888]
mov tmpadr, loc_445888
shl tmp0, eax, 2
add edi, tmpadr, tmp0

;add eax, [loc_4558B8]
load tmp1, loc_4558B8, 4
add eax, eax, tmp1

;and eax, 0x3fff
and eax, eax, 0x3fff

;lea eax, [eax*4+loc_445888]
mov tmpadr, loc_445888
shl tmp0, eax, 2
add eax, tmpadr, tmp0

;fld dword [eax]
load tmp1, eax, 1
FLD_FLOAT tmp1

;fxch st0, st1
FXCH_ST 1

;fld st1
FLD_ST 1

;fmul st0, st7
FMUL_ST 7

;faddp st1, st0
FADDP_ST 1

;fadd st0, st2
FADD_ST 2

;fst dword [edi]
FST_FLOAT
store tmp0, edi, 1

;fmul st0, st5
FMUL_ST 5

;faddp st1, st0
FADDP_ST 1

;fstp dword [eax]
FSTP_FLOAT
store tmp0, eax, 1

;mov eax, [loc_4558BC]
load eax, loc_4558BC, 4

;add eax, edx
add eax, eax, edx

;and eax, 0x3fff
and eax, eax, 0x3fff

;lea edi, [eax*4+loc_445888]
mov tmpadr, loc_445888
shl tmp0, eax, 2
add edi, tmpadr, tmp0

;mov eax, [loc_4558C0]
load eax, loc_4558C0, 4

;add eax, edx
add eax, eax, edx

;and eax, 0x3fff
and eax, eax, 0x3fff

;lea eax, [eax*4+loc_445888]
mov tmpadr, loc_445888
shl tmp0, eax, 2
add eax, tmpadr, tmp0

;fld dword [eax]
load tmp1, eax, 1
FLD_FLOAT tmp1

;fld st0
FLD_ST 0

;fmul st0, st6
FMUL_ST 6

;fadd dword [edi]
load tmp1, edi, 1
FADD_FLOAT tmp1

;fst dword [edi]
FST_FLOAT
store tmp0, edi, 1

;fmul st0, st5
FMUL_ST 5

;faddp st1, st0
FADDP_ST 1

;fstp dword [eax]
FSTP_FLOAT
store tmp0, eax, 1

;fld st2
FLD_ST 2

;fmul dword [loc_4558C8]
load tmp1, loc_4558C8, 4
FMUL_FLOAT tmp1

;mov eax, [loc_4558CC]
load eax, loc_4558CC, 4

;add eax, edx
add eax, eax, edx

;and eax, 0x3fff
and eax, eax, 0x3fff

;fld dword [eax*4+loc_445888]
mov tmpadr, loc_445888
shl tmp0, eax, 2
add tmpadr, tmpadr, tmp0
load tmp1, tmpadr, 4
FLD_FLOAT tmp1

;fmul dword [loc_4558C4]
load tmp1, loc_4558C4, 4
FMUL_FLOAT tmp1

;faddp st1, st0
FADDP_ST 1

;fst st3
FST_ST 3

;mov eax, [loc_4558D0]
load eax, loc_4558D0, 4

;lea eax, [ebx+eax*4]
shl tmpadr, eax, 2
add eax, tmpadr, ebx

;faddp st1, st0
FADDP_ST 1

;fld dword [eax]
load tmp1, eax, 1
FLD_FLOAT tmp1

;fld st0
FLD_ST 0

;fmul st0, st6
FMUL_ST 6

;faddp st2, st0
FADDP_ST 2

;fxch st0, st1
FXCH_ST 1

;fst dword [ebx]
FST_FLOAT
store tmp0, ebx, 1

;fmul st0, st4
FMUL_ST 4

;faddp st1, st0
FADDP_ST 1

;fstp dword [eax]
FSTP_FLOAT
store tmp0, eax, 1

;mov eax, [loc_4558D4]
load eax, loc_4558D4, 4

;lea edi, [ebx+eax*4]
shl tmpadr, eax, 2
add edi, tmpadr, ebx

;mov eax, [loc_4558D8]
load eax, loc_4558D8, 4

;lea eax, [ebx+eax*4]
shl tmpadr, eax, 2
add eax, tmpadr, ebx

;fld dword [eax]
load tmp1, eax, 1
FLD_FLOAT tmp1

;fld st0
FLD_ST 0

;fmul st0, st5
FMUL_ST 5

;fadd dword [edi]
load tmp1, edi, 1
FADD_FLOAT tmp1

;fst dword [edi]
FST_FLOAT
store tmp0, edi, 1

;fmul st0, st4
FMUL_ST 4

;faddp st1, st0
FADDP_ST 1

;fstp dword [eax]
FSTP_FLOAT
store tmp0, eax, 1

;mov eax, [loc_4558DC]
load eax, loc_4558DC, 4

;add eax, edx
add eax, eax, edx

;and eax, 0x3fff
and eax, eax, 0x3fff

;fld dword [eax*4+loc_445888]
mov tmpadr, loc_445888
shl tmp0, eax, 2
add tmpadr, tmpadr, tmp0
load tmp1, tmpadr, 4
FLD_FLOAT tmp1

;mov eax, [loc_4558E0]
load eax, loc_4558E0, 4

;add eax, edx
add eax, eax, edx

;and eax, 0x3fff
and eax, eax, 0x3fff

;fadd dword [eax*4+loc_445888]
mov tmpadr, loc_445888
shl tmp0, eax, 2
add tmpadr, tmpadr, tmp0
load tmp1, tmpadr, 4
FADD_FLOAT tmp1

;mov eax, [loc_4558E4]
load eax, loc_4558E4, 4

;fadd dword [ebx+eax*4]
shl tmpadr, eax, 2
add tmpadr, tmpadr, ebx
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;mov eax, [loc_4558E8]
load eax, loc_4558E8, 4

;fadd dword [ebx+eax*4]
shl tmpadr, eax, 2
add tmpadr, tmpadr, ebx
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;fadd dword [ebp]
load tmp1, ebp, 4
FADD_FLOAT tmp1

;fstp dword [ebp]
FSTP_FLOAT
store tmp0, ebp, 4

;mov eax, [loc_4558EC]
load eax, loc_4558EC, 4

;add eax, edx
add eax, eax, edx

;and eax, 0x3fff
and eax, eax, 0x3fff

;fld dword [eax*4+loc_445888]
mov tmpadr, loc_445888
shl tmp0, eax, 2
add tmpadr, tmpadr, tmp0
load tmp1, tmpadr, 4
FLD_FLOAT tmp1

;mov eax, [loc_4558F0]
load eax, loc_4558F0, 4

;add eax, edx
add eax, eax, edx

;and eax, 0x3fff
and eax, eax, 0x3fff

;fadd dword [eax*4+loc_445888]
mov tmpadr, loc_445888
shl tmp0, eax, 2
add tmpadr, tmpadr, tmp0
load tmp1, tmpadr, 4
FADD_FLOAT tmp1

;mov eax, [loc_4558F4]
load eax, loc_4558F4, 4

;fadd dword [ebx+eax*4]
shl tmpadr, eax, 2
add tmpadr, tmpadr, ebx
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;mov eax, [loc_4558F8]
load eax, loc_4558F8, 4

;fadd dword [ebx+eax*4]
shl tmpadr, eax, 2
add tmpadr, tmpadr, ebx
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;lea eax, [ebp+0x400]
add eax, ebp, 1024

;fadd dword [eax]
load tmp1, eax, 1
FADD_FLOAT tmp1

;fstp dword [eax]
FSTP_FLOAT
store tmp0, eax, 1

;lea ebp, [ebp+0x4]
add ebp, ebp, 4

;lea ebx, [ebx+0x4]
add ebx, ebx, 4

;lea ecx, [ecx+0x4]
add ecx, ecx, 4

;inc edx
add edx, edx, 1

;cmp ebp, esi
cmovult ebp, esi, tmpcnd, 0, 1

;jb near loc_40CB30
ctcallz tmpcnd, loc_40CB30

tcall loc_40CCA5
endp

proc loc_40CCA5
;pop edi
POP edi

;pop esi
POP esi

;pop ebp
POP ebp

;pop ebx
POP ebx

;fstp dword [loc_4558A8]
FSTP_FLOAT
store tmp0, loc_4558A8, 4

;fstp dword [loc_4558A4]
FSTP_FLOAT
store tmp0, loc_4558A4, 4

;fstp st0
FSTP_ST 0

;fstp st0
FSTP_ST 0

;ret 0x4
POP tmp1
add esp, esp, 4
tcall tmp1
endp

proc loc_40CCC0
;fld dword [loc_419690]
load tmp1, loc_419690, 4
FLD_FLOAT tmp1

;fld dword [loc_419694]
load tmp1, loc_419694, 4
FLD_FLOAT tmp1

;fld dword [loc_4558A4]
load tmp1, loc_4558A4, 4
FLD_FLOAT tmp1

;fld dword [loc_4558A8]
load tmp1, loc_4558A8, 4
FLD_FLOAT tmp1

;add ecx, [loc_455898]
load tmp1, loc_455898, 4
add ecx, ecx, tmp1

;lea ecx, [ecx*4+loc_445888]
mov tmpadr, loc_445888
shl tmp0, ecx, 2
add ecx, tmpadr, tmp0

;lea edx, [edx*4+loc_445888]
mov tmpadr, loc_445888
shl tmp0, edx, 2
add edx, tmpadr, tmp0

;push ebx
PUSH ebx

;mov ebx, [esp+0x8]
add tmpadr, esp, 8
load ebx, tmpadr, 4

;push ebp
PUSH ebp

;push esi
PUSH esi

;push edi
PUSH edi

;mov ebp, loc_441048
mov ebp, loc_441048

;mov eax, [loc_441848]
load eax, loc_441848, 4

;lea esi, [ebp+eax*4]
shl tmpadr, eax, 2
add esi, tmpadr, ebp

;jmp short loc_40CD10
tcall loc_40CD10
endp

proc loc_40CD10
;fld dword [ecx]
load tmp1, ecx, 1
FLD_FLOAT tmp1

;fld st1
FLD_ST 1

;fmul dword [loc_4558AC]
load tmp1, loc_4558AC, 4
FMUL_FLOAT tmp1

;mov eax, [loc_4558B4]
load eax, loc_4558B4, 4

;add eax, ebx
add eax, eax, ebx

;and eax, 0x3fff
and eax, eax, 0x3fff

;fld dword [eax*4+loc_445888]
mov tmpadr, loc_445888
shl tmp0, eax, 2
add tmpadr, tmpadr, tmp0
load tmp1, tmpadr, 4
FLD_FLOAT tmp1

;fmul dword [loc_4558B0]
load tmp1, loc_4558B0, 4
FMUL_FLOAT tmp1

;faddp st1, st0
FADDP_ST 1

;fst st2
FST_ST 2

;mov eax, [loc_4558B8]
load eax, loc_4558B8, 4

;lea eax, [edx+eax*4]
shl tmpadr, eax, 2
add eax, tmpadr, edx

;fld dword [eax]
load tmp1, eax, 1
FLD_FLOAT tmp1

;fxch st0, st1
FXCH_ST 1

;fld st1
FLD_ST 1

;fmul st0, st7
FMUL_ST 7

;faddp st1, st0
FADDP_ST 1

;fadd st0, st2
FADD_ST 2

;fst dword [edx]
FST_FLOAT
store tmp0, edx, 1

;fmul st0, st5
FMUL_ST 5

;faddp st1, st0
FADDP_ST 1

;fstp dword [eax]
FSTP_FLOAT
store tmp0, eax, 1

;mov eax, [loc_4558BC]
load eax, loc_4558BC, 4

;lea edi, [edx+eax*4]
shl tmpadr, eax, 2
add edi, tmpadr, edx

;mov eax, [loc_4558C0]
load eax, loc_4558C0, 4

;lea eax, [edx+eax*4]
shl tmpadr, eax, 2
add eax, tmpadr, edx

;fld dword [eax]
load tmp1, eax, 1
FLD_FLOAT tmp1

;fld st0
FLD_ST 0

;fmul st0, st6
FMUL_ST 6

;fadd dword [edi]
load tmp1, edi, 1
FADD_FLOAT tmp1

;fst dword [edi]
FST_FLOAT
store tmp0, edi, 1

;fmul st0, st5
FMUL_ST 5

;faddp st1, st0
FADDP_ST 1

;fstp dword [eax]
FSTP_FLOAT
store tmp0, eax, 1

;fld st2
FLD_ST 2

;fmul dword [loc_4558C8]
load tmp1, loc_4558C8, 4
FMUL_FLOAT tmp1

;mov eax, [loc_4558CC]
load eax, loc_4558CC, 4

;fld dword [edx+eax*4]
shl tmpadr, eax, 2
add tmpadr, tmpadr, edx
load tmp1, tmpadr, 1
FLD_FLOAT tmp1

;fmul dword [loc_4558C4]
load tmp1, loc_4558C4, 4
FMUL_FLOAT tmp1

;faddp st1, st0
FADDP_ST 1

;fst st3
FST_ST 3

;mov eax, ebx
mov eax, ebx

;and eax, 0x3fff
and eax, eax, 0x3fff

;lea edi, [eax*4+loc_445888]
mov tmpadr, loc_445888
shl tmp0, eax, 2
add edi, tmpadr, tmp0

;mov eax, [loc_4558D0]
load eax, loc_4558D0, 4

;add eax, ebx
add eax, eax, ebx

;and eax, 0x3fff
and eax, eax, 0x3fff

;lea eax, [eax*4+loc_445888]
mov tmpadr, loc_445888
shl tmp0, eax, 2
add eax, tmpadr, tmp0

;faddp st1, st0
FADDP_ST 1

;fld dword [eax]
load tmp1, eax, 1
FLD_FLOAT tmp1

;fld st0
FLD_ST 0

;fmul st0, st6
FMUL_ST 6

;faddp st2, st0
FADDP_ST 2

;fxch st0, st1
FXCH_ST 1

;fst dword [edi]
FST_FLOAT
store tmp0, edi, 1

;fmul st0, st4
FMUL_ST 4

;faddp st1, st0
FADDP_ST 1

;fstp dword [eax]
FSTP_FLOAT
store tmp0, eax, 1

;mov eax, [loc_4558D4]
load eax, loc_4558D4, 4

;add eax, ebx
add eax, eax, ebx

;and eax, 0x3fff
and eax, eax, 0x3fff

;lea edi, [eax*4+loc_445888]
mov tmpadr, loc_445888
shl tmp0, eax, 2
add edi, tmpadr, tmp0

;mov eax, [loc_4558D8]
load eax, loc_4558D8, 4

;add eax, ebx
add eax, eax, ebx

;and eax, 0x3fff
and eax, eax, 0x3fff

;lea eax, [eax*4+loc_445888]
mov tmpadr, loc_445888
shl tmp0, eax, 2
add eax, tmpadr, tmp0

;fld dword [eax]
load tmp1, eax, 1
FLD_FLOAT tmp1

;fld st0
FLD_ST 0

;fmul st0, st5
FMUL_ST 5

;fadd dword [edi]
load tmp1, edi, 1
FADD_FLOAT tmp1

;fst dword [edi]
FST_FLOAT
store tmp0, edi, 1

;fmul st0, st4
FMUL_ST 4

;faddp st1, st0
FADDP_ST 1

;fstp dword [eax]
FSTP_FLOAT
store tmp0, eax, 1

;mov eax, [loc_4558DC]
load eax, loc_4558DC, 4

;fld dword [edx+eax*4]
shl tmpadr, eax, 2
add tmpadr, tmpadr, edx
load tmp1, tmpadr, 1
FLD_FLOAT tmp1

;mov eax, [loc_4558E0]
load eax, loc_4558E0, 4

;fadd dword [edx+eax*4]
shl tmpadr, eax, 2
add tmpadr, tmpadr, edx
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;mov eax, [loc_4558E4]
load eax, loc_4558E4, 4

;add eax, ebx
add eax, eax, ebx

;and eax, 0x3fff
and eax, eax, 0x3fff

;fadd dword [eax*4+loc_445888]
mov tmpadr, loc_445888
shl tmp0, eax, 2
add tmpadr, tmpadr, tmp0
load tmp1, tmpadr, 4
FADD_FLOAT tmp1

;mov eax, [loc_4558E8]
load eax, loc_4558E8, 4

;add eax, ebx
add eax, eax, ebx

;and eax, 0x3fff
and eax, eax, 0x3fff

;fadd dword [eax*4+loc_445888]
mov tmpadr, loc_445888
shl tmp0, eax, 2
add tmpadr, tmpadr, tmp0
load tmp1, tmpadr, 4
FADD_FLOAT tmp1

;fadd dword [ebp]
load tmp1, ebp, 4
FADD_FLOAT tmp1

;fstp dword [ebp]
FSTP_FLOAT
store tmp0, ebp, 4

;mov eax, [loc_4558EC]
load eax, loc_4558EC, 4

;fld dword [edx+eax*4]
shl tmpadr, eax, 2
add tmpadr, tmpadr, edx
load tmp1, tmpadr, 1
FLD_FLOAT tmp1

;mov eax, [loc_4558F0]
load eax, loc_4558F0, 4

;fadd dword [edx+eax*4]
shl tmpadr, eax, 2
add tmpadr, tmpadr, edx
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;mov eax, [loc_4558F4]
load eax, loc_4558F4, 4

;add eax, ebx
add eax, eax, ebx

;and eax, 0x3fff
and eax, eax, 0x3fff

;fadd dword [eax*4+loc_445888]
mov tmpadr, loc_445888
shl tmp0, eax, 2
add tmpadr, tmpadr, tmp0
load tmp1, tmpadr, 4
FADD_FLOAT tmp1

;mov eax, [loc_4558F8]
load eax, loc_4558F8, 4

;add eax, ebx
add eax, eax, ebx

;and eax, 0x3fff
and eax, eax, 0x3fff

;fadd dword [eax*4+loc_445888]
mov tmpadr, loc_445888
shl tmp0, eax, 2
add tmpadr, tmpadr, tmp0
load tmp1, tmpadr, 4
FADD_FLOAT tmp1

;lea eax, [ebp+0x400]
add eax, ebp, 1024

;fadd dword [eax]
load tmp1, eax, 1
FADD_FLOAT tmp1

;fstp dword [eax]
FSTP_FLOAT
store tmp0, eax, 1

;lea ebp, [ebp+0x4]
add ebp, ebp, 4

;lea edx, [edx+0x4]
add edx, edx, 4

;lea ecx, [ecx+0x4]
add ecx, ecx, 4

;inc ebx
add ebx, ebx, 1

;cmp ebp, esi
cmovult ebp, esi, tmpcnd, 0, 1

;jb near loc_40CD10
ctcallz tmpcnd, loc_40CD10

tcall loc_40CE86
endp

proc loc_40CE86
;pop edi
POP edi

;pop esi
POP esi

;pop ebp
POP ebp

;pop ebx
POP ebx

;fstp dword [loc_4558A8]
FSTP_FLOAT
store tmp0, loc_4558A8, 4

;fstp dword [loc_4558A4]
FSTP_FLOAT
store tmp0, loc_4558A4, 4

;fstp st0
FSTP_ST 0

;fstp st0
FSTP_ST 0

;ret 0x4
POP tmp1
add esp, esp, 4
tcall tmp1
endp

proc loc_40CEA0
;fld dword [loc_419690]
load tmp1, loc_419690, 4
FLD_FLOAT tmp1

;fld dword [loc_419694]
load tmp1, loc_419694, 4
FLD_FLOAT tmp1

;fld dword [loc_4558A4]
load tmp1, loc_4558A4, 4
FLD_FLOAT tmp1

;fld dword [loc_4558A8]
load tmp1, loc_4558A8, 4
FLD_FLOAT tmp1

;add ecx, [loc_455898]
load tmp1, loc_455898, 4
add ecx, ecx, tmp1

;lea ecx, [ecx*4+loc_445888]
mov tmpadr, loc_445888
shl tmp0, ecx, 2
add ecx, tmpadr, tmp0

;lea edx, [edx*4+loc_445888]
mov tmpadr, loc_445888
shl tmp0, edx, 2
add edx, tmpadr, tmp0

;push ebx
PUSH ebx

;mov ebx, [esp+0x8]
add tmpadr, esp, 8
load ebx, tmpadr, 4

;lea ebx, [ebx*4+loc_445888]
mov tmpadr, loc_445888
shl tmp0, ebx, 2
add ebx, tmpadr, tmp0

;push ebp
PUSH ebp

;push esi
PUSH esi

;push edi
PUSH edi

;mov ebp, loc_441048
mov ebp, loc_441048

;mov eax, [loc_441848]
load eax, loc_441848, 4

;lea esi, [ebp+eax*4]
shl tmpadr, eax, 2
add esi, tmpadr, ebp

;jmp short loc_40CEF0
tcall loc_40CEF0
endp

proc loc_40CEF0
;fld dword [ecx]
load tmp1, ecx, 1
FLD_FLOAT tmp1

;fld st1
FLD_ST 1

;fmul dword [loc_4558AC]
load tmp1, loc_4558AC, 4
FMUL_FLOAT tmp1

;mov eax, [loc_4558B4]
load eax, loc_4558B4, 4

;fld dword [ebx+eax*4]
shl tmpadr, eax, 2
add tmpadr, tmpadr, ebx
load tmp1, tmpadr, 1
FLD_FLOAT tmp1

;fmul dword [loc_4558B0]
load tmp1, loc_4558B0, 4
FMUL_FLOAT tmp1

;faddp st1, st0
FADDP_ST 1

;fst st2
FST_ST 2

;mov eax, [loc_4558B8]
load eax, loc_4558B8, 4

;lea eax, [edx+eax*4]
shl tmpadr, eax, 2
add eax, tmpadr, edx

;fld dword [eax]
load tmp1, eax, 1
FLD_FLOAT tmp1

;fxch st0, st1
FXCH_ST 1

;fld st1
FLD_ST 1

;fmul st0, st7
FMUL_ST 7

;faddp st1, st0
FADDP_ST 1

;fadd st0, st2
FADD_ST 2

;fst dword [edx]
FST_FLOAT
store tmp0, edx, 1

;fmul st0, st5
FMUL_ST 5

;faddp st1, st0
FADDP_ST 1

;fstp dword [eax]
FSTP_FLOAT
store tmp0, eax, 1

;mov eax, [loc_4558BC]
load eax, loc_4558BC, 4

;lea edi, [edx+eax*4]
shl tmpadr, eax, 2
add edi, tmpadr, edx

;mov eax, [loc_4558C0]
load eax, loc_4558C0, 4

;lea eax, [edx+eax*4]
shl tmpadr, eax, 2
add eax, tmpadr, edx

;fld dword [eax]
load tmp1, eax, 1
FLD_FLOAT tmp1

;fld st0
FLD_ST 0

;fmul st0, st6
FMUL_ST 6

;fadd dword [edi]
load tmp1, edi, 1
FADD_FLOAT tmp1

;fst dword [edi]
FST_FLOAT
store tmp0, edi, 1

;fmul st0, st5
FMUL_ST 5

;faddp st1, st0
FADDP_ST 1

;fstp dword [eax]
FSTP_FLOAT
store tmp0, eax, 1

;fld st2
FLD_ST 2

;fmul dword [loc_4558C8]
load tmp1, loc_4558C8, 4
FMUL_FLOAT tmp1

;mov eax, [loc_4558CC]
load eax, loc_4558CC, 4

;fld dword [edx+eax*4]
shl tmpadr, eax, 2
add tmpadr, tmpadr, edx
load tmp1, tmpadr, 1
FLD_FLOAT tmp1

;fmul dword [loc_4558C4]
load tmp1, loc_4558C4, 4
FMUL_FLOAT tmp1

;faddp st1, st0
FADDP_ST 1

;fst st3
FST_ST 3

;mov eax, [loc_4558D0]
load eax, loc_4558D0, 4

;lea eax, [ebx+eax*4]
shl tmpadr, eax, 2
add eax, tmpadr, ebx

;faddp st1, st0
FADDP_ST 1

;fld dword [eax]
load tmp1, eax, 1
FLD_FLOAT tmp1

;fld st0
FLD_ST 0

;fmul st0, st6
FMUL_ST 6

;faddp st2, st0
FADDP_ST 2

;fxch st0, st1
FXCH_ST 1

;fst dword [ebx]
FST_FLOAT
store tmp0, ebx, 1

;fmul st0, st4
FMUL_ST 4

;faddp st1, st0
FADDP_ST 1

;fstp dword [eax]
FSTP_FLOAT
store tmp0, eax, 1

;mov eax, [loc_4558D4]
load eax, loc_4558D4, 4

;lea edi, [ebx+eax*4]
shl tmpadr, eax, 2
add edi, tmpadr, ebx

;mov eax, [loc_4558D8]
load eax, loc_4558D8, 4

;lea eax, [ebx+eax*4]
shl tmpadr, eax, 2
add eax, tmpadr, ebx

;fld dword [eax]
load tmp1, eax, 1
FLD_FLOAT tmp1

;fld st0
FLD_ST 0

;fmul st0, st5
FMUL_ST 5

;fadd dword [edi]
load tmp1, edi, 1
FADD_FLOAT tmp1

;fst dword [edi]
FST_FLOAT
store tmp0, edi, 1

;fmul st0, st4
FMUL_ST 4

;faddp st1, st0
FADDP_ST 1

;fstp dword [eax]
FSTP_FLOAT
store tmp0, eax, 1

;mov eax, [loc_4558DC]
load eax, loc_4558DC, 4

;fld dword [edx+eax*4]
shl tmpadr, eax, 2
add tmpadr, tmpadr, edx
load tmp1, tmpadr, 1
FLD_FLOAT tmp1

;mov eax, [loc_4558E0]
load eax, loc_4558E0, 4

;fadd dword [edx+eax*4]
shl tmpadr, eax, 2
add tmpadr, tmpadr, edx
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;mov eax, [loc_4558E4]
load eax, loc_4558E4, 4

;fadd dword [ebx+eax*4]
shl tmpadr, eax, 2
add tmpadr, tmpadr, ebx
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;mov eax, [loc_4558E8]
load eax, loc_4558E8, 4

;fadd dword [ebx+eax*4]
shl tmpadr, eax, 2
add tmpadr, tmpadr, ebx
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;fadd dword [ebp]
load tmp1, ebp, 4
FADD_FLOAT tmp1

;fstp dword [ebp]
FSTP_FLOAT
store tmp0, ebp, 4

;mov eax, [loc_4558EC]
load eax, loc_4558EC, 4

;fld dword [edx+eax*4]
shl tmpadr, eax, 2
add tmpadr, tmpadr, edx
load tmp1, tmpadr, 1
FLD_FLOAT tmp1

;mov eax, [loc_4558F0]
load eax, loc_4558F0, 4

;fadd dword [edx+eax*4]
shl tmpadr, eax, 2
add tmpadr, tmpadr, edx
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;mov eax, [loc_4558F4]
load eax, loc_4558F4, 4

;fadd dword [ebx+eax*4]
shl tmpadr, eax, 2
add tmpadr, tmpadr, ebx
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;mov eax, [loc_4558F8]
load eax, loc_4558F8, 4

;fadd dword [ebx+eax*4]
shl tmpadr, eax, 2
add tmpadr, tmpadr, ebx
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;lea eax, [ebp+0x400]
add eax, ebp, 1024

;fadd dword [eax]
load tmp1, eax, 1
FADD_FLOAT tmp1

;fstp dword [eax]
FSTP_FLOAT
store tmp0, eax, 1

;lea ebp, [ebp+0x4]
add ebp, ebp, 4

;lea ebx, [ebx+0x4]
add ebx, ebx, 4

;lea edx, [edx+0x4]
add edx, edx, 4

;lea ecx, [ecx+0x4]
add ecx, ecx, 4

;cmp ebp, esi
cmovult ebp, esi, tmpcnd, 0, 1

;jb near loc_40CEF0
ctcallz tmpcnd, loc_40CEF0

tcall loc_40D002
endp

proc loc_40D002
;pop edi
POP edi

;pop esi
POP esi

;pop ebp
POP ebp

;pop ebx
POP ebx

;fstp dword [loc_4558A8]
FSTP_FLOAT
store tmp0, loc_4558A8, 4

;fstp dword [loc_4558A4]
FSTP_FLOAT
store tmp0, loc_4558A4, 4

;fstp st0
FSTP_ST 0

;fstp st0
FSTP_ST 0

;ret 0x4
POP tmp1
add esp, esp, 4
tcall tmp1
endp

proc loc_40D600
;push ebx
PUSH ebx

;push ebp
PUSH ebp

;mov edx, loc_441048
mov edx, loc_441048

;fld dword [loc_41B6FC]
load tmp1, loc_41B6FC, 4
FLD_FLOAT tmp1

;fld dword [loc_4196A0]
load tmp1, loc_4196A0, 4
FLD_FLOAT tmp1

;fld dword [loc_4196A4]
load tmp1, loc_4196A4, 4
FLD_FLOAT tmp1

;mov eax, [loc_441848]
load eax, loc_441848, 4

;lea ebx, [edx+eax*4]
shl tmpadr, eax, 2
add ebx, tmpadr, edx

;lea ebp, [edx+0x400]
add ebp, edx, 1024

;jmp short loc_40D630
tcall loc_40D630
endp

proc loc_40D630
;fld dword [edx]
load tmp1, edx, 1
FLD_FLOAT tmp1

;fmul st0, st3
FMUL_ST 3

;fld st0
FLD_ST 0

;fabs
FABS_VOID

;fcomp st0, st3
FCOMP_ST 3

;fnstsw ax
FNSTSW_VOID
and eax, eax, 0xffff0000
or eax, eax, tmp0

;test ah, 0x41
and tmpcnd, eax, 0x4100

;jz short loc_40D6A0
ctcallz tmpcnd, loc_40D6A0

tcall loc_40D641
endp

proc loc_40D641
;fistp word [ecx]
FISTP_INT16
store16 tmp0, ecx, 1

;fld dword [ebp]
load tmp1, ebp, 4
FLD_FLOAT tmp1

;fmul st0, st3
FMUL_ST 3

;fld st0
FLD_ST 0

;fabs
FABS_VOID

;fcomp st0, st3
FCOMP_ST 3

;fnstsw ax
FNSTSW_VOID
and eax, eax, 0xffff0000
or eax, eax, tmp0

;test ah, 0x41
and tmpcnd, eax, 0x4100

;jz short loc_40D6B4
ctcallz tmpcnd, loc_40D6B4

tcall loc_40D655
endp

proc loc_40D655
;fistp word [ecx+0x2]
FISTP_INT16
add tmpadr, ecx, 2
store16 tmp0, tmpadr, 1

;fld dword [edx+0x4]
add tmpadr, edx, 4
load tmp1, tmpadr, 1
FLD_FLOAT tmp1

;fmul st0, st3
FMUL_ST 3

;fld st0
FLD_ST 0

;fabs
FABS_VOID

;fcomp st0, st3
FCOMP_ST 3

;fnstsw ax
FNSTSW_VOID
and eax, eax, 0xffff0000
or eax, eax, tmp0

;test ah, 0x41
and tmpcnd, eax, 0x4100

;jz short loc_40D6C8
ctcallz tmpcnd, loc_40D6C8

tcall loc_40D66A
endp

proc loc_40D66A
;fistp word [ecx+0x4]
FISTP_INT16
add tmpadr, ecx, 4
store16 tmp0, tmpadr, 1

;fld dword [ebp+0x4]
add tmpadr, ebp, 4
load tmp1, tmpadr, 4
FLD_FLOAT tmp1

;fmul st0, st3
FMUL_ST 3

;fld st0
FLD_ST 0

;fabs
FABS_VOID

;fcomp st0, st3
FCOMP_ST 3

;fnstsw ax
FNSTSW_VOID
and eax, eax, 0xffff0000
or eax, eax, tmp0

;test ah, 0x41
and tmpcnd, eax, 0x4100

;jz short loc_40D6DC
ctcallz tmpcnd, loc_40D6DC

tcall loc_40D67F
endp

proc loc_40D67F
;fistp word [ecx+0x6]
FISTP_INT16
add tmpadr, ecx, 6
store16 tmp0, tmpadr, 1

;lea edx, [edx+0x8]
add edx, edx, 8

;lea ebp, [ebp+0x8]
add ebp, ebp, 8

;lea ecx, [ecx+0x8]
add ecx, ecx, 8

;cmp edx, ebx
cmovult edx, ebx, tmpcnd, 0, 1

;jb short loc_40D630
ctcallz tmpcnd, loc_40D630

tcall loc_40D68F
endp

proc loc_40D68F
;fstp st0
FSTP_ST 0

;fstp st0
FSTP_ST 0

;fstp st0
FSTP_ST 0

;pop ebp
POP ebp

;pop ebx
POP ebx

;ret
POP tmp1
tcall tmp1
endp

proc loc_40D6A0
;fcomp st0, st2
FCOMP_ST 2

;fnstsw ax
FNSTSW_VOID
and eax, eax, 0xffff0000
or eax, eax, tmp0

;test ah, 0x41
and tmpcnd, eax, 0x4100

;jz short loc_40D6AD
ctcallz tmpcnd, loc_40D6AD

tcall loc_40D6A9
endp

proc loc_40D6A9
;fld st0
FLD_ST 0

;jmp short loc_40D641
tcall loc_40D641
endp

proc loc_40D6AD
;fld st1
FLD_ST 1

;jmp short loc_40D641
tcall loc_40D641
endp

proc loc_40D6B4
;fcomp st0, st1
FCOMP_ST 1

;fnstsw ax
FNSTSW_VOID
and eax, eax, 0xffff0000
or eax, eax, tmp0

;test ah, 0x41
and tmpcnd, eax, 0x4100

;jnz short loc_40D6C1
ctcallnz tmpcnd, loc_40D6C1

tcall loc_40D6BD
endp

proc loc_40D6BD
;fld st1
FLD_ST 1

;jmp short loc_40D655
tcall loc_40D655
endp

proc loc_40D6C1
;fld st0
FLD_ST 0

;jmp short loc_40D655
tcall loc_40D655
endp

proc loc_40D6C8
;fcomp st0, st1
FCOMP_ST 1

;fnstsw ax
FNSTSW_VOID
and eax, eax, 0xffff0000
or eax, eax, tmp0

;test ah, 0x41
and tmpcnd, eax, 0x4100

;jnz short loc_40D6D5
ctcallnz tmpcnd, loc_40D6D5

tcall loc_40D6D1
endp

proc loc_40D6D1
;fld st1
FLD_ST 1

;jmp short loc_40D66A
tcall loc_40D66A
endp

proc loc_40D6D5
;fld st0
FLD_ST 0

;jmp short loc_40D66A
tcall loc_40D66A
endp

proc loc_40D6DC
;fcomp st0, st1
FCOMP_ST 1

;fnstsw ax
FNSTSW_VOID
and eax, eax, 0xffff0000
or eax, eax, tmp0

;test ah, 0x41
and tmpcnd, eax, 0x4100

;jnz short loc_40D6E9
ctcallnz tmpcnd, loc_40D6E9

tcall loc_40D6E5
endp

proc loc_40D6E5
;fld st1
FLD_ST 1

;jmp short loc_40D67F
tcall loc_40D67F
endp

proc loc_40D6E9
;fld st0
FLD_ST 0

;jmp short loc_40D67F
tcall loc_40D67F
endp

proc loc_40D6F0
;push ebx
PUSH ebx

;push ecx
PUSH ecx

;push ecx
PUSH ecx

;fld dword [ecx+0x14]
add tmpadr, ecx, 20
load tmp1, tmpadr, 1
FLD_FLOAT tmp1

;fld dword [ecx+0x1c]
add tmpadr, ecx, 28
load tmp1, tmpadr, 1
FLD_FLOAT tmp1

;fld dword [ecx+0xc]
add tmpadr, ecx, 12
load tmp1, tmpadr, 1
FLD_FLOAT tmp1

;fld dword [ecx+0x20]
add tmpadr, ecx, 32
load tmp1, tmpadr, 1
FLD_FLOAT tmp1

;fld dword [ecx+0x10]
add tmpadr, ecx, 16
load tmp1, tmpadr, 1
FLD_FLOAT tmp1

;mov ebx, [ecx+0x8]
add tmpadr, ecx, 8
load ebx, tmpadr, 1

;mov eax, [loc_441848]
load eax, loc_441848, 4

;lea ecx, [edx+eax*4]
shl tmpadr, eax, 2
add ecx, tmpadr, edx

;jmp short loc_40D718
tcall loc_40D718
endp

proc loc_40D710
;cmp edx, ecx
cmovult edx, ecx, tmpcnd, 0, 1

;jae near loc_40D8A0
ctcallnz tmpcnd, loc_40D8A0

tcall loc_40D718
endp

proc loc_40D718
;mov eax, [edx]
load eax, edx, 1

;fist dword [esp]
FIST_INT32
store tmp0, esp, 4

;mov eax, [esp]
load eax, esp, 4

;lea eax, [ebx+eax*2]
shl tmpadr, eax, 1
add eax, tmpadr, ebx

;fild dword [esp]
load tmp1, esp, 4
FILD_INT32 tmp1

;fld st1
FLD_ST 1

;fxch st0, st1
FXCH_ST 1

;fsubp st1, st0
FSUBP_ST 1

;fild word [eax]
load16s tmp1, eax, 1
FILD_INT32 tmp1

;fild word [eax+0x2]
add tmpadr, eax, 2
load16s tmp1, tmpadr, 1
FILD_INT32 tmp1

;fsub st0, st1
FSUB_ST 1

;fmulp st2, st0
FMULP_ST 2

;faddp st1, st0
FADDP_ST 1

;fmul st0, st2
FMUL_ST 2

;fstp dword [edx]
FSTP_FLOAT
store tmp0, edx, 1

;fadd st0, st2
FADD_ST 2

;fcom st0, st3
FCOM_ST 3

;fnstsw ax
FNSTSW_VOID
and eax, eax, 0xffff0000
or eax, eax, tmp0

;test ah, 0x1
and tmpcnd, eax, 0x100

;jnz short loc_40D748
ctcallnz tmpcnd, loc_40D748

tcall loc_40D746
endp

proc loc_40D746
;fsub st0, st4
FSUB_ST 4

tcall loc_40D748
endp

proc loc_40D748
;fist dword [esp]
FIST_INT32
store tmp0, esp, 4

;mov eax, [esp]
load eax, esp, 4

;lea eax, [ebx+eax*2]
shl tmpadr, eax, 1
add eax, tmpadr, ebx

;fild dword [esp]
load tmp1, esp, 4
FILD_INT32 tmp1

;fld st1
FLD_ST 1

;fxch st0, st1
FXCH_ST 1

;fsubp st1, st0
FSUBP_ST 1

;fild word [eax]
load16s tmp1, eax, 1
FILD_INT32 tmp1

;fild word [eax+0x2]
add tmpadr, eax, 2
load16s tmp1, tmpadr, 1
FILD_INT32 tmp1

;fsub st0, st1
FSUB_ST 1

;fmulp st2, st0
FMULP_ST 2

;faddp st1, st0
FADDP_ST 1

;fmul st0, st2
FMUL_ST 2

;fstp dword [edx+0x4]
FSTP_FLOAT
add tmpadr, edx, 4
store tmp0, tmpadr, 1

;fadd st0, st2
FADD_ST 2

;fcom st0, st3
FCOM_ST 3

;fnstsw ax
FNSTSW_VOID
and eax, eax, 0xffff0000
or eax, eax, tmp0

;test ah, 0x1
and tmpcnd, eax, 0x100

;jnz short loc_40D777
ctcallnz tmpcnd, loc_40D777

tcall loc_40D775
endp

proc loc_40D775
;fsub st0, st4
FSUB_ST 4

tcall loc_40D777
endp

proc loc_40D777
;fist dword [esp]
FIST_INT32
store tmp0, esp, 4

;mov eax, [esp]
load eax, esp, 4

;lea eax, [ebx+eax*2]
shl tmpadr, eax, 1
add eax, tmpadr, ebx

;fild dword [esp]
load tmp1, esp, 4
FILD_INT32 tmp1

;fld st1
FLD_ST 1

;fxch st0, st1
FXCH_ST 1

;fsubp st1, st0
FSUBP_ST 1

;fild word [eax]
load16s tmp1, eax, 1
FILD_INT32 tmp1

;fild word [eax+0x2]
add tmpadr, eax, 2
load16s tmp1, tmpadr, 1
FILD_INT32 tmp1

;fsub st0, st1
FSUB_ST 1

;fmulp st2, st0
FMULP_ST 2

;faddp st1, st0
FADDP_ST 1

;fmul st0, st2
FMUL_ST 2

;fstp dword [edx+0x8]
FSTP_FLOAT
add tmpadr, edx, 8
store tmp0, tmpadr, 1

;fadd st0, st2
FADD_ST 2

;fcom st0, st3
FCOM_ST 3

;fnstsw ax
FNSTSW_VOID
and eax, eax, 0xffff0000
or eax, eax, tmp0

;test ah, 0x1
and tmpcnd, eax, 0x100

;jnz short loc_40D7A6
ctcallnz tmpcnd, loc_40D7A6

tcall loc_40D7A4
endp

proc loc_40D7A4
;fsub st0, st4
FSUB_ST 4

tcall loc_40D7A6
endp

proc loc_40D7A6
;fist dword [esp]
FIST_INT32
store tmp0, esp, 4

;mov eax, [esp]
load eax, esp, 4

;lea eax, [ebx+eax*2]
shl tmpadr, eax, 1
add eax, tmpadr, ebx

;fild dword [esp]
load tmp1, esp, 4
FILD_INT32 tmp1

;fld st1
FLD_ST 1

;fxch st0, st1
FXCH_ST 1

;fsubp st1, st0
FSUBP_ST 1

;fild word [eax]
load16s tmp1, eax, 1
FILD_INT32 tmp1

;fild word [eax+0x2]
add tmpadr, eax, 2
load16s tmp1, tmpadr, 1
FILD_INT32 tmp1

;fsub st0, st1
FSUB_ST 1

;fmulp st2, st0
FMULP_ST 2

;faddp st1, st0
FADDP_ST 1

;fmul st0, st2
FMUL_ST 2

;fstp dword [edx+0xc]
FSTP_FLOAT
add tmpadr, edx, 12
store tmp0, tmpadr, 1

;fadd st0, st2
FADD_ST 2

;fcom st0, st3
FCOM_ST 3

;fnstsw ax
FNSTSW_VOID
and eax, eax, 0xffff0000
or eax, eax, tmp0

;test ah, 0x1
and tmpcnd, eax, 0x100

;jnz short loc_40D7D5
ctcallnz tmpcnd, loc_40D7D5

tcall loc_40D7D3
endp

proc loc_40D7D3
;fsub st0, st4
FSUB_ST 4

tcall loc_40D7D5
endp

proc loc_40D7D5
;fist dword [esp]
FIST_INT32
store tmp0, esp, 4

;mov eax, [esp]
load eax, esp, 4

;lea eax, [ebx+eax*2]
shl tmpadr, eax, 1
add eax, tmpadr, ebx

;fild dword [esp]
load tmp1, esp, 4
FILD_INT32 tmp1

;fld st1
FLD_ST 1

;fxch st0, st1
FXCH_ST 1

;fsubp st1, st0
FSUBP_ST 1

;fild word [eax]
load16s tmp1, eax, 1
FILD_INT32 tmp1

;fild word [eax+0x2]
add tmpadr, eax, 2
load16s tmp1, tmpadr, 1
FILD_INT32 tmp1

;fsub st0, st1
FSUB_ST 1

;fmulp st2, st0
FMULP_ST 2

;faddp st1, st0
FADDP_ST 1

;fmul st0, st2
FMUL_ST 2

;fstp dword [edx+0x10]
FSTP_FLOAT
add tmpadr, edx, 16
store tmp0, tmpadr, 1

;fadd st0, st2
FADD_ST 2

;fcom st0, st3
FCOM_ST 3

;fnstsw ax
FNSTSW_VOID
and eax, eax, 0xffff0000
or eax, eax, tmp0

;test ah, 0x1
and tmpcnd, eax, 0x100

;jnz short loc_40D804
ctcallnz tmpcnd, loc_40D804

tcall loc_40D802
endp

proc loc_40D802
;fsub st0, st4
FSUB_ST 4

tcall loc_40D804
endp

proc loc_40D804
;fist dword [esp]
FIST_INT32
store tmp0, esp, 4

;mov eax, [esp]
load eax, esp, 4

;lea eax, [ebx+eax*2]
shl tmpadr, eax, 1
add eax, tmpadr, ebx

;fild dword [esp]
load tmp1, esp, 4
FILD_INT32 tmp1

;fld st1
FLD_ST 1

;fxch st0, st1
FXCH_ST 1

;fsubp st1, st0
FSUBP_ST 1

;fild word [eax]
load16s tmp1, eax, 1
FILD_INT32 tmp1

;fild word [eax+0x2]
add tmpadr, eax, 2
load16s tmp1, tmpadr, 1
FILD_INT32 tmp1

;fsub st0, st1
FSUB_ST 1

;fmulp st2, st0
FMULP_ST 2

;faddp st1, st0
FADDP_ST 1

;fmul st0, st2
FMUL_ST 2

;fstp dword [edx+0x14]
FSTP_FLOAT
add tmpadr, edx, 20
store tmp0, tmpadr, 1

;fadd st0, st2
FADD_ST 2

;fcom st0, st3
FCOM_ST 3

;fnstsw ax
FNSTSW_VOID
and eax, eax, 0xffff0000
or eax, eax, tmp0

;test ah, 0x1
and tmpcnd, eax, 0x100

;jnz short loc_40D833
ctcallnz tmpcnd, loc_40D833

tcall loc_40D831
endp

proc loc_40D831
;fsub st0, st4
FSUB_ST 4

tcall loc_40D833
endp

proc loc_40D833
;fist dword [esp]
FIST_INT32
store tmp0, esp, 4

;mov eax, [esp]
load eax, esp, 4

;lea eax, [ebx+eax*2]
shl tmpadr, eax, 1
add eax, tmpadr, ebx

;fild dword [esp]
load tmp1, esp, 4
FILD_INT32 tmp1

;fld st1
FLD_ST 1

;fxch st0, st1
FXCH_ST 1

;fsubp st1, st0
FSUBP_ST 1

;fild word [eax]
load16s tmp1, eax, 1
FILD_INT32 tmp1

;fild word [eax+0x2]
add tmpadr, eax, 2
load16s tmp1, tmpadr, 1
FILD_INT32 tmp1

;fsub st0, st1
FSUB_ST 1

;fmulp st2, st0
FMULP_ST 2

;faddp st1, st0
FADDP_ST 1

;fmul st0, st2
FMUL_ST 2

;fstp dword [edx+0x18]
FSTP_FLOAT
add tmpadr, edx, 24
store tmp0, tmpadr, 1

;fadd st0, st2
FADD_ST 2

;fcom st0, st3
FCOM_ST 3

;fnstsw ax
FNSTSW_VOID
and eax, eax, 0xffff0000
or eax, eax, tmp0

;test ah, 0x1
and tmpcnd, eax, 0x100

;jnz short loc_40D862
ctcallnz tmpcnd, loc_40D862

tcall loc_40D860
endp

proc loc_40D860
;fsub st0, st4
FSUB_ST 4

tcall loc_40D862
endp

proc loc_40D862
;fist dword [esp]
FIST_INT32
store tmp0, esp, 4

;mov eax, [esp]
load eax, esp, 4

;lea eax, [ebx+eax*2]
shl tmpadr, eax, 1
add eax, tmpadr, ebx

;fild dword [esp]
load tmp1, esp, 4
FILD_INT32 tmp1

;fld st1
FLD_ST 1

;fxch st0, st1
FXCH_ST 1

;fsubp st1, st0
FSUBP_ST 1

;fild word [eax]
load16s tmp1, eax, 1
FILD_INT32 tmp1

;fild word [eax+0x2]
add tmpadr, eax, 2
load16s tmp1, tmpadr, 1
FILD_INT32 tmp1

;fsub st0, st1
FSUB_ST 1

;fmulp st2, st0
FMULP_ST 2

;faddp st1, st0
FADDP_ST 1

;fmul st0, st2
FMUL_ST 2

;fstp dword [edx+0x1c]
FSTP_FLOAT
add tmpadr, edx, 28
store tmp0, tmpadr, 1

;fadd st0, st2
FADD_ST 2

;fcom st0, st3
FCOM_ST 3

;fnstsw ax
FNSTSW_VOID
and eax, eax, 0xffff0000
or eax, eax, tmp0

;lea edx, [edx+0x20]
add edx, edx, 32

;test ah, 0x1
and tmpcnd, eax, 0x100

;jnz near loc_40D710
ctcallnz tmpcnd, loc_40D710

tcall loc_40D896
endp

proc loc_40D896
;fsub st0, st4
FSUB_ST 4

;cmp edx, ecx
cmovult edx, ecx, tmpcnd, 0, 1

;jb near loc_40D718
ctcallz tmpcnd, loc_40D718

tcall loc_40D8A0
endp

proc loc_40D8A0
;pop ecx
POP ecx

;pop ecx
POP ecx

;fstp dword [ecx+0x10]
FSTP_FLOAT
add tmpadr, ecx, 16
store tmp0, tmpadr, 1

;fstp st0
FSTP_ST 0

;fstp st0
FSTP_ST 0

;fstp st0
FSTP_ST 0

;fstp st0
FSTP_ST 0

;pop ebx
POP ebx

;ret
POP tmp1
tcall tmp1
endp

proc loc_40D8B0
;push ebx
PUSH ebx

;push ecx
PUSH ecx

;push ecx
PUSH ecx

;fld dword [ecx+0x14]
add tmpadr, ecx, 20
load tmp1, tmpadr, 1
FLD_FLOAT tmp1

;fld dword [ecx+0x1c]
add tmpadr, ecx, 28
load tmp1, tmpadr, 1
FLD_FLOAT tmp1

;fld dword [ecx+0xc]
add tmpadr, ecx, 12
load tmp1, tmpadr, 1
FLD_FLOAT tmp1

;fld dword [ecx+0x20]
add tmpadr, ecx, 32
load tmp1, tmpadr, 1
FLD_FLOAT tmp1

;fld dword [ecx+0x10]
add tmpadr, ecx, 16
load tmp1, tmpadr, 1
FLD_FLOAT tmp1

;mov ebx, [ecx+0x8]
add tmpadr, ecx, 8
load ebx, tmpadr, 1

;mov eax, [loc_441848]
load eax, loc_441848, 4

;lea ecx, [edx+eax*4]
shl tmpadr, eax, 2
add ecx, tmpadr, edx

;jmp short loc_40D8D8
tcall loc_40D8D8
endp

proc loc_40D8D0
;cmp edx, ecx
cmovult edx, ecx, tmpcnd, 0, 1

;jae near loc_40DA7C
ctcallnz tmpcnd, loc_40DA7C

tcall loc_40D8D8
endp

proc loc_40D8D8
;fist dword [esp]
FIST_INT32
store tmp0, esp, 4

;mov eax, [esp]
load eax, esp, 4

;lea eax, [ebx+eax*2]
shl tmpadr, eax, 1
add eax, tmpadr, ebx

;fild dword [esp]
load tmp1, esp, 4
FILD_INT32 tmp1

;fld st1
FLD_ST 1

;fxch st0, st1
FXCH_ST 1

;fsubp st1, st0
FSUBP_ST 1

;fild word [eax]
load16s tmp1, eax, 1
FILD_INT32 tmp1

;fild word [eax+0x2]
add tmpadr, eax, 2
load16s tmp1, tmpadr, 1
FILD_INT32 tmp1

;fsub st0, st1
FSUB_ST 1

;fmulp st2, st0
FMULP_ST 2

;faddp st1, st0
FADDP_ST 1

;fmul st0, st2
FMUL_ST 2

;fadd dword [edx]
load tmp1, edx, 1
FADD_FLOAT tmp1

;fstp dword [edx]
FSTP_FLOAT
store tmp0, edx, 1

;fadd st0, st2
FADD_ST 2

;fcom st0, st3
FCOM_ST 3

;fnstsw ax
FNSTSW_VOID
and eax, eax, 0xffff0000
or eax, eax, tmp0

;lea edx, [edx+0x4]
add edx, edx, 4

;test ah, 0x1
and tmpcnd, eax, 0x100

;jnz short loc_40D90B
ctcallnz tmpcnd, loc_40D90B

tcall loc_40D909
endp

proc loc_40D909
;fsub st0, st4
FSUB_ST 4

tcall loc_40D90B
endp

proc loc_40D90B
;fist dword [esp]
FIST_INT32
store tmp0, esp, 4

;mov eax, [esp]
load eax, esp, 4

;lea eax, [ebx+eax*2]
shl tmpadr, eax, 1
add eax, tmpadr, ebx

;fild dword [esp]
load tmp1, esp, 4
FILD_INT32 tmp1

;fld st1
FLD_ST 1

;fxch st0, st1
FXCH_ST 1

;fsubp st1, st0
FSUBP_ST 1

;fild word [eax]
load16s tmp1, eax, 1
FILD_INT32 tmp1

;fild word [eax+0x2]
add tmpadr, eax, 2
load16s tmp1, tmpadr, 1
FILD_INT32 tmp1

;fsub st0, st1
FSUB_ST 1

;fmulp st2, st0
FMULP_ST 2

;faddp st1, st0
FADDP_ST 1

;fmul st0, st2
FMUL_ST 2

;fadd dword [edx]
load tmp1, edx, 1
FADD_FLOAT tmp1

;fstp dword [edx]
FSTP_FLOAT
store tmp0, edx, 1

;fadd st0, st2
FADD_ST 2

;fcom st0, st3
FCOM_ST 3

;fnstsw ax
FNSTSW_VOID
and eax, eax, 0xffff0000
or eax, eax, tmp0

;lea edx, [edx+0x4]
add edx, edx, 4

;test ah, 0x1
and tmpcnd, eax, 0x100

;jnz short loc_40D93E
ctcallnz tmpcnd, loc_40D93E

tcall loc_40D93C
endp

proc loc_40D93C
;fsub st0, st4
FSUB_ST 4

tcall loc_40D93E
endp

proc loc_40D93E
;fist dword [esp]
FIST_INT32
store tmp0, esp, 4

;mov eax, [esp]
load eax, esp, 4

;lea eax, [ebx+eax*2]
shl tmpadr, eax, 1
add eax, tmpadr, ebx

;fild dword [esp]
load tmp1, esp, 4
FILD_INT32 tmp1

;fld st1
FLD_ST 1

;fxch st0, st1
FXCH_ST 1

;fsubp st1, st0
FSUBP_ST 1

;fild word [eax]
load16s tmp1, eax, 1
FILD_INT32 tmp1

;fild word [eax+0x2]
add tmpadr, eax, 2
load16s tmp1, tmpadr, 1
FILD_INT32 tmp1

;fsub st0, st1
FSUB_ST 1

;fmulp st2, st0
FMULP_ST 2

;faddp st1, st0
FADDP_ST 1

;fmul st0, st2
FMUL_ST 2

;fadd dword [edx]
load tmp1, edx, 1
FADD_FLOAT tmp1

;fstp dword [edx]
FSTP_FLOAT
store tmp0, edx, 1

;fadd st0, st2
FADD_ST 2

;fcom st0, st3
FCOM_ST 3

;fnstsw ax
FNSTSW_VOID
and eax, eax, 0xffff0000
or eax, eax, tmp0

;lea edx, [edx+0x4]
add edx, edx, 4

;test ah, 0x1
and tmpcnd, eax, 0x100

;jnz short loc_40D971
ctcallnz tmpcnd, loc_40D971

tcall loc_40D96F
endp

proc loc_40D96F
;fsub st0, st4
FSUB_ST 4

tcall loc_40D971
endp

proc loc_40D971
;fist dword [esp]
FIST_INT32
store tmp0, esp, 4

;mov eax, [esp]
load eax, esp, 4

;lea eax, [ebx+eax*2]
shl tmpadr, eax, 1
add eax, tmpadr, ebx

;fild dword [esp]
load tmp1, esp, 4
FILD_INT32 tmp1

;fld st1
FLD_ST 1

;fxch st0, st1
FXCH_ST 1

;fsubp st1, st0
FSUBP_ST 1

;fild word [eax]
load16s tmp1, eax, 1
FILD_INT32 tmp1

;fild word [eax+0x2]
add tmpadr, eax, 2
load16s tmp1, tmpadr, 1
FILD_INT32 tmp1

;fsub st0, st1
FSUB_ST 1

;fmulp st2, st0
FMULP_ST 2

;faddp st1, st0
FADDP_ST 1

;fmul st0, st2
FMUL_ST 2

;fadd dword [edx]
load tmp1, edx, 1
FADD_FLOAT tmp1

;fstp dword [edx]
FSTP_FLOAT
store tmp0, edx, 1

;fadd st0, st2
FADD_ST 2

;fcom st0, st3
FCOM_ST 3

;fnstsw ax
FNSTSW_VOID
and eax, eax, 0xffff0000
or eax, eax, tmp0

;lea edx, [edx+0x4]
add edx, edx, 4

;test ah, 0x1
and tmpcnd, eax, 0x100

;jnz short loc_40D9A4
ctcallnz tmpcnd, loc_40D9A4

tcall loc_40D9A2
endp

proc loc_40D9A2
;fsub st0, st4
FSUB_ST 4

tcall loc_40D9A4
endp

proc loc_40D9A4
;fist dword [esp]
FIST_INT32
store tmp0, esp, 4

;mov eax, [esp]
load eax, esp, 4

;lea eax, [ebx+eax*2]
shl tmpadr, eax, 1
add eax, tmpadr, ebx

;fild dword [esp]
load tmp1, esp, 4
FILD_INT32 tmp1

;fld st1
FLD_ST 1

;fxch st0, st1
FXCH_ST 1

;fsubp st1, st0
FSUBP_ST 1

;fild word [eax]
load16s tmp1, eax, 1
FILD_INT32 tmp1

;fild word [eax+0x2]
add tmpadr, eax, 2
load16s tmp1, tmpadr, 1
FILD_INT32 tmp1

;fsub st0, st1
FSUB_ST 1

;fmulp st2, st0
FMULP_ST 2

;faddp st1, st0
FADDP_ST 1

;fmul st0, st2
FMUL_ST 2

;fadd dword [edx]
load tmp1, edx, 1
FADD_FLOAT tmp1

;fstp dword [edx]
FSTP_FLOAT
store tmp0, edx, 1

;fadd st0, st2
FADD_ST 2

;fcom st0, st3
FCOM_ST 3

;fnstsw ax
FNSTSW_VOID
and eax, eax, 0xffff0000
or eax, eax, tmp0

;lea edx, [edx+0x4]
add edx, edx, 4

;test ah, 0x1
and tmpcnd, eax, 0x100

;jnz short loc_40D9D7
ctcallnz tmpcnd, loc_40D9D7

tcall loc_40D9D5
endp

proc loc_40D9D5
;fsub st0, st4
FSUB_ST 4

tcall loc_40D9D7
endp

proc loc_40D9D7
;fist dword [esp]
FIST_INT32
store tmp0, esp, 4

;mov eax, [esp]
load eax, esp, 4

;lea eax, [ebx+eax*2]
shl tmpadr, eax, 1
add eax, tmpadr, ebx

;fild dword [esp]
load tmp1, esp, 4
FILD_INT32 tmp1

;fld st1
FLD_ST 1

;fxch st0, st1
FXCH_ST 1

;fsubp st1, st0
FSUBP_ST 1

;fild word [eax]
load16s tmp1, eax, 1
FILD_INT32 tmp1

;fild word [eax+0x2]
add tmpadr, eax, 2
load16s tmp1, tmpadr, 1
FILD_INT32 tmp1

;fsub st0, st1
FSUB_ST 1

;fmulp st2, st0
FMULP_ST 2

;faddp st1, st0
FADDP_ST 1

;fmul st0, st2
FMUL_ST 2

;fadd dword [edx]
load tmp1, edx, 1
FADD_FLOAT tmp1

;fstp dword [edx]
FSTP_FLOAT
store tmp0, edx, 1

;fadd st0, st2
FADD_ST 2

;fcom st0, st3
FCOM_ST 3

;fnstsw ax
FNSTSW_VOID
and eax, eax, 0xffff0000
or eax, eax, tmp0

;lea edx, [edx+0x4]
add edx, edx, 4

;test ah, 0x1
and tmpcnd, eax, 0x100

;jnz short loc_40DA0A
ctcallnz tmpcnd, loc_40DA0A

tcall loc_40DA08
endp

proc loc_40DA08
;fsub st0, st4
FSUB_ST 4

tcall loc_40DA0A
endp

proc loc_40DA0A
;fist dword [esp]
FIST_INT32
store tmp0, esp, 4

;mov eax, [esp]
load eax, esp, 4

;lea eax, [ebx+eax*2]
shl tmpadr, eax, 1
add eax, tmpadr, ebx

;fild dword [esp]
load tmp1, esp, 4
FILD_INT32 tmp1

;fld st1
FLD_ST 1

;fxch st0, st1
FXCH_ST 1

;fsubp st1, st0
FSUBP_ST 1

;fild word [eax]
load16s tmp1, eax, 1
FILD_INT32 tmp1

;fild word [eax+0x2]
add tmpadr, eax, 2
load16s tmp1, tmpadr, 1
FILD_INT32 tmp1

;fsub st0, st1
FSUB_ST 1

;fmulp st2, st0
FMULP_ST 2

;faddp st1, st0
FADDP_ST 1

;fmul st0, st2
FMUL_ST 2

;fadd dword [edx]
load tmp1, edx, 1
FADD_FLOAT tmp1

;fstp dword [edx]
FSTP_FLOAT
store tmp0, edx, 1

;fadd st0, st2
FADD_ST 2

;fcom st0, st3
FCOM_ST 3

;fnstsw ax
FNSTSW_VOID
and eax, eax, 0xffff0000
or eax, eax, tmp0

;lea edx, [edx+0x4]
add edx, edx, 4

;test ah, 0x1
and tmpcnd, eax, 0x100

;jnz short loc_40DA3D
ctcallnz tmpcnd, loc_40DA3D

tcall loc_40DA3B
endp

proc loc_40DA3B
;fsub st0, st4
FSUB_ST 4

tcall loc_40DA3D
endp

proc loc_40DA3D
;fist dword [esp]
FIST_INT32
store tmp0, esp, 4

;mov eax, [esp]
load eax, esp, 4

;lea eax, [ebx+eax*2]
shl tmpadr, eax, 1
add eax, tmpadr, ebx

;fild dword [esp]
load tmp1, esp, 4
FILD_INT32 tmp1

;fld st1
FLD_ST 1

;fxch st0, st1
FXCH_ST 1

;fsubp st1, st0
FSUBP_ST 1

;fild word [eax]
load16s tmp1, eax, 1
FILD_INT32 tmp1

;fild word [eax+0x2]
add tmpadr, eax, 2
load16s tmp1, tmpadr, 1
FILD_INT32 tmp1

;fsub st0, st1
FSUB_ST 1

;fmulp st2, st0
FMULP_ST 2

;faddp st1, st0
FADDP_ST 1

;fmul st0, st2
FMUL_ST 2

;fadd dword [edx]
load tmp1, edx, 1
FADD_FLOAT tmp1

;fstp dword [edx]
FSTP_FLOAT
store tmp0, edx, 1

;fadd st0, st2
FADD_ST 2

;fcom st0, st3
FCOM_ST 3

;fnstsw ax
FNSTSW_VOID
and eax, eax, 0xffff0000
or eax, eax, tmp0

;lea edx, [edx+0x4]
add edx, edx, 4

;test ah, 0x1
and tmpcnd, eax, 0x100

;jnz near loc_40D8D0
ctcallnz tmpcnd, loc_40D8D0

tcall loc_40DA72
endp

proc loc_40DA72
;fsub st0, st4
FSUB_ST 4

;cmp edx, ecx
cmovult edx, ecx, tmpcnd, 0, 1

;jb near loc_40D8D8
ctcallz tmpcnd, loc_40D8D8

tcall loc_40DA7C
endp

proc loc_40DA7C
;pop ecx
POP ecx

;pop ecx
POP ecx

;fstp dword [ecx+0x10]
FSTP_FLOAT
add tmpadr, ecx, 16
store tmp0, tmpadr, 1

;fstp st0
FSTP_ST 0

;fstp st0
FSTP_ST 0

;fstp st0
FSTP_ST 0

;fstp st0
FSTP_ST 0

;pop ebx
POP ebx

;ret
POP tmp1
tcall tmp1
endp

proc loc_40DA90
;push ebx
PUSH ebx

;lea edx, [ecx+edx*4]
shl tmpadr, edx, 2
add edx, tmpadr, ecx

;xor eax, eax
xor eax, eax, eax

;jmp short loc_40DA9B
tcall loc_40DA9B
endp

;
proc loc_40DA9B
;mov ebx, [ecx]
load ebx, ecx, 1

;mov [ecx], eax
store eax, ecx, 1

;mov [ecx+0x4], eax
add tmpadr, ecx, 4
store eax, tmpadr, 1

;mov [ecx+0x8], eax
add tmpadr, ecx, 8
store eax, tmpadr, 1

;mov [ecx+0xc], eax
add tmpadr, ecx, 12
store eax, tmpadr, 1

;mov [ecx+0x10], eax
add tmpadr, ecx, 16
store eax, tmpadr, 1

;mov [ecx+0x14], eax
add tmpadr, ecx, 20
store eax, tmpadr, 1

;mov [ecx+0x18], eax
add tmpadr, ecx, 24
store eax, tmpadr, 1

;mov [ecx+0x1c], eax
add tmpadr, ecx, 28
store eax, tmpadr, 1

;mov ebx, [ecx+0x20]
add tmpadr, ecx, 32
load ebx, tmpadr, 1

;mov [ecx+0x20], eax
add tmpadr, ecx, 32
store eax, tmpadr, 1

;mov [ecx+0x24], eax
add tmpadr, ecx, 36
store eax, tmpadr, 1

;mov [ecx+0x28], eax
add tmpadr, ecx, 40
store eax, tmpadr, 1

;mov [ecx+0x2c], eax
add tmpadr, ecx, 44
store eax, tmpadr, 1

;mov [ecx+0x30], eax
add tmpadr, ecx, 48
store eax, tmpadr, 1

;mov [ecx+0x34], eax
add tmpadr, ecx, 52
store eax, tmpadr, 1

;mov [ecx+0x38], eax
add tmpadr, ecx, 56
store eax, tmpadr, 1

;mov [ecx+0x3c], eax
add tmpadr, ecx, 60
store eax, tmpadr, 1

;mov ebx, [ecx+0x40]
add tmpadr, ecx, 64
load ebx, tmpadr, 1

;mov [ecx+0x40], eax
add tmpadr, ecx, 64
store eax, tmpadr, 1

;mov [ecx+0x44], eax
add tmpadr, ecx, 68
store eax, tmpadr, 1

;mov [ecx+0x48], eax
add tmpadr, ecx, 72
store eax, tmpadr, 1

;mov [ecx+0x4c], eax
add tmpadr, ecx, 76
store eax, tmpadr, 1

;mov [ecx+0x50], eax
add tmpadr, ecx, 80
store eax, tmpadr, 1

;mov [ecx+0x54], eax
add tmpadr, ecx, 84
store eax, tmpadr, 1

;mov [ecx+0x58], eax
add tmpadr, ecx, 88
store eax, tmpadr, 1

;mov [ecx+0x5c], eax
add tmpadr, ecx, 92
store eax, tmpadr, 1

;mov ebx, [ecx+0x60]
add tmpadr, ecx, 96
load ebx, tmpadr, 1

;mov [ecx+0x60], eax
add tmpadr, ecx, 96
store eax, tmpadr, 1

;mov [ecx+0x64], eax
add tmpadr, ecx, 100
store eax, tmpadr, 1

;mov [ecx+0x68], eax
add tmpadr, ecx, 104
store eax, tmpadr, 1

;mov [ecx+0x6c], eax
add tmpadr, ecx, 108
store eax, tmpadr, 1

;mov [ecx+0x70], eax
add tmpadr, ecx, 112
store eax, tmpadr, 1

;mov [ecx+0x74], eax
add tmpadr, ecx, 116
store eax, tmpadr, 1

;mov [ecx+0x78], eax
add tmpadr, ecx, 120
store eax, tmpadr, 1

;mov [ecx+0x7c], eax
add tmpadr, ecx, 124
store eax, tmpadr, 1

;lea ecx, [ecx+0x80]
add ecx, ecx, 128

;cmp ecx, edx
cmovult ecx, edx, tmpcnd, 0, 1

;jb short loc_40DA9B
ctcallz tmpcnd, loc_40DA9B

tcall loc_40DB0F
endp

proc loc_40DB0F
;pop ebx
POP ebx

;ret
POP tmp1
tcall tmp1
endp

proc loc_40DB20
;fld dword [loc_4196AC]
load tmp1, loc_4196AC, 4
FLD_FLOAT tmp1

;fldz
FLDZ_VOID

;fld dword [esp+0x4]
add tmpadr, esp, 4
load tmp1, tmpadr, 4
FLD_FLOAT tmp1

;push ecx
PUSH ecx

;push ecx
PUSH ecx

;xor ecx, ecx
xor ecx, ecx, ecx

;fcom st0, st1
FCOM_ST 1

;fnstsw ax
FNSTSW_VOID
and eax, eax, 0xffff0000
or eax, eax, tmp0

;test ah, 0x1
and tmpcnd, eax, 0x100

;jz near loc_40DBE0
ctcallz tmpcnd, loc_40DBE0

tcall loc_40DB3D
endp

proc loc_40DB3D
;inc ecx
add ecx, ecx, 1

;fadd st0, st2
FADD_ST 2

;fcom st0, st1
FCOM_ST 1

;fnstsw ax
FNSTSW_VOID
and eax, eax, 0xffff0000
or eax, eax, tmp0

;test ah, 0x1
and tmpcnd, eax, 0x100

;jz short loc_40DBA4
ctcallz tmpcnd, loc_40DBA4

tcall loc_40DB49
endp

proc loc_40DB49
;inc ecx
add ecx, ecx, 1

;fadd st0, st2
FADD_ST 2

;fcom st0, st1
FCOM_ST 1

;fnstsw ax
FNSTSW_VOID
and eax, eax, 0xffff0000
or eax, eax, tmp0

;test ah, 0x1
and tmpcnd, eax, 0x100

;jz short loc_40DBA4
ctcallz tmpcnd, loc_40DBA4

tcall loc_40DB55
endp

proc loc_40DB55
;inc ecx
add ecx, ecx, 1

;fadd st0, st2
FADD_ST 2

;fcom st0, st1
FCOM_ST 1

;fnstsw ax
FNSTSW_VOID
and eax, eax, 0xffff0000
or eax, eax, tmp0

;test ah, 0x1
and tmpcnd, eax, 0x100

;jz short loc_40DBA4
ctcallz tmpcnd, loc_40DBA4

tcall loc_40DB61
endp

proc loc_40DB61
;inc ecx
add ecx, ecx, 1

;fadd st0, st2
FADD_ST 2

;fcom st0, st1
FCOM_ST 1

;fnstsw ax
FNSTSW_VOID
and eax, eax, 0xffff0000
or eax, eax, tmp0

;test ah, 0x1
and tmpcnd, eax, 0x100

;jz short loc_40DBA4
ctcallz tmpcnd, loc_40DBA4

tcall loc_40DB6D
endp

proc loc_40DB6D
;inc ecx
add ecx, ecx, 1

;fadd st0, st2
FADD_ST 2

;fcom st0, st1
FCOM_ST 1

;fnstsw ax
FNSTSW_VOID
and eax, eax, 0xffff0000
or eax, eax, tmp0

;test ah, 0x1
and tmpcnd, eax, 0x100

;jz short loc_40DBA4
ctcallz tmpcnd, loc_40DBA4

tcall loc_40DB79
endp

proc loc_40DB79
;inc ecx
add ecx, ecx, 1

;fadd st0, st2
FADD_ST 2

;fcom st0, st1
FCOM_ST 1

;fnstsw ax
FNSTSW_VOID
and eax, eax, 0xffff0000
or eax, eax, tmp0

;test ah, 0x1
and tmpcnd, eax, 0x100

;jz short loc_40DBA4
ctcallz tmpcnd, loc_40DBA4

tcall loc_40DB85
endp

proc loc_40DB85
;inc ecx
add ecx, ecx, 1

;fadd st0, st2
FADD_ST 2

;fcom st0, st1
FCOM_ST 1

;fnstsw ax
FNSTSW_VOID
and eax, eax, 0xffff0000
or eax, eax, tmp0

;test ah, 0x1
and tmpcnd, eax, 0x100

;jz short loc_40DBA4
ctcallz tmpcnd, loc_40DBA4

tcall loc_40DB91
endp

proc loc_40DB91
;inc ecx
add ecx, ecx, 1

;fld st0
FLD_ST 0

;fsubp st1, st0
FSUBP_ST 1

;jmp short loc_40DBA4
tcall loc_40DBA4
endp

proc loc_40DBA4
;fistp dword [esp]
FISTP_INT32
store tmp0, esp, 4

;fld dword [ecx*4+loc_418794]
mov tmpadr, loc_418794
shl tmp0, ecx, 2
add tmpadr, tmpadr, tmp0
load tmp1, tmpadr, 4
FLD_FLOAT tmp1

;mov eax, [esp]
load eax, esp, 4

;and eax, 0xff
and eax, eax, 0xff

;fmul dword [eax*4+loc_4181F8]
mov tmpadr, loc_4181F8
shl tmp0, eax, 2
add tmpadr, tmpadr, tmp0
load tmp1, tmpadr, 4
FMUL_FLOAT tmp1

;mov eax, [esp]
load eax, esp, 4

;shr eax, 0x8
lshr eax, eax, 8

;and eax, 0xff
and eax, eax, 0xff

;fmul dword [eax*4+loc_4185F8]
mov tmpadr, loc_4185F8
shl tmp0, eax, 2
add tmpadr, tmpadr, tmp0
load tmp1, tmpadr, 4
FMUL_FLOAT tmp1

;fstp st2
FSTP_ST 2

;fstp st0
FSTP_ST 0

;pop ecx
POP ecx

;pop ecx
POP ecx

;ret 0x4
POP tmp1
add esp, esp, 4
tcall tmp1
endp

proc loc_40DBE0
;fcom st0, st2
FCOM_ST 2

;fnstsw ax
FNSTSW_VOID
and eax, eax, 0xffff0000
or eax, eax, tmp0

;test ah, 0x41
and tmpcnd, eax, 0x4100

;jnz short loc_40DC50
ctcallnz tmpcnd, loc_40DC50

tcall loc_40DBE9
endp

proc loc_40DBE9
;inc ecx
add ecx, ecx, 1

;fsub st0, st2
FSUB_ST 2

;fcom st0, st2
FCOM_ST 2

;fnstsw ax
FNSTSW_VOID
and eax, eax, 0xffff0000
or eax, eax, tmp0

;test ah, 0x41
and tmpcnd, eax, 0x4100

;jnz short loc_40DC50
ctcallnz tmpcnd, loc_40DC50

tcall loc_40DBF5
endp

proc loc_40DBF5
;inc ecx
add ecx, ecx, 1

;fsub st0, st2
FSUB_ST 2

;fcom st0, st2
FCOM_ST 2

;fnstsw ax
FNSTSW_VOID
and eax, eax, 0xffff0000
or eax, eax, tmp0

;test ah, 0x41
and tmpcnd, eax, 0x4100

;jnz short loc_40DC50
ctcallnz tmpcnd, loc_40DC50

tcall loc_40DC01
endp

proc loc_40DC01
;inc ecx
add ecx, ecx, 1

;fsub st0, st2
FSUB_ST 2

;fcom st0, st2
FCOM_ST 2

;fnstsw ax
FNSTSW_VOID
and eax, eax, 0xffff0000
or eax, eax, tmp0

;test ah, 0x41
and tmpcnd, eax, 0x4100

;jnz short loc_40DC50
ctcallnz tmpcnd, loc_40DC50

tcall loc_40DC0D
endp

proc loc_40DC0D
;inc ecx
add ecx, ecx, 1

;fsub st0, st2
FSUB_ST 2

;fcom st0, st2
FCOM_ST 2

;fnstsw ax
FNSTSW_VOID
and eax, eax, 0xffff0000
or eax, eax, tmp0

;test ah, 0x41
and tmpcnd, eax, 0x4100

;jnz short loc_40DC50
ctcallnz tmpcnd, loc_40DC50

tcall loc_40DC19
endp

proc loc_40DC19
;inc ecx
add ecx, ecx, 1

;fsub st0, st2
FSUB_ST 2

;fcom st0, st2
FCOM_ST 2

;fnstsw ax
FNSTSW_VOID
and eax, eax, 0xffff0000
or eax, eax, tmp0

;test ah, 0x41
and tmpcnd, eax, 0x4100

;jnz short loc_40DC50
ctcallnz tmpcnd, loc_40DC50

tcall loc_40DC25
endp

proc loc_40DC25
;inc ecx
add ecx, ecx, 1

;fsub st0, st2
FSUB_ST 2

;fcom st0, st2
FCOM_ST 2

;fnstsw ax
FNSTSW_VOID
and eax, eax, 0xffff0000
or eax, eax, tmp0

;test ah, 0x41
and tmpcnd, eax, 0x4100

;jnz short loc_40DC50
ctcallnz tmpcnd, loc_40DC50

tcall loc_40DC31
endp

proc loc_40DC31
;inc ecx
add ecx, ecx, 1

;fsub st0, st2
FSUB_ST 2

;fcom st0, st2
FCOM_ST 2

;fnstsw ax
FNSTSW_VOID
and eax, eax, 0xffff0000
or eax, eax, tmp0

;test ah, 0x41
and tmpcnd, eax, 0x4100

;jnz short loc_40DC50
ctcallnz tmpcnd, loc_40DC50

tcall loc_40DC3D
endp

proc loc_40DC3D
;inc ecx
add ecx, ecx, 1

;fld st0
FLD_ST 0

;fsubp st1, st0
FSUBP_ST 1

;jmp short loc_40DC50
tcall loc_40DC50
endp

proc loc_40DC50
;fistp dword [esp]
FISTP_INT32
store tmp0, esp, 4

;fld dword [ecx*4+loc_418770]
mov tmpadr, loc_418770
shl tmp0, ecx, 2
add tmpadr, tmpadr, tmp0
load tmp1, tmpadr, 4
FLD_FLOAT tmp1

;mov eax, [esp]
load eax, esp, 4

;and eax, 0xff
and eax, eax, 0xff

;fmul dword [eax*4+loc_4181F8]
mov tmpadr, loc_4181F8
shl tmp0, eax, 2
add tmpadr, tmpadr, tmp0
load tmp1, tmpadr, 4
FMUL_FLOAT tmp1

;mov eax, [esp]
load eax, esp, 4

;shr eax, 0x8
lshr eax, eax, 8

;and eax, 0xff
and eax, eax, 0xff

;fmul dword [eax*4+loc_4185F8]
mov tmpadr, loc_4185F8
shl tmp0, eax, 2
add tmpadr, tmpadr, tmp0
load tmp1, tmpadr, 4
FMUL_FLOAT tmp1

;fstp st2
FSTP_ST 2

;fstp st0
FSTP_ST 0

;pop ecx
POP ecx

;pop ecx
POP ecx

;ret 0x4
POP tmp1
add esp, esp, 4
tcall tmp1
endp

proc loc_40DD90
;push ebx
PUSH ebx

;push ebp
PUSH ebp

;push ecx
PUSH ecx

;push ecx
PUSH ecx

;fld dword [ecx+0x14]
add tmpadr, ecx, 20
load tmp1, tmpadr, 1
FLD_FLOAT tmp1

;fld dword [ecx+0x1c]
add tmpadr, ecx, 28
load tmp1, tmpadr, 1
FLD_FLOAT tmp1

;fld dword [ecx+0xc]
add tmpadr, ecx, 12
load tmp1, tmpadr, 1
FLD_FLOAT tmp1

;fld dword [ecx+0x20]
add tmpadr, ecx, 32
load tmp1, tmpadr, 1
FLD_FLOAT tmp1

;fld dword [ecx+0x10]
add tmpadr, ecx, 16
load tmp1, tmpadr, 1
FLD_FLOAT tmp1

;mov ebx, [ecx+0x8]
add tmpadr, ecx, 8
load ebx, tmpadr, 1

;mov eax, [loc_441848]
load eax, loc_441848, 4

;lea ecx, [edx+eax*4]
shl tmpadr, eax, 2
add ecx, tmpadr, edx

;jmp short loc_40DDB8
tcall loc_40DDB8
endp

proc loc_40DDB0
;cmp edx, ecx
cmovult edx, ecx, tmpcnd, 0, 1

;jae near loc_40DFD8
ctcallnz tmpcnd, loc_40DFD8

tcall loc_40DDB8
endp

proc loc_40DDB8
;mov eax, [edx]
load eax, edx, 1

;fist dword [esp]
FIST_INT32
store tmp0, esp, 4

;mov eax, [esp]
load eax, esp, 4

;lea ebp, [eax+ebx]
add ebp, eax, ebx

;fild dword [esp]
load tmp1, esp, 4
FILD_INT32 tmp1

;fld st1
FLD_ST 1

;fxch st0, st1
FXCH_ST 1

;fsubp st1, st0
FSUBP_ST 1

;xor eax, eax
xor eax, eax, eax

;mov ah, [ebp]
load8z tmp0, ebp, 1
and eax, eax, 0xffff00ff
shl tmp0, tmp0, 8
or eax, eax, tmp0

;mov [esp], ax
store16 eax, esp, 4

;mov ah, [ebp+0x1]
add tmpadr, ebp, 1
load8z tmp0, tmpadr, 1
and eax, eax, 0xffff00ff
shl tmp0, tmp0, 8
or eax, eax, tmp0

;mov [esp+0x2], ax
add tmpadr, esp, 2
store16 eax, tmpadr, 2

;fild word [esp]
load16s tmp1, esp, 4
FILD_INT32 tmp1

;fild word [esp+0x2]
add tmpadr, esp, 2
load16s tmp1, tmpadr, 2
FILD_INT32 tmp1

;fsub st0, st1
FSUB_ST 1

;fmulp st2, st0
FMULP_ST 2

;faddp st1, st0
FADDP_ST 1

;fmul st0, st2
FMUL_ST 2

;fstp dword [edx]
FSTP_FLOAT
store tmp0, edx, 1

;fadd st0, st2
FADD_ST 2

;fcom st0, st3
FCOM_ST 3

;fnstsw ax
FNSTSW_VOID
and eax, eax, 0xffff0000
or eax, eax, tmp0

;test ah, 0x1
and tmpcnd, eax, 0x100

;jnz short loc_40DDFB
ctcallnz tmpcnd, loc_40DDFB

tcall loc_40DDF9
endp

proc loc_40DDF9
;fsub st0, st4
FSUB_ST 4

tcall loc_40DDFB
endp

proc loc_40DDFB
;fist dword [esp]
FIST_INT32
store tmp0, esp, 4

;mov eax, [esp]
load eax, esp, 4

;lea ebp, [eax+ebx]
add ebp, eax, ebx

;fild dword [esp]
load tmp1, esp, 4
FILD_INT32 tmp1

;fld st1
FLD_ST 1

;fxch st0, st1
FXCH_ST 1

;fsubp st1, st0
FSUBP_ST 1

;xor eax, eax
xor eax, eax, eax

;mov ah, [ebp]
load8z tmp0, ebp, 1
and eax, eax, 0xffff00ff
shl tmp0, tmp0, 8
or eax, eax, tmp0

;mov [esp], ax
store16 eax, esp, 4

;mov ah, [ebp+0x1]
add tmpadr, ebp, 1
load8z tmp0, tmpadr, 1
and eax, eax, 0xffff00ff
shl tmp0, tmp0, 8
or eax, eax, tmp0

;mov [esp+0x2], ax
add tmpadr, esp, 2
store16 eax, tmpadr, 2

;fild word [esp]
load16s tmp1, esp, 4
FILD_INT32 tmp1

;fild word [esp+0x2]
add tmpadr, esp, 2
load16s tmp1, tmpadr, 2
FILD_INT32 tmp1

;fsub st0, st1
FSUB_ST 1

;fmulp st2, st0
FMULP_ST 2

;faddp st1, st0
FADDP_ST 1

;fmul st0, st2
FMUL_ST 2

;fstp dword [edx+0x4]
FSTP_FLOAT
add tmpadr, edx, 4
store tmp0, tmpadr, 1

;fadd st0, st2
FADD_ST 2

;fcom st0, st3
FCOM_ST 3

;fnstsw ax
FNSTSW_VOID
and eax, eax, 0xffff0000
or eax, eax, tmp0

;test ah, 0x1
and tmpcnd, eax, 0x100

;jnz short loc_40DE3D
ctcallnz tmpcnd, loc_40DE3D

tcall loc_40DE3B
endp

proc loc_40DE3B
;fsub st0, st4
FSUB_ST 4

tcall loc_40DE3D
endp

proc loc_40DE3D
;fist dword [esp]
FIST_INT32
store tmp0, esp, 4

;mov eax, [esp]
load eax, esp, 4

;lea ebp, [eax+ebx]
add ebp, eax, ebx

;fild dword [esp]
load tmp1, esp, 4
FILD_INT32 tmp1

;fld st1
FLD_ST 1

;fxch st0, st1
FXCH_ST 1

;fsubp st1, st0
FSUBP_ST 1

;xor eax, eax
xor eax, eax, eax

;mov ah, [ebp]
load8z tmp0, ebp, 1
and eax, eax, 0xffff00ff
shl tmp0, tmp0, 8
or eax, eax, tmp0

;mov [esp], ax
store16 eax, esp, 4

;mov ah, [ebp+0x1]
add tmpadr, ebp, 1
load8z tmp0, tmpadr, 1
and eax, eax, 0xffff00ff
shl tmp0, tmp0, 8
or eax, eax, tmp0

;mov [esp+0x2], ax
add tmpadr, esp, 2
store16 eax, tmpadr, 2

;fild word [esp]
load16s tmp1, esp, 4
FILD_INT32 tmp1

;fild word [esp+0x2]
add tmpadr, esp, 2
load16s tmp1, tmpadr, 2
FILD_INT32 tmp1

;fsub st0, st1
FSUB_ST 1

;fmulp st2, st0
FMULP_ST 2

;faddp st1, st0
FADDP_ST 1

;fmul st0, st2
FMUL_ST 2

;fstp dword [edx+0x8]
FSTP_FLOAT
add tmpadr, edx, 8
store tmp0, tmpadr, 1

;fadd st0, st2
FADD_ST 2

;fcom st0, st3
FCOM_ST 3

;fnstsw ax
FNSTSW_VOID
and eax, eax, 0xffff0000
or eax, eax, tmp0

;test ah, 0x1
and tmpcnd, eax, 0x100

;jnz short loc_40DE7F
ctcallnz tmpcnd, loc_40DE7F

tcall loc_40DE7D
endp

proc loc_40DE7D
;fsub st0, st4
FSUB_ST 4

tcall loc_40DE7F
endp

proc loc_40DE7F
;fist dword [esp]
FIST_INT32
store tmp0, esp, 4

;mov eax, [esp]
load eax, esp, 4

;lea ebp, [eax+ebx]
add ebp, eax, ebx

;fild dword [esp]
load tmp1, esp, 4
FILD_INT32 tmp1

;fld st1
FLD_ST 1

;fxch st0, st1
FXCH_ST 1

;fsubp st1, st0
FSUBP_ST 1

;xor eax, eax
xor eax, eax, eax

;mov ah, [ebp]
load8z tmp0, ebp, 1
and eax, eax, 0xffff00ff
shl tmp0, tmp0, 8
or eax, eax, tmp0

;mov [esp], ax
store16 eax, esp, 4

;mov ah, [ebp+0x1]
add tmpadr, ebp, 1
load8z tmp0, tmpadr, 1
and eax, eax, 0xffff00ff
shl tmp0, tmp0, 8
or eax, eax, tmp0

;mov [esp+0x2], ax
add tmpadr, esp, 2
store16 eax, tmpadr, 2

;fild word [esp]
load16s tmp1, esp, 4
FILD_INT32 tmp1

;fild word [esp+0x2]
add tmpadr, esp, 2
load16s tmp1, tmpadr, 2
FILD_INT32 tmp1

;fsub st0, st1
FSUB_ST 1

;fmulp st2, st0
FMULP_ST 2

;faddp st1, st0
FADDP_ST 1

;fmul st0, st2
FMUL_ST 2

;fstp dword [edx+0xc]
FSTP_FLOAT
add tmpadr, edx, 12
store tmp0, tmpadr, 1

;fadd st0, st2
FADD_ST 2

;fcom st0, st3
FCOM_ST 3

;fnstsw ax
FNSTSW_VOID
and eax, eax, 0xffff0000
or eax, eax, tmp0

;test ah, 0x1
and tmpcnd, eax, 0x100

;jnz short loc_40DEC1
ctcallnz tmpcnd, loc_40DEC1

tcall loc_40DEBF
endp

proc loc_40DEBF
;fsub st0, st4
FSUB_ST 4

tcall loc_40DEC1
endp

proc loc_40DEC1
;fist dword [esp]
FIST_INT32
store tmp0, esp, 4

;mov eax, [esp]
load eax, esp, 4

;lea ebp, [eax+ebx]
add ebp, eax, ebx

;fild dword [esp]
load tmp1, esp, 4
FILD_INT32 tmp1

;fld st1
FLD_ST 1

;fxch st0, st1
FXCH_ST 1

;fsubp st1, st0
FSUBP_ST 1

;xor eax, eax
xor eax, eax, eax

;mov ah, [ebp]
load8z tmp0, ebp, 1
and eax, eax, 0xffff00ff
shl tmp0, tmp0, 8
or eax, eax, tmp0

;mov [esp], ax
store16 eax, esp, 4

;mov ah, [ebp+0x1]
add tmpadr, ebp, 1
load8z tmp0, tmpadr, 1
and eax, eax, 0xffff00ff
shl tmp0, tmp0, 8
or eax, eax, tmp0

;mov [esp+0x2], ax
add tmpadr, esp, 2
store16 eax, tmpadr, 2

;fild word [esp]
load16s tmp1, esp, 4
FILD_INT32 tmp1

;fild word [esp+0x2]
add tmpadr, esp, 2
load16s tmp1, tmpadr, 2
FILD_INT32 tmp1

;fsub st0, st1
FSUB_ST 1

;fmulp st2, st0
FMULP_ST 2

;faddp st1, st0
FADDP_ST 1

;fmul st0, st2
FMUL_ST 2

;fstp dword [edx+0x10]
FSTP_FLOAT
add tmpadr, edx, 16
store tmp0, tmpadr, 1

;fadd st0, st2
FADD_ST 2

;fcom st0, st3
FCOM_ST 3

;fnstsw ax
FNSTSW_VOID
and eax, eax, 0xffff0000
or eax, eax, tmp0

;test ah, 0x1
and tmpcnd, eax, 0x100

;jnz short loc_40DF03
ctcallnz tmpcnd, loc_40DF03

tcall loc_40DF01
endp

proc loc_40DF01
;fsub st0, st4
FSUB_ST 4

tcall loc_40DF03
endp

proc loc_40DF03
;fist dword [esp]
FIST_INT32
store tmp0, esp, 4

;mov eax, [esp]
load eax, esp, 4

;lea ebp, [eax+ebx]
add ebp, eax, ebx

;fild dword [esp]
load tmp1, esp, 4
FILD_INT32 tmp1

;fld st1
FLD_ST 1

;fxch st0, st1
FXCH_ST 1

;fsubp st1, st0
FSUBP_ST 1

;xor eax, eax
xor eax, eax, eax

;mov ah, [ebp]
load8z tmp0, ebp, 1
and eax, eax, 0xffff00ff
shl tmp0, tmp0, 8
or eax, eax, tmp0

;mov [esp], ax
store16 eax, esp, 4

;mov ah, [ebp+0x1]
add tmpadr, ebp, 1
load8z tmp0, tmpadr, 1
and eax, eax, 0xffff00ff
shl tmp0, tmp0, 8
or eax, eax, tmp0

;mov [esp+0x2], ax
add tmpadr, esp, 2
store16 eax, tmpadr, 2

;fild word [esp]
load16s tmp1, esp, 4
FILD_INT32 tmp1

;fild word [esp+0x2]
add tmpadr, esp, 2
load16s tmp1, tmpadr, 2
FILD_INT32 tmp1

;fsub st0, st1
FSUB_ST 1

;fmulp st2, st0
FMULP_ST 2

;faddp st1, st0
FADDP_ST 1

;fmul st0, st2
FMUL_ST 2

;fstp dword [edx+0x14]
FSTP_FLOAT
add tmpadr, edx, 20
store tmp0, tmpadr, 1

;fadd st0, st2
FADD_ST 2

;fcom st0, st3
FCOM_ST 3

;fnstsw ax
FNSTSW_VOID
and eax, eax, 0xffff0000
or eax, eax, tmp0

;test ah, 0x1
and tmpcnd, eax, 0x100

;jnz short loc_40DF45
ctcallnz tmpcnd, loc_40DF45

tcall loc_40DF43
endp

proc loc_40DF43
;fsub st0, st4
FSUB_ST 4

tcall loc_40DF45
endp

proc loc_40DF45
;fist dword [esp]
FIST_INT32
store tmp0, esp, 4

;mov eax, [esp]
load eax, esp, 4

;lea ebp, [eax+ebx]
add ebp, eax, ebx

;fild dword [esp]
load tmp1, esp, 4
FILD_INT32 tmp1

;fld st1
FLD_ST 1

;fxch st0, st1
FXCH_ST 1

;fsubp st1, st0
FSUBP_ST 1

;xor eax, eax
xor eax, eax, eax

;mov ah, [ebp]
load8z tmp0, ebp, 1
and eax, eax, 0xffff00ff
shl tmp0, tmp0, 8
or eax, eax, tmp0

;mov [esp], ax
store16 eax, esp, 4

;mov ah, [ebp+0x1]
add tmpadr, ebp, 1
load8z tmp0, tmpadr, 1
and eax, eax, 0xffff00ff
shl tmp0, tmp0, 8
or eax, eax, tmp0

;mov [esp+0x2], ax
add tmpadr, esp, 2
store16 eax, tmpadr, 2

;fild word [esp]
load16s tmp1, esp, 4
FILD_INT32 tmp1

;fild word [esp+0x2]
add tmpadr, esp, 2
load16s tmp1, tmpadr, 2
FILD_INT32 tmp1

;fsub st0, st1
FSUB_ST 1

;fmulp st2, st0
FMULP_ST 2

;faddp st1, st0
FADDP_ST 1

;fmul st0, st2
FMUL_ST 2

;fstp dword [edx+0x18]
FSTP_FLOAT
add tmpadr, edx, 24
store tmp0, tmpadr, 1

;fadd st0, st2
FADD_ST 2

;fcom st0, st3
FCOM_ST 3

;fnstsw ax
FNSTSW_VOID
and eax, eax, 0xffff0000
or eax, eax, tmp0

;test ah, 0x1
and tmpcnd, eax, 0x100

;jnz short loc_40DF87
ctcallnz tmpcnd, loc_40DF87

tcall loc_40DF85
endp

proc loc_40DF85
;fsub st0, st4
FSUB_ST 4

tcall loc_40DF87
endp

proc loc_40DF87
;fist dword [esp]
FIST_INT32
store tmp0, esp, 4

;mov eax, [esp]
load eax, esp, 4

;lea ebp, [eax+ebx]
add ebp, eax, ebx

;fild dword [esp]
load tmp1, esp, 4
FILD_INT32 tmp1

;fld st1
FLD_ST 1

;fxch st0, st1
FXCH_ST 1

;fsubp st1, st0
FSUBP_ST 1

;xor eax, eax
xor eax, eax, eax

;mov ah, [ebp]
load8z tmp0, ebp, 1
and eax, eax, 0xffff00ff
shl tmp0, tmp0, 8
or eax, eax, tmp0

;mov [esp], ax
store16 eax, esp, 4

;mov ah, [ebp+0x1]
add tmpadr, ebp, 1
load8z tmp0, tmpadr, 1
and eax, eax, 0xffff00ff
shl tmp0, tmp0, 8
or eax, eax, tmp0

;mov [esp+0x2], ax
add tmpadr, esp, 2
store16 eax, tmpadr, 2

;fild word [esp]
load16s tmp1, esp, 4
FILD_INT32 tmp1

;fild word [esp+0x2]
add tmpadr, esp, 2
load16s tmp1, tmpadr, 2
FILD_INT32 tmp1

;fsub st0, st1
FSUB_ST 1

;fmulp st2, st0
FMULP_ST 2

;faddp st1, st0
FADDP_ST 1

;fmul st0, st2
FMUL_ST 2

;fstp dword [edx+0x1c]
FSTP_FLOAT
add tmpadr, edx, 28
store tmp0, tmpadr, 1

;fadd st0, st2
FADD_ST 2

;fcom st0, st3
FCOM_ST 3

;fnstsw ax
FNSTSW_VOID
and eax, eax, 0xffff0000
or eax, eax, tmp0

;lea edx, [edx+0x20]
add edx, edx, 32

;test ah, 0x1
and tmpcnd, eax, 0x100

;jnz near loc_40DDB0
ctcallnz tmpcnd, loc_40DDB0

tcall loc_40DFCE
endp

proc loc_40DFCE
;fsub st0, st4
FSUB_ST 4

;cmp edx, ecx
cmovult edx, ecx, tmpcnd, 0, 1

;jb near loc_40DDB8
ctcallz tmpcnd, loc_40DDB8

tcall loc_40DFD8
endp

proc loc_40DFD8
;pop ecx
POP ecx

;pop ecx
POP ecx

;fstp dword [ecx+0x10]
FSTP_FLOAT
add tmpadr, ecx, 16
store tmp0, tmpadr, 1

;fstp st0
FSTP_ST 0

;fstp st0
FSTP_ST 0

;fstp st0
FSTP_ST 0

;fstp st0
FSTP_ST 0

;pop ebp
POP ebp

;pop ebx
POP ebx

;ret
POP tmp1
tcall tmp1
endp

proc loc_40DFF0
;push ebx
PUSH ebx

;push ebp
PUSH ebp

;push ecx
PUSH ecx

;push ecx
PUSH ecx

;fld dword [ecx+0x14]
add tmpadr, ecx, 20
load tmp1, tmpadr, 1
FLD_FLOAT tmp1

;fld dword [ecx+0x1c]
add tmpadr, ecx, 28
load tmp1, tmpadr, 1
FLD_FLOAT tmp1

;fld dword [ecx+0xc]
add tmpadr, ecx, 12
load tmp1, tmpadr, 1
FLD_FLOAT tmp1

;fld dword [ecx+0x20]
add tmpadr, ecx, 32
load tmp1, tmpadr, 1
FLD_FLOAT tmp1

;fld dword [ecx+0x10]
add tmpadr, ecx, 16
load tmp1, tmpadr, 1
FLD_FLOAT tmp1

;mov ebx, [ecx+0x8]
add tmpadr, ecx, 8
load ebx, tmpadr, 1

;mov eax, [loc_441848]
load eax, loc_441848, 4

;lea ecx, [edx+eax*4]
shl tmpadr, eax, 2
add ecx, tmpadr, edx

;jmp short loc_40E018
tcall loc_40E018
endp

proc loc_40E010
;cmp edx, ecx
cmovult edx, ecx, tmpcnd, 0, 1

;jae near loc_40E254
ctcallnz tmpcnd, loc_40E254

tcall loc_40E018
endp

proc loc_40E018
;fist dword [esp]
FIST_INT32
store tmp0, esp, 4

;mov eax, [esp]
load eax, esp, 4

;lea ebp, [eax+ebx]
add ebp, eax, ebx

;fild dword [esp]
load tmp1, esp, 4
FILD_INT32 tmp1

;fld st1
FLD_ST 1

;fxch st0, st1
FXCH_ST 1

;fsubp st1, st0
FSUBP_ST 1

;xor eax, eax
xor eax, eax, eax

;mov ah, [ebp]
load8z tmp0, ebp, 4
and eax, eax, 0xffff00ff
shl tmp0, tmp0, 8
or eax, eax, tmp0

;mov [esp], ax
store16 eax, esp, 4

;mov ah, [ebp+0x1]
add tmpadr, ebp, 1
load8z tmp0, tmpadr, 1
and eax, eax, 0xffff00ff
shl tmp0, tmp0, 8
or eax, eax, tmp0

;mov [esp+0x2], ax
add tmpadr, esp, 2
store16 eax, tmpadr, 2

;fild word [esp]
load16s tmp1, esp, 4
FILD_INT32 tmp1

;fild word [esp+0x2]
add tmpadr, esp, 2
load16s tmp1, tmpadr, 2
FILD_INT32 tmp1

;fsub st0, st1
FSUB_ST 1

;fmulp st2, st0
FMULP_ST 2

;faddp st1, st0
FADDP_ST 1

;fmul st0, st2
FMUL_ST 2

;fadd dword [edx]
load tmp1, edx, 1
FADD_FLOAT tmp1

;fstp dword [edx]
FSTP_FLOAT
store tmp0, edx, 1

;fadd st0, st2
FADD_ST 2

;fcom st0, st3
FCOM_ST 3

;fnstsw ax
FNSTSW_VOID
and eax, eax, 0xffff0000
or eax, eax, tmp0

;lea edx, [edx+0x4]
add edx, edx, 4

;test ah, 0x1
and tmpcnd, eax, 0x100

;jnz short loc_40E05E
ctcallnz tmpcnd, loc_40E05E

tcall loc_40E05C
endp

proc loc_40E05C
;fsub st0, st4
FSUB_ST 4

tcall loc_40E05E
endp

proc loc_40E05E
;fist dword [esp]
FIST_INT32
store tmp0, esp, 4

;mov eax, [esp]
load eax, esp, 4

;lea ebp, [eax+ebx]
add ebp, eax, ebx

;fild dword [esp]
load tmp1, esp, 4
FILD_INT32 tmp1

;fld st1
FLD_ST 1

;fxch st0, st1
FXCH_ST 1

;fsubp st1, st0
FSUBP_ST 1

;xor eax, eax
xor eax, eax, eax

;mov ah, [ebp]
load8z tmp0, ebp, 4
and eax, eax, 0xffff00ff
shl tmp0, tmp0, 8
or eax, eax, tmp0

;mov [esp], ax
store16 eax, esp, 4

;mov ah, [ebp+0x1]
add tmpadr, ebp, 1
load8z tmp0, tmpadr, 1
and eax, eax, 0xffff00ff
shl tmp0, tmp0, 8
or eax, eax, tmp0

;mov [esp+0x2], ax
add tmpadr, esp, 2
store16 eax, tmpadr, 2

;fild word [esp]
load16s tmp1, esp, 4
FILD_INT32 tmp1

;fild word [esp+0x2]
add tmpadr, esp, 2
load16s tmp1, tmpadr, 2
FILD_INT32 tmp1

;fsub st0, st1
FSUB_ST 1

;fmulp st2, st0
FMULP_ST 2

;faddp st1, st0
FADDP_ST 1

;fmul st0, st2
FMUL_ST 2

;fadd dword [edx]
load tmp1, edx, 1
FADD_FLOAT tmp1

;fstp dword [edx]
FSTP_FLOAT
store tmp0, edx, 1

;fadd st0, st2
FADD_ST 2

;fcom st0, st3
FCOM_ST 3

;fnstsw ax
FNSTSW_VOID
and eax, eax, 0xffff0000
or eax, eax, tmp0

;lea edx, [edx+0x4]
add edx, edx, 4

;test ah, 0x1
and tmpcnd, eax, 0x100

;jnz short loc_40E0A4
ctcallnz tmpcnd, loc_40E0A4

tcall loc_40E0A2
endp

proc loc_40E0A2
;fsub st0, st4
FSUB_ST 4

tcall loc_40E0A4
endp

proc loc_40E0A4
;fist dword [esp]
FIST_INT32
store tmp0, esp, 4

;mov eax, [esp]
load eax, esp, 4

;lea ebp, [eax+ebx]
add ebp, eax, ebx

;fild dword [esp]
load tmp1, esp, 4
FILD_INT32 tmp1

;fld st1
FLD_ST 1

;fxch st0, st1
FXCH_ST 1

;fsubp st1, st0
FSUBP_ST 1

;xor eax, eax
xor eax, eax, eax

;mov ah, [ebp]
load8z tmp0, ebp, 4
and eax, eax, 0xffff00ff
shl tmp0, tmp0, 8
or eax, eax, tmp0

;mov [esp], ax
store16 eax, esp, 4

;mov ah, [ebp+0x1]
add tmpadr, ebp, 1
load8z tmp0, tmpadr, 1
and eax, eax, 0xffff00ff
shl tmp0, tmp0, 8
or eax, eax, tmp0

;mov [esp+0x2], ax
add tmpadr, esp, 2
store16 eax, tmpadr, 2

;fild word [esp]
load16s tmp1, esp, 4
FILD_INT32 tmp1

;fild word [esp+0x2]
add tmpadr, esp, 2
load16s tmp1, tmpadr, 2
FILD_INT32 tmp1

;fsub st0, st1
FSUB_ST 1

;fmulp st2, st0
FMULP_ST 2

;faddp st1, st0
FADDP_ST 1

;fmul st0, st2
FMUL_ST 2

;fadd dword [edx]
load tmp1, edx, 1
FADD_FLOAT tmp1

;fstp dword [edx]
FSTP_FLOAT
store tmp0, edx, 1

;fadd st0, st2
FADD_ST 2

;fcom st0, st3
FCOM_ST 3

;fnstsw ax
FNSTSW_VOID
and eax, eax, 0xffff0000
or eax, eax, tmp0

;lea edx, [edx+0x4]
add edx, edx, 4

;test ah, 0x1
and tmpcnd, eax, 0x100

;jnz short loc_40E0EA
ctcallnz tmpcnd, loc_40E0EA

tcall loc_40E0E8
endp

proc loc_40E0E8
;fsub st0, st4
FSUB_ST 4

tcall loc_40E0EA
endp

proc loc_40E0EA
;fist dword [esp]
FIST_INT32
store tmp0, esp, 4

;mov eax, [esp]
load eax, esp, 4

;lea ebp, [eax+ebx]
add ebp, eax, ebx

;fild dword [esp]
load tmp1, esp, 4
FILD_INT32 tmp1

;fld st1
FLD_ST 1

;fxch st0, st1
FXCH_ST 1

;fsubp st1, st0
FSUBP_ST 1

;xor eax, eax
xor eax, eax, eax

;mov ah, [ebp]
load8z tmp0, ebp, 4
and eax, eax, 0xffff00ff
shl tmp0, tmp0, 8
or eax, eax, tmp0

;mov [esp], ax
store16 eax, esp, 4

;mov ah, [ebp+0x1]
add tmpadr, ebp, 1
load8z tmp0, tmpadr, 1
and eax, eax, 0xffff00ff
shl tmp0, tmp0, 8
or eax, eax, tmp0

;mov [esp+0x2], ax
add tmpadr, esp, 2
store16 eax, tmpadr, 2

;fild word [esp]
load16s tmp1, esp, 4
FILD_INT32 tmp1

;fild word [esp+0x2]
add tmpadr, esp, 2
load16s tmp1, tmpadr, 2
FILD_INT32 tmp1

;fsub st0, st1
FSUB_ST 1

;fmulp st2, st0
FMULP_ST 2

;faddp st1, st0
FADDP_ST 1

;fmul st0, st2
FMUL_ST 2

;fadd dword [edx]
load tmp1, edx, 1
FADD_FLOAT tmp1

;fstp dword [edx]
FSTP_FLOAT
store tmp0, edx, 1

;fadd st0, st2
FADD_ST 2

;fcom st0, st3
FCOM_ST 3

;fnstsw ax
FNSTSW_VOID
and eax, eax, 0xffff0000
or eax, eax, tmp0

;lea edx, [edx+0x4]
add edx, edx, 4

;test ah, 0x1
and tmpcnd, eax, 0x100

;jnz short loc_40E130
ctcallnz tmpcnd, loc_40E130

tcall loc_40E12E
endp

proc loc_40E12E
;fsub st0, st4
FSUB_ST 4

tcall loc_40E130
endp

proc loc_40E130
;fist dword [esp]
FIST_INT32
store tmp0, esp, 4

;mov eax, [esp]
load eax, esp, 4

;lea ebp, [eax+ebx]
add ebp, eax, ebx

;fild dword [esp]
load tmp1, esp, 4
FILD_INT32 tmp1

;fld st1
FLD_ST 1

;fxch st0, st1
FXCH_ST 1

;fsubp st1, st0
FSUBP_ST 1

;xor eax, eax
xor eax, eax, eax

;mov ah, [ebp]
load8z tmp0, ebp, 4
and eax, eax, 0xffff00ff
shl tmp0, tmp0, 8
or eax, eax, tmp0

;mov [esp], ax
store16 eax, esp, 4

;mov ah, [ebp+0x1]
add tmpadr, ebp, 1
load8z tmp0, tmpadr, 1
and eax, eax, 0xffff00ff
shl tmp0, tmp0, 8
or eax, eax, tmp0

;mov [esp+0x2], ax
add tmpadr, esp, 2
store16 eax, tmpadr, 2

;fild word [esp]
load16s tmp1, esp, 4
FILD_INT32 tmp1

;fild word [esp+0x2]
add tmpadr, esp, 2
load16s tmp1, tmpadr, 2
FILD_INT32 tmp1

;fsub st0, st1
FSUB_ST 1

;fmulp st2, st0
FMULP_ST 2

;faddp st1, st0
FADDP_ST 1

;fmul st0, st2
FMUL_ST 2

;fadd dword [edx]
load tmp1, edx, 1
FADD_FLOAT tmp1

;fstp dword [edx]
FSTP_FLOAT
store tmp0, edx, 1

;fadd st0, st2
FADD_ST 2

;fcom st0, st3
FCOM_ST 3

;fnstsw ax
FNSTSW_VOID
and eax, eax, 0xffff0000
or eax, eax, tmp0

;lea edx, [edx+0x4]
add edx, edx, 4

;test ah, 0x1
and tmpcnd, eax, 0x100

;jnz short loc_40E176
ctcallnz tmpcnd, loc_40E176

tcall loc_40E174
endp

proc loc_40E174
;fsub st0, st4
FSUB_ST 4

tcall loc_40E176
endp

proc loc_40E176
;fist dword [esp]
FIST_INT32
store tmp0, esp, 4

;mov eax, [esp]
load eax, esp, 4

;lea ebp, [eax+ebx]
add ebp, eax, ebx

;fild dword [esp]
load tmp1, esp, 4
FILD_INT32 tmp1

;fld st1
FLD_ST 1

;fxch st0, st1
FXCH_ST 1

;fsubp st1, st0
FSUBP_ST 1

;xor eax, eax
xor eax, eax, eax

;mov ah, [ebp]
load8z tmp0, ebp, 4
and eax, eax, 0xffff00ff
shl tmp0, tmp0, 8
or eax, eax, tmp0

;mov [esp], ax
store16 eax, esp, 4

;mov ah, [ebp+0x1]
add tmpadr, ebp, 1
load8z tmp0, tmpadr, 1
and eax, eax, 0xffff00ff
shl tmp0, tmp0, 8
or eax, eax, tmp0

;mov [esp+0x2], ax
add tmpadr, esp, 2
store16 eax, tmpadr, 2

;fild word [esp]
load16s tmp1, esp, 4
FILD_INT32 tmp1

;fild word [esp+0x2]
add tmpadr, esp, 2
load16s tmp1, tmpadr, 2
FILD_INT32 tmp1

;fsub st0, st1
FSUB_ST 1

;fmulp st2, st0
FMULP_ST 2

;faddp st1, st0
FADDP_ST 1

;fmul st0, st2
FMUL_ST 2

;fadd dword [edx]
load tmp1, edx, 1
FADD_FLOAT tmp1

;fstp dword [edx]
FSTP_FLOAT
store tmp0, edx, 1

;fadd st0, st2
FADD_ST 2

;fcom st0, st3
FCOM_ST 3

;fnstsw ax
FNSTSW_VOID
and eax, eax, 0xffff0000
or eax, eax, tmp0

;lea edx, [edx+0x4]
add edx, edx, 4

;test ah, 0x1
and tmpcnd, eax, 0x100

;jnz short loc_40E1BC
ctcallnz tmpcnd, loc_40E1BC

tcall loc_40E1BA
endp

proc loc_40E1BA
;fsub st0, st4
FSUB_ST 4

tcall loc_40E1BC
endp

proc loc_40E1BC
;fist dword [esp]
FIST_INT32
store tmp0, esp, 4

;mov eax, [esp]
load eax, esp, 4

;lea ebp, [eax+ebx]
add ebp, eax, ebx

;fild dword [esp]
load tmp1, esp, 4
FILD_INT32 tmp1

;fld st1
FLD_ST 1

;fxch st0, st1
FXCH_ST 1

;fsubp st1, st0
FSUBP_ST 1

;xor eax, eax
xor eax, eax, eax

;mov ah, [ebp]
load8z tmp0, ebp, 4
and eax, eax, 0xffff00ff
shl tmp0, tmp0, 8
or eax, eax, tmp0

;mov [esp], ax
store16 eax, esp, 4

;mov ah, [ebp+0x1]
add tmpadr, ebp, 1
load8z tmp0, tmpadr, 1
and eax, eax, 0xffff00ff
shl tmp0, tmp0, 8
or eax, eax, tmp0

;mov [esp+0x2], ax
add tmpadr, esp, 2
store16 eax, tmpadr, 2

;fild word [esp]
load16s tmp1, esp, 4
FILD_INT32 tmp1

;fild word [esp+0x2]
add tmpadr, esp, 2
load16s tmp1, tmpadr, 2
FILD_INT32 tmp1

;fsub st0, st1
FSUB_ST 1

;fmulp st2, st0
FMULP_ST 2

;faddp st1, st0
FADDP_ST 1

;fmul st0, st2
FMUL_ST 2

;fadd dword [edx]
load tmp1, edx, 1
FADD_FLOAT tmp1

;fstp dword [edx]
FSTP_FLOAT
store tmp0, edx, 1

;fadd st0, st2
FADD_ST 2

;fcom st0, st3
FCOM_ST 3

;fnstsw ax
FNSTSW_VOID
and eax, eax, 0xffff0000
or eax, eax, tmp0

;lea edx, [edx+0x4]
add edx, edx, 4

;test ah, 0x1
and tmpcnd, eax, 0x100

;jnz short loc_40E202
ctcallnz tmpcnd, loc_40E202

tcall loc_40E200
endp

proc loc_40E200
;fsub st0, st4
FSUB_ST 4

tcall loc_40E202
endp

proc loc_40E202
;fist dword [esp]
FIST_INT32
store tmp0, esp, 4

;mov eax, [esp]
load eax, esp, 4

;lea ebp, [eax+ebx]
add ebp, eax, ebx

;fild dword [esp]
load tmp1, esp, 4
FILD_INT32 tmp1

;fld st1
FLD_ST 1

;fxch st0, st1
FXCH_ST 1

;fsubp st1, st0
FSUBP_ST 1

;xor eax, eax
xor eax, eax, eax

;mov ah, [ebp]
load8z tmp0, ebp, 4
and eax, eax, 0xffff00ff
shl tmp0, tmp0, 8
or eax, eax, tmp0

;mov [esp], ax
store16 eax, esp, 4

;mov ah, [ebp+0x1]
add tmpadr, ebp, 1
load8z tmp0, tmpadr, 1
and eax, eax, 0xffff00ff
shl tmp0, tmp0, 8
or eax, eax, tmp0

;mov [esp+0x2], ax
add tmpadr, esp, 2
store16 eax, tmpadr, 2

;fild word [esp]
load16s tmp1, esp, 4
FILD_INT32 tmp1

;fild word [esp+0x2]
add tmpadr, esp, 2
load16s tmp1, tmpadr, 2
FILD_INT32 tmp1

;fsub st0, st1
FSUB_ST 1

;fmulp st2, st0
FMULP_ST 2

;faddp st1, st0
FADDP_ST 1

;fmul st0, st2
FMUL_ST 2

;fadd dword [edx]
load tmp1, edx, 1
FADD_FLOAT tmp1

;fstp dword [edx]
FSTP_FLOAT
store tmp0, edx, 1

;fadd st0, st2
FADD_ST 2

;fcom st0, st3
FCOM_ST 3

;fnstsw ax
FNSTSW_VOID
and eax, eax, 0xffff0000
or eax, eax, tmp0

;lea edx, [edx+0x4]
add edx, edx, 4

;test ah, 0x1
and tmpcnd, eax, 0x100

;jnz near loc_40E010
ctcallnz tmpcnd, loc_40E010

tcall loc_40E24A
endp

proc loc_40E24A
;fsub st0, st4
FSUB_ST 4

;cmp edx, ecx
cmovult edx, ecx, tmpcnd, 0, 1

;jb near loc_40E018
ctcallz tmpcnd, loc_40E018

tcall loc_40E254
endp

proc loc_40E254
;pop ecx
POP ecx

;pop ecx
POP ecx

;fstp dword [ecx+0x10]
FSTP_FLOAT
add tmpadr, ecx, 16
store tmp0, tmpadr, 1

;fstp st0
FSTP_ST 0

;fstp st0
FSTP_ST 0

;fstp st0
FSTP_ST 0

;fstp st0
FSTP_ST 0

;pop ebp
POP ebp

;pop ebx
POP ebx

;ret
POP tmp1
tcall tmp1
endp

proc loc_40E270
;fld dword [edx+0xc]
add tmpadr, edx, 12
load tmp1, tmpadr, 1
FLD_FLOAT tmp1

;fld dword [edx+0x10]
add tmpadr, edx, 16
load tmp1, tmpadr, 1
FLD_FLOAT tmp1

;fld dword [ecx+0x4]
add tmpadr, ecx, 4
load tmp1, tmpadr, 1
FLD_FLOAT tmp1

;fld dword [esp+0x4]
add tmpadr, esp, 4
load tmp1, tmpadr, 4
FLD_FLOAT tmp1

;fmul dword [edx+0x14]
add tmpadr, edx, 20
load tmp1, tmpadr, 1
FMUL_FLOAT tmp1

;fst dword [ecx+0x4]
FST_FLOAT
add tmpadr, ecx, 4
store tmp0, tmpadr, 1

;fsub st0, st1
FSUB_ST 1

;fmul dword [loc_455D04]
load tmp1, loc_455D04, 4
FMUL_FLOAT tmp1

;fxch st0, st1
FXCH_ST 1

;push esi
PUSH esi

;mov eax, [loc_441848]
load eax, loc_441848, 4

;lea esi, [eax*4+loc_441048]
mov tmpadr, loc_441048
shl tmp0, eax, 2
add esi, tmpadr, tmp0

;mov eax, loc_441048
mov eax, loc_441048

;mov edx, loc_441448
mov edx, loc_441448

;mov ecx, loc_455904
mov ecx, loc_455904

;nop
NOP

;nop
NOP

;nop
NOP

tcall loc_40E2AC
endp

proc loc_40E2AC
;fadd st0, st1
FADD_ST 1

;fld st0
FLD_ST 0

;fmul st0, st3
FMUL_ST 3

;fld st1
FLD_ST 1

;fmul st0, st5
FMUL_ST 5

;fld dword [ecx]
load tmp1, ecx, 1
FLD_FLOAT tmp1

;fld st0
FLD_ST 0

;fmul st0, st2
FMUL_ST 2

;fadd dword [eax]
load tmp1, eax, 1
FADD_FLOAT tmp1

;fstp dword [eax]
FSTP_FLOAT
store tmp0, eax, 1

;fmul st0, st2
FMUL_ST 2

;fadd dword [edx]
load tmp1, edx, 1
FADD_FLOAT tmp1

;fstp dword [edx]
FSTP_FLOAT
store tmp0, edx, 1

;fld dword [ecx+0x4]
add tmpadr, ecx, 4
load tmp1, tmpadr, 1
FLD_FLOAT tmp1

;fmul st1, st0
FMUL_TO_ST 1

;fmulp st2, st0
FMULP_ST 2

;fadd dword [eax+0x4]
add tmpadr, eax, 4
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;fstp dword [eax+0x4]
FSTP_FLOAT
add tmpadr, eax, 4
store tmp0, tmpadr, 1

;fadd dword [edx+0x4]
add tmpadr, edx, 4
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;fstp dword [edx+0x4]
FSTP_FLOAT
add tmpadr, edx, 4
store tmp0, tmpadr, 1

;fadd st0, st1
FADD_ST 1

;fld st0
FLD_ST 0

;fmul st0, st3
FMUL_ST 3

;fld st1
FLD_ST 1

;fmul st0, st5
FMUL_ST 5

;fld dword [ecx+0x8]
add tmpadr, ecx, 8
load tmp1, tmpadr, 1
FLD_FLOAT tmp1

;fld st0
FLD_ST 0

;fmul st0, st2
FMUL_ST 2

;fadd dword [eax+0x8]
add tmpadr, eax, 8
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;fstp dword [eax+0x8]
FSTP_FLOAT
add tmpadr, eax, 8
store tmp0, tmpadr, 1

;fmul st0, st2
FMUL_ST 2

;fadd dword [edx+0x8]
add tmpadr, edx, 8
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;fstp dword [edx+0x8]
FSTP_FLOAT
add tmpadr, edx, 8
store tmp0, tmpadr, 1

;fld dword [ecx+0xc]
add tmpadr, ecx, 12
load tmp1, tmpadr, 1
FLD_FLOAT tmp1

;fmul st1, st0
FMUL_TO_ST 1

;fmulp st2, st0
FMULP_ST 2

;fadd dword [eax+0xc]
add tmpadr, eax, 12
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;fstp dword [eax+0xc]
FSTP_FLOAT
add tmpadr, eax, 12
store tmp0, tmpadr, 1

;fadd dword [edx+0xc]
add tmpadr, edx, 12
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;fstp dword [edx+0xc]
FSTP_FLOAT
add tmpadr, edx, 12
store tmp0, tmpadr, 1

;fadd st0, st1
FADD_ST 1

;fld st0
FLD_ST 0

;fmul st0, st3
FMUL_ST 3

;fld st1
FLD_ST 1

;fmul st0, st5
FMUL_ST 5

;fld dword [ecx+0x10]
add tmpadr, ecx, 16
load tmp1, tmpadr, 1
FLD_FLOAT tmp1

;fld st0
FLD_ST 0

;fmul st0, st2
FMUL_ST 2

;fadd dword [eax+0x10]
add tmpadr, eax, 16
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;fstp dword [eax+0x10]
FSTP_FLOAT
add tmpadr, eax, 16
store tmp0, tmpadr, 1

;fmul st0, st2
FMUL_ST 2

;fadd dword [edx+0x10]
add tmpadr, edx, 16
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;fstp dword [edx+0x10]
FSTP_FLOAT
add tmpadr, edx, 16
store tmp0, tmpadr, 1

;fld dword [ecx+0x14]
add tmpadr, ecx, 20
load tmp1, tmpadr, 1
FLD_FLOAT tmp1

;fmul st1, st0
FMUL_TO_ST 1

;fmulp st2, st0
FMULP_ST 2

;fadd dword [eax+0x14]
add tmpadr, eax, 20
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;fstp dword [eax+0x14]
FSTP_FLOAT
add tmpadr, eax, 20
store tmp0, tmpadr, 1

;fadd dword [edx+0x14]
add tmpadr, edx, 20
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;fstp dword [edx+0x14]
FSTP_FLOAT
add tmpadr, edx, 20
store tmp0, tmpadr, 1

;fadd st0, st1
FADD_ST 1

;fld st0
FLD_ST 0

;fmul st0, st3
FMUL_ST 3

;fld st1
FLD_ST 1

;fmul st0, st5
FMUL_ST 5

;fld dword [ecx+0x18]
add tmpadr, ecx, 24
load tmp1, tmpadr, 1
FLD_FLOAT tmp1

;fld st0
FLD_ST 0

;fmul st0, st2
FMUL_ST 2

;fadd dword [eax+0x18]
add tmpadr, eax, 24
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;fstp dword [eax+0x18]
FSTP_FLOAT
add tmpadr, eax, 24
store tmp0, tmpadr, 1

;fmul st0, st2
FMUL_ST 2

;fadd dword [edx+0x18]
add tmpadr, edx, 24
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;fstp dword [edx+0x18]
FSTP_FLOAT
add tmpadr, edx, 24
store tmp0, tmpadr, 1

;fld dword [ecx+0x1c]
add tmpadr, ecx, 28
load tmp1, tmpadr, 1
FLD_FLOAT tmp1

;fmul st1, st0
FMUL_TO_ST 1

;fmulp st2, st0
FMULP_ST 2

;fadd dword [eax+0x1c]
add tmpadr, eax, 28
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;fstp dword [eax+0x1c]
FSTP_FLOAT
add tmpadr, eax, 28
store tmp0, tmpadr, 1

;fadd dword [edx+0x1c]
add tmpadr, edx, 28
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;fstp dword [edx+0x1c]
FSTP_FLOAT
add tmpadr, edx, 28
store tmp0, tmpadr, 1

;lea eax, [eax+0x20]
add eax, eax, 32

;lea edx, [edx+0x20]
add edx, edx, 32

;lea ecx, [ecx+0x20]
add ecx, ecx, 32

;cmp eax, esi
cmovult eax, esi, tmpcnd, 0, 1

;jb near loc_40E2AC
ctcallz tmpcnd, loc_40E2AC

tcall loc_40E380
endp

proc loc_40E380
;fstp st0
FSTP_ST 0

;fstp st0
FSTP_ST 0

;fstp st0
FSTP_ST 0

;fstp st0
FSTP_ST 0

;pop esi
POP esi

;ret 0x4
POP tmp1
add esp, esp, 4
tcall tmp1
endp

proc loc_40E390
;fld dword [edx+0x38]
add tmpadr, edx, 56
load tmp1, tmpadr, 1
FLD_FLOAT tmp1

;fld dword [ecx+0x4]
add tmpadr, ecx, 4
load tmp1, tmpadr, 1
FLD_FLOAT tmp1

;fld dword [esp+0x4]
add tmpadr, esp, 4
load tmp1, tmpadr, 4
FLD_FLOAT tmp1

;fmul dword [edx+0x14]
add tmpadr, edx, 20
load tmp1, tmpadr, 1
FMUL_FLOAT tmp1

;fst dword [ecx+0x4]
FST_FLOAT
add tmpadr, ecx, 4
store tmp0, tmpadr, 1

;fsub st0, st1
FSUB_ST 1

;fmul dword [loc_455D04]
load tmp1, loc_455D04, 4
FMUL_FLOAT tmp1

;fxch st0, st1
FXCH_ST 1

;push esi
PUSH esi

;push edi
PUSH edi

;push ebx
PUSH ebx

;mov eax, [loc_441848]
load eax, loc_441848, 4

;lea esi, [eax*4+loc_441048]
mov tmpadr, loc_441048
shl tmp0, eax, 2
add esi, tmpadr, tmp0

;mov eax, loc_441048
mov eax, loc_441048

;mov ebx, loc_441448
mov ebx, loc_441448

;mov ecx, loc_455904
mov ecx, loc_455904

;mov edi, [loc_44586C]
load edi, loc_44586C, 4

;nop
NOP

;nop
NOP

tcall loc_40E3D0
endp

proc loc_40E3D0
;fadd st0, st1
FADD_ST 1

;fld st0
FLD_ST 0

;fmul st0, st3
FMUL_ST 3

;fld st1
FLD_ST 1

;fmul dword [edx+0xc]
add tmpadr, edx, 12
load tmp1, tmpadr, 1
FMUL_FLOAT tmp1

;fld st2
FLD_ST 2

;fmul dword [edx+0x10]
add tmpadr, edx, 16
load tmp1, tmpadr, 1
FMUL_FLOAT tmp1

;fld dword [ecx]
load tmp1, ecx, 1
FLD_FLOAT tmp1

;fld st0
FLD_ST 0

;fmul st0, st4
FMUL_ST 4

;fadd dword [edi]
load tmp1, edi, 1
FADD_FLOAT tmp1

;fstp dword [edi]
FSTP_FLOAT
store tmp0, edi, 1

;fld st0
FLD_ST 0

;fmul st0, st3
FMUL_ST 3

;fadd dword [eax]
load tmp1, eax, 1
FADD_FLOAT tmp1

;fstp dword [eax]
FSTP_FLOAT
store tmp0, eax, 1

;fmul st0, st1
FMUL_ST 1

;fadd dword [ebx]
load tmp1, ebx, 1
FADD_FLOAT tmp1

;fstp dword [ebx]
FSTP_FLOAT
store tmp0, ebx, 1

;fld dword [ecx+0x4]
add tmpadr, ecx, 4
load tmp1, tmpadr, 1
FLD_FLOAT tmp1

;fmul st1, st0
FMUL_TO_ST 1

;fmul st2, st0
FMUL_TO_ST 2

;fmulp st3, st0
FMULP_ST 3

;fadd dword [ebx+0x4]
add tmpadr, ebx, 4
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;fstp dword [ebx+0x4]
FSTP_FLOAT
add tmpadr, ebx, 4
store tmp0, tmpadr, 1

;fadd dword [eax+0x4]
add tmpadr, eax, 4
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;fstp dword [eax+0x4]
FSTP_FLOAT
add tmpadr, eax, 4
store tmp0, tmpadr, 1

;fadd dword [edi+0x4]
add tmpadr, edi, 4
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;fstp dword [edi+0x4]
FSTP_FLOAT
add tmpadr, edi, 4
store tmp0, tmpadr, 1

;fadd st0, st1
FADD_ST 1

;fld st0
FLD_ST 0

;fmul st0, st3
FMUL_ST 3

;fld st1
FLD_ST 1

;fmul dword [edx+0xc]
add tmpadr, edx, 12
load tmp1, tmpadr, 1
FMUL_FLOAT tmp1

;fld st2
FLD_ST 2

;fmul dword [edx+0x10]
add tmpadr, edx, 16
load tmp1, tmpadr, 1
FMUL_FLOAT tmp1

;fld dword [ecx+0x8]
add tmpadr, ecx, 8
load tmp1, tmpadr, 1
FLD_FLOAT tmp1

;fld st0
FLD_ST 0

;fmul st0, st4
FMUL_ST 4

;fadd dword [edi+0x8]
add tmpadr, edi, 8
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;fstp dword [edi+0x8]
FSTP_FLOAT
add tmpadr, edi, 8
store tmp0, tmpadr, 1

;fld st0
FLD_ST 0

;fmul st0, st3
FMUL_ST 3

;fadd dword [eax+0x8]
add tmpadr, eax, 8
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;fstp dword [eax+0x8]
FSTP_FLOAT
add tmpadr, eax, 8
store tmp0, tmpadr, 1

;fmul st0, st1
FMUL_ST 1

;fadd dword [ebx+0x8]
add tmpadr, ebx, 8
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;fstp dword [ebx+0x8]
FSTP_FLOAT
add tmpadr, ebx, 8
store tmp0, tmpadr, 1

;fld dword [ecx+0xc]
add tmpadr, ecx, 12
load tmp1, tmpadr, 1
FLD_FLOAT tmp1

;fmul st1, st0
FMUL_TO_ST 1

;fmul st2, st0
FMUL_TO_ST 2

;fmulp st3, st0
FMULP_ST 3

;fadd dword [ebx+0xc]
add tmpadr, ebx, 12
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;fstp dword [ebx+0xc]
FSTP_FLOAT
add tmpadr, ebx, 12
store tmp0, tmpadr, 1

;fadd dword [eax+0xc]
add tmpadr, eax, 12
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;fstp dword [eax+0xc]
FSTP_FLOAT
add tmpadr, eax, 12
store tmp0, tmpadr, 1

;fadd dword [edi+0xc]
add tmpadr, edi, 12
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;fstp dword [edi+0xc]
FSTP_FLOAT
add tmpadr, edi, 12
store tmp0, tmpadr, 1

;fadd st0, st1
FADD_ST 1

;fld st0
FLD_ST 0

;fmul st0, st3
FMUL_ST 3

;fld st1
FLD_ST 1

;fmul dword [edx+0xc]
add tmpadr, edx, 12
load tmp1, tmpadr, 1
FMUL_FLOAT tmp1

;fld st2
FLD_ST 2

;fmul dword [edx+0x10]
add tmpadr, edx, 16
load tmp1, tmpadr, 1
FMUL_FLOAT tmp1

;fld dword [ecx+0x10]
add tmpadr, ecx, 16
load tmp1, tmpadr, 1
FLD_FLOAT tmp1

;fld st0
FLD_ST 0

;fmul st0, st4
FMUL_ST 4

;fadd dword [edi+0x10]
add tmpadr, edi, 16
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;fstp dword [edi+0x10]
FSTP_FLOAT
add tmpadr, edi, 16
store tmp0, tmpadr, 1

;fld st0
FLD_ST 0

;fmul st0, st3
FMUL_ST 3

;fadd dword [eax+0x10]
add tmpadr, eax, 16
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;fstp dword [eax+0x10]
FSTP_FLOAT
add tmpadr, eax, 16
store tmp0, tmpadr, 1

;fmul st0, st1
FMUL_ST 1

;fadd dword [ebx+0x10]
add tmpadr, ebx, 16
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;fstp dword [ebx+0x10]
FSTP_FLOAT
add tmpadr, ebx, 16
store tmp0, tmpadr, 1

;fld dword [ecx+0x14]
add tmpadr, ecx, 20
load tmp1, tmpadr, 1
FLD_FLOAT tmp1

;fmul st1, st0
FMUL_TO_ST 1

;fmul st2, st0
FMUL_TO_ST 2

;fmulp st3, st0
FMULP_ST 3

;fadd dword [ebx+0x14]
add tmpadr, ebx, 20
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;fstp dword [ebx+0x14]
FSTP_FLOAT
add tmpadr, ebx, 20
store tmp0, tmpadr, 1

;fadd dword [eax+0x14]
add tmpadr, eax, 20
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;fstp dword [eax+0x14]
FSTP_FLOAT
add tmpadr, eax, 20
store tmp0, tmpadr, 1

;fadd dword [edi+0x14]
add tmpadr, edi, 20
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;fstp dword [edi+0x14]
FSTP_FLOAT
add tmpadr, edi, 20
store tmp0, tmpadr, 1

;fadd st0, st1
FADD_ST 1

;fld st0
FLD_ST 0

;fmul st0, st3
FMUL_ST 3

;fld st1
FLD_ST 1

;fmul dword [edx+0xc]
add tmpadr, edx, 12
load tmp1, tmpadr, 1
FMUL_FLOAT tmp1

;fld st2
FLD_ST 2

;fmul dword [edx+0x10]
add tmpadr, edx, 16
load tmp1, tmpadr, 1
FMUL_FLOAT tmp1

;fld dword [ecx+0x18]
add tmpadr, ecx, 24
load tmp1, tmpadr, 1
FLD_FLOAT tmp1

;fld st0
FLD_ST 0

;fmul st0, st4
FMUL_ST 4

;fadd dword [edi+0x18]
add tmpadr, edi, 24
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;fstp dword [edi+0x18]
FSTP_FLOAT
add tmpadr, edi, 24
store tmp0, tmpadr, 1

;fld st0
FLD_ST 0

;fmul st0, st3
FMUL_ST 3

;fadd dword [eax+0x18]
add tmpadr, eax, 24
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;fstp dword [eax+0x18]
FSTP_FLOAT
add tmpadr, eax, 24
store tmp0, tmpadr, 1

;fmul st0, st1
FMUL_ST 1

;fadd dword [ebx+0x18]
add tmpadr, ebx, 24
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;fstp dword [ebx+0x18]
FSTP_FLOAT
add tmpadr, ebx, 24
store tmp0, tmpadr, 1

;fld dword [ecx+0x1c]
add tmpadr, ecx, 28
load tmp1, tmpadr, 1
FLD_FLOAT tmp1

;fmul st1, st0
FMUL_TO_ST 1

;fmul st2, st0
FMUL_TO_ST 2

;fmulp st3, st0
FMULP_ST 3

;fadd dword [ebx+0x1c]
add tmpadr, ebx, 28
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;fstp dword [ebx+0x1c]
FSTP_FLOAT
add tmpadr, ebx, 28
store tmp0, tmpadr, 1

;fadd dword [eax+0x1c]
add tmpadr, eax, 28
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;fstp dword [eax+0x1c]
FSTP_FLOAT
add tmpadr, eax, 28
store tmp0, tmpadr, 1

;fadd dword [edi+0x1c]
add tmpadr, edi, 28
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;fstp dword [edi+0x1c]
FSTP_FLOAT
add tmpadr, edi, 28
store tmp0, tmpadr, 1

;lea eax, [eax+0x20]
add eax, eax, 32

;lea ebx, [ebx+0x20]
add ebx, ebx, 32

;lea ecx, [ecx+0x20]
add ecx, ecx, 32

;lea edi, [edi+0x20]
add edi, edi, 32

;cmp eax, esi
cmovult eax, esi, tmpcnd, 0, 1

;jb near loc_40E3D0
ctcallz tmpcnd, loc_40E3D0

tcall loc_40E505
endp

proc loc_40E505
;fstp st0
FSTP_ST 0

;fstp st0
FSTP_ST 0

;fstp st0
FSTP_ST 0

;pop ebx
POP ebx

;pop edi
POP edi

;pop esi
POP esi

;ret 0x4
POP tmp1
add esp, esp, 4
tcall tmp1
endp

proc loc_40E520
;fld dword [edx+0x34]
add tmpadr, edx, 52
load tmp1, tmpadr, 1
FLD_FLOAT tmp1

;fld dword [ecx+0x4]
add tmpadr, ecx, 4
load tmp1, tmpadr, 1
FLD_FLOAT tmp1

;fld dword [esp+0x4]
add tmpadr, esp, 4
load tmp1, tmpadr, 4
FLD_FLOAT tmp1

;fmul dword [edx+0x14]
add tmpadr, edx, 20
load tmp1, tmpadr, 1
FMUL_FLOAT tmp1

;fst dword [ecx+0x4]
FST_FLOAT
add tmpadr, ecx, 4
store tmp0, tmpadr, 1

;fsub st0, st1
FSUB_ST 1

;fmul dword [loc_455D04]
load tmp1, loc_455D04, 4
FMUL_FLOAT tmp1

;fxch st0, st1
FXCH_ST 1

;push esi
PUSH esi

;push edi
PUSH edi

;push ebx
PUSH ebx

;mov eax, [loc_441848]
load eax, loc_441848, 4

;lea esi, [eax*4+loc_441048]
mov tmpadr, loc_441048
shl tmp0, eax, 2
add esi, tmpadr, tmp0

;mov eax, loc_441048
mov eax, loc_441048

;mov ebx, loc_441448
mov ebx, loc_441448

;mov ecx, loc_455904
mov ecx, loc_455904

;mov edi, [loc_455888]
load edi, loc_455888, 4

;nop
NOP

;nop
NOP

tcall loc_40E560
endp

proc loc_40E560
;fadd st0, st1
FADD_ST 1

;fld st0
FLD_ST 0

;fmul st0, st3
FMUL_ST 3

;fld st1
FLD_ST 1

;fmul dword [edx+0xc]
add tmpadr, edx, 12
load tmp1, tmpadr, 1
FMUL_FLOAT tmp1

;fld st2
FLD_ST 2

;fmul dword [edx+0x10]
add tmpadr, edx, 16
load tmp1, tmpadr, 1
FMUL_FLOAT tmp1

;fld dword [ecx]
load tmp1, ecx, 1
FLD_FLOAT tmp1

;fld st0
FLD_ST 0

;fmul st0, st3
FMUL_ST 3

;fadd dword [eax]
load tmp1, eax, 1
FADD_FLOAT tmp1

;fstp dword [eax]
FSTP_FLOAT
store tmp0, eax, 1

;fmul st0, st1
FMUL_ST 1

;fadd dword [ebx]
load tmp1, ebx, 1
FADD_FLOAT tmp1

;fstp dword [ebx]
FSTP_FLOAT
store tmp0, ebx, 1

;fld dword [ecx+0x4]
add tmpadr, ecx, 4
load tmp1, tmpadr, 1
FLD_FLOAT tmp1

;fmul st1, st0
FMUL_TO_ST 1

;fmul st2, st0
FMUL_TO_ST 2

;fmulp st3, st0
FMULP_ST 3

;fadd dword [ebx+0x4]
add tmpadr, ebx, 4
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;fstp dword [ebx+0x4]
FSTP_FLOAT
add tmpadr, ebx, 4
store tmp0, tmpadr, 1

;fadd dword [eax+0x4]
add tmpadr, eax, 4
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;fstp dword [eax+0x4]
FSTP_FLOAT
add tmpadr, eax, 4
store tmp0, tmpadr, 1

;fadd dword [edi]
load tmp1, edi, 1
FADD_FLOAT tmp1

;fstp dword [edi]
FSTP_FLOAT
store tmp0, edi, 1

;fadd st0, st1
FADD_ST 1

;fld st0
FLD_ST 0

;fmul st0, st3
FMUL_ST 3

;fld st1
FLD_ST 1

;fmul dword [edx+0xc]
add tmpadr, edx, 12
load tmp1, tmpadr, 1
FMUL_FLOAT tmp1

;fld st2
FLD_ST 2

;fmul dword [edx+0x10]
add tmpadr, edx, 16
load tmp1, tmpadr, 1
FMUL_FLOAT tmp1

;fld dword [ecx+0x8]
add tmpadr, ecx, 8
load tmp1, tmpadr, 1
FLD_FLOAT tmp1

;fld st0
FLD_ST 0

;fmul st0, st3
FMUL_ST 3

;fadd dword [eax+0x8]
add tmpadr, eax, 8
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;fstp dword [eax+0x8]
FSTP_FLOAT
add tmpadr, eax, 8
store tmp0, tmpadr, 1

;fmul st0, st1
FMUL_ST 1

;fadd dword [ebx+0x8]
add tmpadr, ebx, 8
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;fstp dword [ebx+0x8]
FSTP_FLOAT
add tmpadr, ebx, 8
store tmp0, tmpadr, 1

;fld dword [ecx+0xc]
add tmpadr, ecx, 12
load tmp1, tmpadr, 1
FLD_FLOAT tmp1

;fmul st1, st0
FMUL_TO_ST 1

;fmul st2, st0
FMUL_TO_ST 2

;fmulp st3, st0
FMULP_ST 3

;fadd dword [ebx+0xc]
add tmpadr, ebx, 12
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;fstp dword [ebx+0xc]
FSTP_FLOAT
add tmpadr, ebx, 12
store tmp0, tmpadr, 1

;fadd dword [eax+0xc]
add tmpadr, eax, 12
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;fstp dword [eax+0xc]
FSTP_FLOAT
add tmpadr, eax, 12
store tmp0, tmpadr, 1

;fadd dword [edi+0x4]
add tmpadr, edi, 4
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;fstp dword [edi+0x4]
FSTP_FLOAT
add tmpadr, edi, 4
store tmp0, tmpadr, 1

;fadd st0, st1
FADD_ST 1

;fld st0
FLD_ST 0

;fmul st0, st3
FMUL_ST 3

;fld st1
FLD_ST 1

;fmul dword [edx+0xc]
add tmpadr, edx, 12
load tmp1, tmpadr, 1
FMUL_FLOAT tmp1

;fld st2
FLD_ST 2

;fmul dword [edx+0x10]
add tmpadr, edx, 16
load tmp1, tmpadr, 1
FMUL_FLOAT tmp1

;fld dword [ecx+0x10]
add tmpadr, ecx, 16
load tmp1, tmpadr, 1
FLD_FLOAT tmp1

;fld st0
FLD_ST 0

;fmul st0, st3
FMUL_ST 3

;fadd dword [eax+0x10]
add tmpadr, eax, 16
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;fstp dword [eax+0x10]
FSTP_FLOAT
add tmpadr, eax, 16
store tmp0, tmpadr, 1

;fmul st0, st1
FMUL_ST 1

;fadd dword [ebx+0x10]
add tmpadr, ebx, 16
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;fstp dword [ebx+0x10]
FSTP_FLOAT
add tmpadr, ebx, 16
store tmp0, tmpadr, 1

;fld dword [ecx+0x14]
add tmpadr, ecx, 20
load tmp1, tmpadr, 1
FLD_FLOAT tmp1

;fmul st1, st0
FMUL_TO_ST 1

;fmul st2, st0
FMUL_TO_ST 2

;fmulp st3, st0
FMULP_ST 3

;fadd dword [ebx+0x14]
add tmpadr, ebx, 20
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;fstp dword [ebx+0x14]
FSTP_FLOAT
add tmpadr, ebx, 20
store tmp0, tmpadr, 1

;fadd dword [eax+0x14]
add tmpadr, eax, 20
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;fstp dword [eax+0x14]
FSTP_FLOAT
add tmpadr, eax, 20
store tmp0, tmpadr, 1

;fadd dword [edi+0x8]
add tmpadr, edi, 8
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;fstp dword [edi+0x8]
FSTP_FLOAT
add tmpadr, edi, 8
store tmp0, tmpadr, 1

;fadd st0, st1
FADD_ST 1

;fld st0
FLD_ST 0

;fmul st0, st3
FMUL_ST 3

;fld st1
FLD_ST 1

;fmul dword [edx+0xc]
add tmpadr, edx, 12
load tmp1, tmpadr, 1
FMUL_FLOAT tmp1

;fld st2
FLD_ST 2

;fmul dword [edx+0x10]
add tmpadr, edx, 16
load tmp1, tmpadr, 1
FMUL_FLOAT tmp1

;fld dword [ecx+0x18]
add tmpadr, ecx, 24
load tmp1, tmpadr, 1
FLD_FLOAT tmp1

;fld st0
FLD_ST 0

;fmul st0, st3
FMUL_ST 3

;fadd dword [eax+0x18]
add tmpadr, eax, 24
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;fstp dword [eax+0x18]
FSTP_FLOAT
add tmpadr, eax, 24
store tmp0, tmpadr, 1

;fmul st0, st1
FMUL_ST 1

;fadd dword [ebx+0x18]
add tmpadr, ebx, 24
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;fstp dword [ebx+0x18]
FSTP_FLOAT
add tmpadr, ebx, 24
store tmp0, tmpadr, 1

;fld dword [ecx+0x1c]
add tmpadr, ecx, 28
load tmp1, tmpadr, 1
FLD_FLOAT tmp1

;fmul st1, st0
FMUL_TO_ST 1

;fmul st2, st0
FMUL_TO_ST 2

;fmulp st3, st0
FMULP_ST 3

;fadd dword [ebx+0x1c]
add tmpadr, ebx, 28
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;fstp dword [ebx+0x1c]
FSTP_FLOAT
add tmpadr, ebx, 28
store tmp0, tmpadr, 1

;fadd dword [eax+0x1c]
add tmpadr, eax, 28
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;fstp dword [eax+0x1c]
FSTP_FLOAT
add tmpadr, eax, 28
store tmp0, tmpadr, 1

;fadd dword [edi+0xc]
add tmpadr, edi, 12
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;fstp dword [edi+0xc]
FSTP_FLOAT
add tmpadr, edi, 12
store tmp0, tmpadr, 1

;lea eax, [eax+0x20]
add eax, eax, 32

;lea ebx, [ebx+0x20]
add ebx, ebx, 32

;lea ecx, [ecx+0x20]
add ecx, ecx, 32

;lea edi, [edi+0x10]
add edi, edi, 16

;cmp eax, esi
cmovult eax, esi, tmpcnd, 0, 1

;jb near loc_40E560
ctcallz tmpcnd, loc_40E560

tcall loc_40E66D
endp

proc loc_40E66D
;fstp st0
FSTP_ST 0

;fstp st0
FSTP_ST 0

;fstp st0
FSTP_ST 0

;pop ebx
POP ebx

;pop edi
POP edi

;pop esi
POP esi

;ret 0x4
POP tmp1
add esp, esp, 4
tcall tmp1
endp

proc loc_40E680
;fld dword [ecx+0x4]
add tmpadr, ecx, 4
load tmp1, tmpadr, 1
FLD_FLOAT tmp1

;fld dword [esp+0x4]
add tmpadr, esp, 4
load tmp1, tmpadr, 4
FLD_FLOAT tmp1

;fmul dword [edx+0x14]
add tmpadr, edx, 20
load tmp1, tmpadr, 1
FMUL_FLOAT tmp1

;fst dword [ecx+0x4]
FST_FLOAT
add tmpadr, ecx, 4
store tmp0, tmpadr, 1

;fsub st0, st1
FSUB_ST 1

;fmul dword [loc_455D04]
load tmp1, loc_455D04, 4
FMUL_FLOAT tmp1

;fxch st0, st1
FXCH_ST 1

;push edi
PUSH edi

;push esi
PUSH esi

;push ebp
PUSH ebp

;push ebx
PUSH ebx

;mov edi, [loc_455888]
load edi, loc_455888, 4

;mov esi, [loc_44586C]
load esi, loc_44586C, 4

;mov eax, [loc_441848]
load eax, loc_441848, 4

;lea ebp, [eax*4+loc_441048]
mov tmpadr, loc_441048
shl tmp0, eax, 2
add ebp, tmpadr, tmp0

;mov eax, loc_441048
mov eax, loc_441048

;mov ebx, loc_441448
mov ebx, loc_441448

;mov ecx, loc_455904
mov ecx, loc_455904

;nop
NOP

;nop
NOP

tcall loc_40E6C4
endp

proc loc_40E6C4
;fadd st0, st1
FADD_ST 1

;fld st0
FLD_ST 0

;fmul dword [edx+0x38]
add tmpadr, edx, 56
load tmp1, tmpadr, 1
FMUL_FLOAT tmp1

;fld st1
FLD_ST 1

;fmul dword [edx+0x34]
add tmpadr, edx, 52
load tmp1, tmpadr, 1
FMUL_FLOAT tmp1

;fld st2
FLD_ST 2

;fmul dword [edx+0xc]
add tmpadr, edx, 12
load tmp1, tmpadr, 1
FMUL_FLOAT tmp1

;fld st3
FLD_ST 3

;fmul dword [edx+0x10]
add tmpadr, edx, 16
load tmp1, tmpadr, 1
FMUL_FLOAT tmp1

;fld dword [ecx]
load tmp1, ecx, 1
FLD_FLOAT tmp1

;fld st0
FLD_ST 0

;fmul st0, st2
FMUL_ST 2

;fadd dword [ebx]
load tmp1, ebx, 1
FADD_FLOAT tmp1

;fstp dword [ebx]
FSTP_FLOAT
store tmp0, ebx, 1

;fld st0
FLD_ST 0

;fmul st0, st3
FMUL_ST 3

;fadd dword [eax]
load tmp1, eax, 1
FADD_FLOAT tmp1

;fstp dword [eax]
FSTP_FLOAT
store tmp0, eax, 1

;fmul st0, st4
FMUL_ST 4

;fadd dword [esi]
load tmp1, esi, 1
FADD_FLOAT tmp1

;fstp dword [esi]
FSTP_FLOAT
store tmp0, esi, 1

;fld dword [ecx+0x4]
add tmpadr, ecx, 4
load tmp1, tmpadr, 1
FLD_FLOAT tmp1

;fmul st1, st0
FMUL_TO_ST 1

;fmul st2, st0
FMUL_TO_ST 2

;fmul st3, st0
FMUL_TO_ST 3

;fmulp st4, st0
FMULP_ST 4

;fadd dword [ebx+0x4]
add tmpadr, ebx, 4
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;fstp dword [ebx+0x4]
FSTP_FLOAT
add tmpadr, ebx, 4
store tmp0, tmpadr, 1

;fadd dword [eax+0x4]
add tmpadr, eax, 4
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;fstp dword [eax+0x4]
FSTP_FLOAT
add tmpadr, eax, 4
store tmp0, tmpadr, 1

;fadd dword [edi]
load tmp1, edi, 1
FADD_FLOAT tmp1

;fstp dword [edi]
FSTP_FLOAT
store tmp0, edi, 1

;fadd dword [esi+0x4]
add tmpadr, esi, 4
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;fstp dword [esi+0x4]
FSTP_FLOAT
add tmpadr, esi, 4
store tmp0, tmpadr, 1

;fadd st0, st1
FADD_ST 1

;fld st0
FLD_ST 0

;fmul dword [edx+0x38]
add tmpadr, edx, 56
load tmp1, tmpadr, 1
FMUL_FLOAT tmp1

;fld st1
FLD_ST 1

;fmul dword [edx+0x34]
add tmpadr, edx, 52
load tmp1, tmpadr, 1
FMUL_FLOAT tmp1

;fld st2
FLD_ST 2

;fmul dword [edx+0xc]
add tmpadr, edx, 12
load tmp1, tmpadr, 1
FMUL_FLOAT tmp1

;fld st3
FLD_ST 3

;fmul dword [edx+0x10]
add tmpadr, edx, 16
load tmp1, tmpadr, 1
FMUL_FLOAT tmp1

;fld dword [ecx+0x8]
add tmpadr, ecx, 8
load tmp1, tmpadr, 1
FLD_FLOAT tmp1

;fld st0
FLD_ST 0

;fmul st0, st2
FMUL_ST 2

;fadd dword [ebx+0x8]
add tmpadr, ebx, 8
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;fstp dword [ebx+0x8]
FSTP_FLOAT
add tmpadr, ebx, 8
store tmp0, tmpadr, 1

;fld st0
FLD_ST 0

;fmul st0, st3
FMUL_ST 3

;fadd dword [eax+0x8]
add tmpadr, eax, 8
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;fstp dword [eax+0x8]
FSTP_FLOAT
add tmpadr, eax, 8
store tmp0, tmpadr, 1

;fmul st0, st4
FMUL_ST 4

;fadd dword [esi+0x8]
add tmpadr, esi, 8
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;fstp dword [esi+0x8]
FSTP_FLOAT
add tmpadr, esi, 8
store tmp0, tmpadr, 1

;fld dword [ecx+0xc]
add tmpadr, ecx, 12
load tmp1, tmpadr, 1
FLD_FLOAT tmp1

;fmul st1, st0
FMUL_TO_ST 1

;fmul st2, st0
FMUL_TO_ST 2

;fmul st3, st0
FMUL_TO_ST 3

;fmulp st4, st0
FMULP_ST 4

;fadd dword [ebx+0xc]
add tmpadr, ebx, 12
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;fstp dword [ebx+0xc]
FSTP_FLOAT
add tmpadr, ebx, 12
store tmp0, tmpadr, 1

;fadd dword [eax+0xc]
add tmpadr, eax, 12
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;fstp dword [eax+0xc]
FSTP_FLOAT
add tmpadr, eax, 12
store tmp0, tmpadr, 1

;fadd dword [edi+0x4]
add tmpadr, edi, 4
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;fstp dword [edi+0x4]
FSTP_FLOAT
add tmpadr, edi, 4
store tmp0, tmpadr, 1

;fadd dword [esi+0xc]
add tmpadr, esi, 12
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;fstp dword [esi+0xc]
FSTP_FLOAT
add tmpadr, esi, 12
store tmp0, tmpadr, 1

;fadd st0, st1
FADD_ST 1

;fld st0
FLD_ST 0

;fmul dword [edx+0x38]
add tmpadr, edx, 56
load tmp1, tmpadr, 1
FMUL_FLOAT tmp1

;fld st1
FLD_ST 1

;fmul dword [edx+0x34]
add tmpadr, edx, 52
load tmp1, tmpadr, 1
FMUL_FLOAT tmp1

;fld st2
FLD_ST 2

;fmul dword [edx+0xc]
add tmpadr, edx, 12
load tmp1, tmpadr, 1
FMUL_FLOAT tmp1

;fld st3
FLD_ST 3

;fmul dword [edx+0x10]
add tmpadr, edx, 16
load tmp1, tmpadr, 1
FMUL_FLOAT tmp1

;fld dword [ecx+0x10]
add tmpadr, ecx, 16
load tmp1, tmpadr, 1
FLD_FLOAT tmp1

;fld st0
FLD_ST 0

;fmul st0, st2
FMUL_ST 2

;fadd dword [ebx+0x10]
add tmpadr, ebx, 16
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;fstp dword [ebx+0x10]
FSTP_FLOAT
add tmpadr, ebx, 16
store tmp0, tmpadr, 1

;fld st0
FLD_ST 0

;fmul st0, st3
FMUL_ST 3

;fadd dword [eax+0x10]
add tmpadr, eax, 16
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;fstp dword [eax+0x10]
FSTP_FLOAT
add tmpadr, eax, 16
store tmp0, tmpadr, 1

;fmul st0, st4
FMUL_ST 4

;fadd dword [esi+0x10]
add tmpadr, esi, 16
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;fstp dword [esi+0x10]
FSTP_FLOAT
add tmpadr, esi, 16
store tmp0, tmpadr, 1

;fld dword [ecx+0x14]
add tmpadr, ecx, 20
load tmp1, tmpadr, 1
FLD_FLOAT tmp1

;fmul st1, st0
FMUL_TO_ST 1

;fmul st2, st0
FMUL_TO_ST 2

;fmul st3, st0
FMUL_TO_ST 3

;fmulp st4, st0
FMULP_ST 4

;fadd dword [ebx+0x14]
add tmpadr, ebx, 20
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;fstp dword [ebx+0x14]
FSTP_FLOAT
add tmpadr, ebx, 20
store tmp0, tmpadr, 1

;fadd dword [eax+0x14]
add tmpadr, eax, 20
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;fstp dword [eax+0x14]
FSTP_FLOAT
add tmpadr, eax, 20
store tmp0, tmpadr, 1

;fadd dword [edi+0x8]
add tmpadr, edi, 8
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;fstp dword [edi+0x8]
FSTP_FLOAT
add tmpadr, edi, 8
store tmp0, tmpadr, 1

;fadd dword [esi+0x14]
add tmpadr, esi, 20
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;fstp dword [esi+0x14]
FSTP_FLOAT
add tmpadr, esi, 20
store tmp0, tmpadr, 1

;fadd st0, st1
FADD_ST 1

;fld st0
FLD_ST 0

;fmul dword [edx+0x38]
add tmpadr, edx, 56
load tmp1, tmpadr, 1
FMUL_FLOAT tmp1

;fld st1
FLD_ST 1

;fmul dword [edx+0x34]
add tmpadr, edx, 52
load tmp1, tmpadr, 1
FMUL_FLOAT tmp1

;fld st2
FLD_ST 2

;fmul dword [edx+0xc]
add tmpadr, edx, 12
load tmp1, tmpadr, 1
FMUL_FLOAT tmp1

;fld st3
FLD_ST 3

;fmul dword [edx+0x10]
add tmpadr, edx, 16
load tmp1, tmpadr, 1
FMUL_FLOAT tmp1

;fld dword [ecx+0x18]
add tmpadr, ecx, 24
load tmp1, tmpadr, 1
FLD_FLOAT tmp1

;fld st0
FLD_ST 0

;fmul st0, st2
FMUL_ST 2

;fadd dword [ebx+0x18]
add tmpadr, ebx, 24
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;fstp dword [ebx+0x18]
FSTP_FLOAT
add tmpadr, ebx, 24
store tmp0, tmpadr, 1

;fld st0
FLD_ST 0

;fmul st0, st3
FMUL_ST 3

;fadd dword [eax+0x18]
add tmpadr, eax, 24
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;fstp dword [eax+0x18]
FSTP_FLOAT
add tmpadr, eax, 24
store tmp0, tmpadr, 1

;fmul st0, st4
FMUL_ST 4

;fadd dword [esi+0x18]
add tmpadr, esi, 24
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;fstp dword [esi+0x18]
FSTP_FLOAT
add tmpadr, esi, 24
store tmp0, tmpadr, 1

;fld dword [ecx+0x1c]
add tmpadr, ecx, 28
load tmp1, tmpadr, 1
FLD_FLOAT tmp1

;fmul st1, st0
FMUL_TO_ST 1

;fmul st2, st0
FMUL_TO_ST 2

;fmul st3, st0
FMUL_TO_ST 3

;fmulp st4, st0
FMULP_ST 4

;fadd dword [ebx+0x1c]
add tmpadr, ebx, 28
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;fstp dword [ebx+0x1c]
FSTP_FLOAT
add tmpadr, ebx, 28
store tmp0, tmpadr, 1

;fadd dword [eax+0x1c]
add tmpadr, eax, 28
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;fstp dword [eax+0x1c]
FSTP_FLOAT
add tmpadr, eax, 28
store tmp0, tmpadr, 1

;fadd dword [edi+0xc]
add tmpadr, edi, 12
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;fstp dword [edi+0xc]
FSTP_FLOAT
add tmpadr, edi, 12
store tmp0, tmpadr, 1

;fadd dword [esi+0x1c]
add tmpadr, esi, 28
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;fstp dword [esi+0x1c]
FSTP_FLOAT
add tmpadr, esi, 28
store tmp0, tmpadr, 1

;lea eax, [eax+0x20]
add eax, eax, 32

;lea ebx, [ebx+0x20]
add ebx, ebx, 32

;lea ecx, [ecx+0x20]
add ecx, ecx, 32

;lea edi, [edi+0x10]
add edi, edi, 16

;lea esi, [esi+0x20]
add esi, esi, 32

;cmp eax, ebp
cmovult eax, ebp, tmpcnd, 0, 1

;jb near loc_40E6C4
ctcallz tmpcnd, loc_40E6C4

tcall loc_40E832
endp

proc loc_40E832
;fstp st0
FSTP_ST 0

;fstp st0
FSTP_ST 0

;pop ebx
POP ebx

;pop ebp
POP ebp

;pop esi
POP esi

;pop edi
POP edi

;ret 0x4
POP tmp1
add esp, esp, 4
tcall tmp1
endp

proc loc_40E840
;fld dword [edx+0x34]
add tmpadr, edx, 52
load tmp1, tmpadr, 1
FLD_FLOAT tmp1

;fld dword [ecx+0x4]
add tmpadr, ecx, 4
load tmp1, tmpadr, 1
FLD_FLOAT tmp1

;fld dword [esp+0x4]
add tmpadr, esp, 4
load tmp1, tmpadr, 4
FLD_FLOAT tmp1

;fmul dword [edx+0x14]
add tmpadr, edx, 20
load tmp1, tmpadr, 1
FMUL_FLOAT tmp1

;fst dword [ecx+0x4]
FST_FLOAT
add tmpadr, ecx, 4
store tmp0, tmpadr, 1

;fsub st0, st1
FSUB_ST 1

;fmul dword [loc_455D04]
load tmp1, loc_455D04, 4
FMUL_FLOAT tmp1

;fxch st0, st1
FXCH_ST 1

;push esi
PUSH esi

;push edi
PUSH edi

;push ebx
PUSH ebx

;mov eax, [loc_441848]
load eax, loc_441848, 4

;lea esi, [eax*4+loc_441048]
mov tmpadr, loc_441048
shl tmp0, eax, 2
add esi, tmpadr, tmp0

;mov eax, loc_441048
mov eax, loc_441048

;mov ebx, loc_441448
mov ebx, loc_441448

;mov ecx, loc_455904
mov ecx, loc_455904

;mov edi, [loc_455888]
load edi, loc_455888, 4

;nop
NOP

;nop
NOP

tcall loc_40E880
endp

proc loc_40E880
;fadd st0, st1
FADD_ST 1

;fld st0
FLD_ST 0

;fmul st0, st3
FMUL_ST 3

;fld st1
FLD_ST 1

;fmul dword [edx+0xc]
add tmpadr, edx, 12
load tmp1, tmpadr, 1
FMUL_FLOAT tmp1

;fld st2
FLD_ST 2

;fmul dword [edx+0x10]
add tmpadr, edx, 16
load tmp1, tmpadr, 1
FMUL_FLOAT tmp1

;fld dword [ecx]
load tmp1, ecx, 1
FLD_FLOAT tmp1

;fld st0
FLD_ST 0

;fmul st0, st4
FMUL_ST 4

;fadd dword [edi]
load tmp1, edi, 1
FADD_FLOAT tmp1

;fstp dword [edi]
FSTP_FLOAT
store tmp0, edi, 1

;fld st0
FLD_ST 0

;fmul st0, st3
FMUL_ST 3

;fadd dword [eax]
load tmp1, eax, 1
FADD_FLOAT tmp1

;fstp dword [eax]
FSTP_FLOAT
store tmp0, eax, 1

;fmul st0, st1
FMUL_ST 1

;fadd dword [ebx]
load tmp1, ebx, 1
FADD_FLOAT tmp1

;fstp dword [ebx]
FSTP_FLOAT
store tmp0, ebx, 1

;fld dword [ecx+0x4]
add tmpadr, ecx, 4
load tmp1, tmpadr, 1
FLD_FLOAT tmp1

;fmul st1, st0
FMUL_TO_ST 1

;fmul st2, st0
FMUL_TO_ST 2

;fmulp st3, st0
FMULP_ST 3

;fadd dword [ebx+0x4]
add tmpadr, ebx, 4
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;fstp dword [ebx+0x4]
FSTP_FLOAT
add tmpadr, ebx, 4
store tmp0, tmpadr, 1

;fadd dword [eax+0x4]
add tmpadr, eax, 4
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;fstp dword [eax+0x4]
FSTP_FLOAT
add tmpadr, eax, 4
store tmp0, tmpadr, 1

;fadd dword [edi+0x4]
add tmpadr, edi, 4
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;fstp dword [edi+0x4]
FSTP_FLOAT
add tmpadr, edi, 4
store tmp0, tmpadr, 1

;fadd st0, st1
FADD_ST 1

;fld st0
FLD_ST 0

;fmul st0, st3
FMUL_ST 3

;fld st1
FLD_ST 1

;fmul dword [edx+0xc]
add tmpadr, edx, 12
load tmp1, tmpadr, 1
FMUL_FLOAT tmp1

;fld st2
FLD_ST 2

;fmul dword [edx+0x10]
add tmpadr, edx, 16
load tmp1, tmpadr, 1
FMUL_FLOAT tmp1

;fld dword [ecx+0x8]
add tmpadr, ecx, 8
load tmp1, tmpadr, 1
FLD_FLOAT tmp1

;fld st0
FLD_ST 0

;fmul st0, st4
FMUL_ST 4

;fadd dword [edi+0x8]
add tmpadr, edi, 8
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;fstp dword [edi+0x8]
FSTP_FLOAT
add tmpadr, edi, 8
store tmp0, tmpadr, 1

;fld st0
FLD_ST 0

;fmul st0, st3
FMUL_ST 3

;fadd dword [eax+0x8]
add tmpadr, eax, 8
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;fstp dword [eax+0x8]
FSTP_FLOAT
add tmpadr, eax, 8
store tmp0, tmpadr, 1

;fmul st0, st1
FMUL_ST 1

;fadd dword [ebx+0x8]
add tmpadr, ebx, 8
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;fstp dword [ebx+0x8]
FSTP_FLOAT
add tmpadr, ebx, 8
store tmp0, tmpadr, 1

;fld dword [ecx+0xc]
add tmpadr, ecx, 12
load tmp1, tmpadr, 1
FLD_FLOAT tmp1

;fmul st1, st0
FMUL_TO_ST 1

;fmul st2, st0
FMUL_TO_ST 2

;fmulp st3, st0
FMULP_ST 3

;fadd dword [ebx+0xc]
add tmpadr, ebx, 12
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;fstp dword [ebx+0xc]
FSTP_FLOAT
add tmpadr, ebx, 12
store tmp0, tmpadr, 1

;fadd dword [eax+0xc]
add tmpadr, eax, 12
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;fstp dword [eax+0xc]
FSTP_FLOAT
add tmpadr, eax, 12
store tmp0, tmpadr, 1

;fadd dword [edi+0xc]
add tmpadr, edi, 12
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;fstp dword [edi+0xc]
FSTP_FLOAT
add tmpadr, edi, 12
store tmp0, tmpadr, 1

;fadd st0, st1
FADD_ST 1

;fld st0
FLD_ST 0

;fmul st0, st3
FMUL_ST 3

;fld st1
FLD_ST 1

;fmul dword [edx+0xc]
add tmpadr, edx, 12
load tmp1, tmpadr, 1
FMUL_FLOAT tmp1

;fld st2
FLD_ST 2

;fmul dword [edx+0x10]
add tmpadr, edx, 16
load tmp1, tmpadr, 1
FMUL_FLOAT tmp1

;fld dword [ecx+0x10]
add tmpadr, ecx, 16
load tmp1, tmpadr, 1
FLD_FLOAT tmp1

;fld st0
FLD_ST 0

;fmul st0, st4
FMUL_ST 4

;fadd dword [edi+0x10]
add tmpadr, edi, 16
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;fstp dword [edi+0x10]
FSTP_FLOAT
add tmpadr, edi, 16
store tmp0, tmpadr, 1

;fld st0
FLD_ST 0

;fmul st0, st3
FMUL_ST 3

;fadd dword [eax+0x10]
add tmpadr, eax, 16
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;fstp dword [eax+0x10]
FSTP_FLOAT
add tmpadr, eax, 16
store tmp0, tmpadr, 1

;fmul st0, st1
FMUL_ST 1

;fadd dword [ebx+0x10]
add tmpadr, ebx, 16
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;fstp dword [ebx+0x10]
FSTP_FLOAT
add tmpadr, ebx, 16
store tmp0, tmpadr, 1

;fld dword [ecx+0x14]
add tmpadr, ecx, 20
load tmp1, tmpadr, 1
FLD_FLOAT tmp1

;fmul st1, st0
FMUL_TO_ST 1

;fmul st2, st0
FMUL_TO_ST 2

;fmulp st3, st0
FMULP_ST 3

;fadd dword [ebx+0x14]
add tmpadr, ebx, 20
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;fstp dword [ebx+0x14]
FSTP_FLOAT
add tmpadr, ebx, 20
store tmp0, tmpadr, 1

;fadd dword [eax+0x14]
add tmpadr, eax, 20
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;fstp dword [eax+0x14]
FSTP_FLOAT
add tmpadr, eax, 20
store tmp0, tmpadr, 1

;fadd dword [edi+0x14]
add tmpadr, edi, 20
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;fstp dword [edi+0x14]
FSTP_FLOAT
add tmpadr, edi, 20
store tmp0, tmpadr, 1

;fadd st0, st1
FADD_ST 1

;fld st0
FLD_ST 0

;fmul st0, st3
FMUL_ST 3

;fld st1
FLD_ST 1

;fmul dword [edx+0xc]
add tmpadr, edx, 12
load tmp1, tmpadr, 1
FMUL_FLOAT tmp1

;fld st2
FLD_ST 2

;fmul dword [edx+0x10]
add tmpadr, edx, 16
load tmp1, tmpadr, 1
FMUL_FLOAT tmp1

;fld dword [ecx+0x18]
add tmpadr, ecx, 24
load tmp1, tmpadr, 1
FLD_FLOAT tmp1

;fld st0
FLD_ST 0

;fmul st0, st4
FMUL_ST 4

;fadd dword [edi+0x18]
add tmpadr, edi, 24
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;fstp dword [edi+0x18]
FSTP_FLOAT
add tmpadr, edi, 24
store tmp0, tmpadr, 1

;fld st0
FLD_ST 0

;fmul st0, st3
FMUL_ST 3

;fadd dword [eax+0x18]
add tmpadr, eax, 24
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;fstp dword [eax+0x18]
FSTP_FLOAT
add tmpadr, eax, 24
store tmp0, tmpadr, 1

;fmul st0, st1
FMUL_ST 1

;fadd dword [ebx+0x18]
add tmpadr, ebx, 24
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;fstp dword [ebx+0x18]
FSTP_FLOAT
add tmpadr, ebx, 24
store tmp0, tmpadr, 1

;fld dword [ecx+0x1c]
add tmpadr, ecx, 28
load tmp1, tmpadr, 1
FLD_FLOAT tmp1

;fmul st1, st0
FMUL_TO_ST 1

;fmul st2, st0
FMUL_TO_ST 2

;fmulp st3, st0
FMULP_ST 3

;fadd dword [ebx+0x1c]
add tmpadr, ebx, 28
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;fstp dword [ebx+0x1c]
FSTP_FLOAT
add tmpadr, ebx, 28
store tmp0, tmpadr, 1

;fadd dword [eax+0x1c]
add tmpadr, eax, 28
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;fstp dword [eax+0x1c]
FSTP_FLOAT
add tmpadr, eax, 28
store tmp0, tmpadr, 1

;fadd dword [edi+0x1c]
add tmpadr, edi, 28
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;fstp dword [edi+0x1c]
FSTP_FLOAT
add tmpadr, edi, 28
store tmp0, tmpadr, 1

;lea eax, [eax+0x20]
add eax, eax, 32

;lea ebx, [ebx+0x20]
add ebx, ebx, 32

;lea ecx, [ecx+0x20]
add ecx, ecx, 32

;lea edi, [edi+0x20]
add edi, edi, 32

;cmp eax, esi
cmovult eax, esi, tmpcnd, 0, 1

;jb near loc_40E880
ctcallz tmpcnd, loc_40E880

tcall loc_40E9B5
endp

proc loc_40E9B5
;fstp st0
FSTP_ST 0

;fstp st0
FSTP_ST 0

;fstp st0
FSTP_ST 0

;pop ebx
POP ebx

;pop edi
POP edi

;pop esi
POP esi

;ret 0x4
POP tmp1
add esp, esp, 4
tcall tmp1
endp

proc loc_40E9D0
;fld dword [ecx+0x4]
add tmpadr, ecx, 4
load tmp1, tmpadr, 1
FLD_FLOAT tmp1

;fld dword [esp+0x4]
add tmpadr, esp, 4
load tmp1, tmpadr, 4
FLD_FLOAT tmp1

;fmul dword [edx+0x14]
add tmpadr, edx, 20
load tmp1, tmpadr, 1
FMUL_FLOAT tmp1

;fst dword [ecx+0x4]
FST_FLOAT
add tmpadr, ecx, 4
store tmp0, tmpadr, 1

;fsub st0, st1
FSUB_ST 1

;fmul dword [loc_455D04]
load tmp1, loc_455D04, 4
FMUL_FLOAT tmp1

;fxch st0, st1
FXCH_ST 1

;push edi
PUSH edi

;push esi
PUSH esi

;push ebp
PUSH ebp

;push ebx
PUSH ebx

;mov edi, [loc_455888]
load edi, loc_455888, 4

;mov esi, [loc_44586C]
load esi, loc_44586C, 4

;mov eax, [loc_441848]
load eax, loc_441848, 4

;lea ebp, [eax*4+loc_441048]
mov tmpadr, loc_441048
shl tmp0, eax, 2
add ebp, tmpadr, tmp0

;mov eax, loc_441048
mov eax, loc_441048

;mov ebx, loc_441448
mov ebx, loc_441448

;mov ecx, loc_455904
mov ecx, loc_455904

;nop
NOP

;nop
NOP

tcall loc_40EA14
endp

proc loc_40EA14
;fadd st0, st1
FADD_ST 1

;fld st0
FLD_ST 0

;fmul dword [edx+0x38]
add tmpadr, edx, 56
load tmp1, tmpadr, 1
FMUL_FLOAT tmp1

;fld st1
FLD_ST 1

;fmul dword [edx+0x34]
add tmpadr, edx, 52
load tmp1, tmpadr, 1
FMUL_FLOAT tmp1

;fld st2
FLD_ST 2

;fmul dword [edx+0xc]
add tmpadr, edx, 12
load tmp1, tmpadr, 1
FMUL_FLOAT tmp1

;fld st3
FLD_ST 3

;fmul dword [edx+0x10]
add tmpadr, edx, 16
load tmp1, tmpadr, 1
FMUL_FLOAT tmp1

;fld dword [ecx]
load tmp1, ecx, 1
FLD_FLOAT tmp1

;fld st0
FLD_ST 0

;fmul st0, st2
FMUL_ST 2

;fadd dword [ebx]
load tmp1, ebx, 1
FADD_FLOAT tmp1

;fstp dword [ebx]
FSTP_FLOAT
store tmp0, ebx, 1

;fld st0
FLD_ST 0

;fmul st0, st3
FMUL_ST 3

;fadd dword [eax]
load tmp1, eax, 1
FADD_FLOAT tmp1

;fstp dword [eax]
FSTP_FLOAT
store tmp0, eax, 1

;fld st0
FLD_ST 0

;fmul st0, st4
FMUL_ST 4

;fadd dword [edi]
load tmp1, edi, 1
FADD_FLOAT tmp1

;fstp dword [edi]
FSTP_FLOAT
store tmp0, edi, 1

;fmul st0, st4
FMUL_ST 4

;fadd dword [esi]
load tmp1, esi, 1
FADD_FLOAT tmp1

;fstp dword [esi]
FSTP_FLOAT
store tmp0, esi, 1

;fld dword [ecx+0x4]
add tmpadr, ecx, 4
load tmp1, tmpadr, 1
FLD_FLOAT tmp1

;fmul st1, st0
FMUL_TO_ST 1

;fmul st2, st0
FMUL_TO_ST 2

;fmul st3, st0
FMUL_TO_ST 3

;fmulp st4, st0
FMULP_ST 4

;fadd dword [ebx+0x4]
add tmpadr, ebx, 4
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;fstp dword [ebx+0x4]
FSTP_FLOAT
add tmpadr, ebx, 4
store tmp0, tmpadr, 1

;fadd dword [eax+0x4]
add tmpadr, eax, 4
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;fstp dword [eax+0x4]
FSTP_FLOAT
add tmpadr, eax, 4
store tmp0, tmpadr, 1

;fadd dword [edi+0x4]
add tmpadr, edi, 4
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;fstp dword [edi+0x4]
FSTP_FLOAT
add tmpadr, edi, 4
store tmp0, tmpadr, 1

;fadd dword [esi+0x4]
add tmpadr, esi, 4
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;fstp dword [esi+0x4]
FSTP_FLOAT
add tmpadr, esi, 4
store tmp0, tmpadr, 1

;fadd st0, st1
FADD_ST 1

;fld st0
FLD_ST 0

;fmul dword [edx+0x38]
add tmpadr, edx, 56
load tmp1, tmpadr, 1
FMUL_FLOAT tmp1

;fld st1
FLD_ST 1

;fmul dword [edx+0x34]
add tmpadr, edx, 52
load tmp1, tmpadr, 1
FMUL_FLOAT tmp1

;fld st2
FLD_ST 2

;fmul dword [edx+0xc]
add tmpadr, edx, 12
load tmp1, tmpadr, 1
FMUL_FLOAT tmp1

;fld st3
FLD_ST 3

;fmul dword [edx+0x10]
add tmpadr, edx, 16
load tmp1, tmpadr, 1
FMUL_FLOAT tmp1

;fld dword [ecx+0x8]
add tmpadr, ecx, 8
load tmp1, tmpadr, 1
FLD_FLOAT tmp1

;fld st0
FLD_ST 0

;fmul st0, st2
FMUL_ST 2

;fadd dword [ebx+0x8]
add tmpadr, ebx, 8
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;fstp dword [ebx+0x8]
FSTP_FLOAT
add tmpadr, ebx, 8
store tmp0, tmpadr, 1

;fld st0
FLD_ST 0

;fmul st0, st3
FMUL_ST 3

;fadd dword [eax+0x8]
add tmpadr, eax, 8
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;fstp dword [eax+0x8]
FSTP_FLOAT
add tmpadr, eax, 8
store tmp0, tmpadr, 1

;fld st0
FLD_ST 0

;fmul st0, st4
FMUL_ST 4

;fadd dword [edi+0x8]
add tmpadr, edi, 8
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;fstp dword [edi+0x8]
FSTP_FLOAT
add tmpadr, edi, 8
store tmp0, tmpadr, 1

;fmul st0, st4
FMUL_ST 4

;fadd dword [esi+0x8]
add tmpadr, esi, 8
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;fstp dword [esi+0x8]
FSTP_FLOAT
add tmpadr, esi, 8
store tmp0, tmpadr, 1

;fld dword [ecx+0xc]
add tmpadr, ecx, 12
load tmp1, tmpadr, 1
FLD_FLOAT tmp1

;fmul st1, st0
FMUL_TO_ST 1

;fmul st2, st0
FMUL_TO_ST 2

;fmul st3, st0
FMUL_TO_ST 3

;fmulp st4, st0
FMULP_ST 4

;fadd dword [ebx+0xc]
add tmpadr, ebx, 12
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;fstp dword [ebx+0xc]
FSTP_FLOAT
add tmpadr, ebx, 12
store tmp0, tmpadr, 1

;fadd dword [eax+0xc]
add tmpadr, eax, 12
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;fstp dword [eax+0xc]
FSTP_FLOAT
add tmpadr, eax, 12
store tmp0, tmpadr, 1

;fadd dword [edi+0xc]
add tmpadr, edi, 12
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;fstp dword [edi+0xc]
FSTP_FLOAT
add tmpadr, edi, 12
store tmp0, tmpadr, 1

;fadd dword [esi+0xc]
add tmpadr, esi, 12
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;fstp dword [esi+0xc]
FSTP_FLOAT
add tmpadr, esi, 12
store tmp0, tmpadr, 1

;fadd st0, st1
FADD_ST 1

;fld st0
FLD_ST 0

;fmul dword [edx+0x38]
add tmpadr, edx, 56
load tmp1, tmpadr, 1
FMUL_FLOAT tmp1

;fld st1
FLD_ST 1

;fmul dword [edx+0x34]
add tmpadr, edx, 52
load tmp1, tmpadr, 1
FMUL_FLOAT tmp1

;fld st2
FLD_ST 2

;fmul dword [edx+0xc]
add tmpadr, edx, 12
load tmp1, tmpadr, 1
FMUL_FLOAT tmp1

;fld st3
FLD_ST 3

;fmul dword [edx+0x10]
add tmpadr, edx, 16
load tmp1, tmpadr, 1
FMUL_FLOAT tmp1

;fld dword [ecx+0x10]
add tmpadr, ecx, 16
load tmp1, tmpadr, 1
FLD_FLOAT tmp1

;fld st0
FLD_ST 0

;fmul st0, st2
FMUL_ST 2

;fadd dword [ebx+0x10]
add tmpadr, ebx, 16
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;fstp dword [ebx+0x10]
FSTP_FLOAT
add tmpadr, ebx, 16
store tmp0, tmpadr, 1

;fld st0
FLD_ST 0

;fmul st0, st3
FMUL_ST 3

;fadd dword [eax+0x10]
add tmpadr, eax, 16
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;fstp dword [eax+0x10]
FSTP_FLOAT
add tmpadr, eax, 16
store tmp0, tmpadr, 1

;fld st0
FLD_ST 0

;fmul st0, st4
FMUL_ST 4

;fadd dword [edi+0x10]
add tmpadr, edi, 16
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;fstp dword [edi+0x10]
FSTP_FLOAT
add tmpadr, edi, 16
store tmp0, tmpadr, 1

;fmul st0, st4
FMUL_ST 4

;fadd dword [esi+0x10]
add tmpadr, esi, 16
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;fstp dword [esi+0x10]
FSTP_FLOAT
add tmpadr, esi, 16
store tmp0, tmpadr, 1

;fld dword [ecx+0x14]
add tmpadr, ecx, 20
load tmp1, tmpadr, 1
FLD_FLOAT tmp1

;fmul st1, st0
FMUL_TO_ST 1

;fmul st2, st0
FMUL_TO_ST 2

;fmul st3, st0
FMUL_TO_ST 3

;fmulp st4, st0
FMULP_ST 4

;fadd dword [ebx+0x14]
add tmpadr, ebx, 20
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;fstp dword [ebx+0x14]
FSTP_FLOAT
add tmpadr, ebx, 20
store tmp0, tmpadr, 1

;fadd dword [eax+0x14]
add tmpadr, eax, 20
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;fstp dword [eax+0x14]
FSTP_FLOAT
add tmpadr, eax, 20
store tmp0, tmpadr, 1

;fadd dword [edi+0x14]
add tmpadr, edi, 20
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;fstp dword [edi+0x14]
FSTP_FLOAT
add tmpadr, edi, 20
store tmp0, tmpadr, 1

;fadd dword [esi+0x14]
add tmpadr, esi, 20
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;fstp dword [esi+0x14]
FSTP_FLOAT
add tmpadr, esi, 20
store tmp0, tmpadr, 1

;fadd st0, st1
FADD_ST 1

;fld st0
FLD_ST 0

;fmul dword [edx+0x38]
add tmpadr, edx, 56
load tmp1, tmpadr, 1
FMUL_FLOAT tmp1

;fld st1
FLD_ST 1

;fmul dword [edx+0x34]
add tmpadr, edx, 52
load tmp1, tmpadr, 1
FMUL_FLOAT tmp1

;fld st2
FLD_ST 2

;fmul dword [edx+0xc]
add tmpadr, edx, 12
load tmp1, tmpadr, 1
FMUL_FLOAT tmp1

;fld st3
FLD_ST 3

;fmul dword [edx+0x10]
add tmpadr, edx, 16
load tmp1, tmpadr, 1
FMUL_FLOAT tmp1

;fld dword [ecx+0x18]
add tmpadr, ecx, 24
load tmp1, tmpadr, 1
FLD_FLOAT tmp1

;fld st0
FLD_ST 0

;fmul st0, st2
FMUL_ST 2

;fadd dword [ebx+0x18]
add tmpadr, ebx, 24
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;fstp dword [ebx+0x18]
FSTP_FLOAT
add tmpadr, ebx, 24
store tmp0, tmpadr, 1

;fld st0
FLD_ST 0

;fmul st0, st3
FMUL_ST 3

;fadd dword [eax+0x18]
add tmpadr, eax, 24
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;fstp dword [eax+0x18]
FSTP_FLOAT
add tmpadr, eax, 24
store tmp0, tmpadr, 1

;fld st0
FLD_ST 0

;fmul st0, st4
FMUL_ST 4

;fadd dword [edi+0x18]
add tmpadr, edi, 24
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;fstp dword [edi+0x18]
FSTP_FLOAT
add tmpadr, edi, 24
store tmp0, tmpadr, 1

;fmul st0, st4
FMUL_ST 4

;fadd dword [esi+0x18]
add tmpadr, esi, 24
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;fstp dword [esi+0x18]
FSTP_FLOAT
add tmpadr, esi, 24
store tmp0, tmpadr, 1

;fld dword [ecx+0x1c]
add tmpadr, ecx, 28
load tmp1, tmpadr, 1
FLD_FLOAT tmp1

;fmul st1, st0
FMUL_TO_ST 1

;fmul st2, st0
FMUL_TO_ST 2

;fmul st3, st0
FMUL_TO_ST 3

;fmulp st4, st0
FMULP_ST 4

;fadd dword [ebx+0x1c]
add tmpadr, ebx, 28
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;fstp dword [ebx+0x1c]
FSTP_FLOAT
add tmpadr, ebx, 28
store tmp0, tmpadr, 1

;fadd dword [eax+0x1c]
add tmpadr, eax, 28
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;fstp dword [eax+0x1c]
FSTP_FLOAT
add tmpadr, eax, 28
store tmp0, tmpadr, 1

;fadd dword [edi+0x1c]
add tmpadr, edi, 28
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;fstp dword [edi+0x1c]
FSTP_FLOAT
add tmpadr, edi, 28
store tmp0, tmpadr, 1

;fadd dword [esi+0x1c]
add tmpadr, esi, 28
load tmp1, tmpadr, 1
FADD_FLOAT tmp1

;fstp dword [esi+0x1c]
FSTP_FLOAT
add tmpadr, esi, 28
store tmp0, tmpadr, 1

;lea eax, [eax+0x20]
add eax, eax, 32

;lea ebx, [ebx+0x20]
add ebx, ebx, 32

;lea ecx, [ecx+0x20]
add ecx, ecx, 32

;lea edi, [edi+0x20]
add edi, edi, 32

;lea esi, [esi+0x20]
add esi, esi, 32

;cmp eax, ebp
cmovult eax, ebp, tmpcnd, 0, 1

;jb near loc_40EA14
ctcallz tmpcnd, loc_40EA14

tcall loc_40EBAA
endp

proc loc_40EBAA
;fstp st0
FSTP_ST 0

;fstp st0
FSTP_ST 0

;pop ebx
POP ebx

;pop ebp
POP ebp

;pop esi
POP esi

;pop edi
POP edi

;ret 0x4
POP tmp1
add esp, esp, 4
tcall tmp1
endp

